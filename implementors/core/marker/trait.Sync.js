(function() {var implementors = {};
implementors["aml_parse"] = [{"text":"impl Sync for UsageError","synthetic":true,"types":[]}];
implementors["tartan_acpi"] = [{"text":"impl Sync for MethodSignature","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ParserState&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for NameSeg","synthetic":true,"types":[]},{"text":"impl Sync for NameString","synthetic":true,"types":[]},{"text":"impl Sync for PathAnchor","synthetic":true,"types":[]},{"text":"impl Sync for SimpleName","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for SuperName&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ComputationalData&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Buffer&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Package&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for VarPackage&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for PackageElement&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for DataObject&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for DataRefObject&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for TermObject&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for TermArg&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for NameSpaceModifier&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for NamedObject&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for FieldFlags","synthetic":true,"types":[]},{"text":"impl Sync for AccessType","synthetic":true,"types":[]},{"text":"impl Sync for UpdateRule","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for FieldElement&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for AccessAttrib","synthetic":true,"types":[]},{"text":"impl Sync for MethodFlags","synthetic":true,"types":[]},{"text":"impl Sync for RegionSpace","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for StatementOpcode&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ReferenceExpressionOpcode&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for ExpressionOpcode&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for MatchOpcode","synthetic":true,"types":[]},{"text":"impl Sync for ObjectType","synthetic":true,"types":[]},{"text":"impl Sync for ArgObject","synthetic":true,"types":[]},{"text":"impl Sync for LocalObject","synthetic":true,"types":[]},{"text":"impl Sync for DebugObject","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for AMLTable&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for RootDescriptionPointerV1","synthetic":true,"types":[]},{"text":"impl Sync for RootDescriptionPointerV2","synthetic":true,"types":[]},{"text":"impl Sync for DescriptionHeader","synthetic":true,"types":[]},{"text":"impl Sync for FixedDescription","synthetic":true,"types":[]},{"text":"impl Sync for GenericAddress","synthetic":true,"types":[]},{"text":"impl Sync for AddressSpace","synthetic":true,"types":[]},{"text":"impl Sync for AccessSize","synthetic":true,"types":[]},{"text":"impl Sync for FixedFlags","synthetic":true,"types":[]}];
implementors["tartan_arch"] = [{"text":"impl Sync for ControlRegister","synthetic":true,"types":[]},{"text":"impl Sync for StatusRegister","synthetic":true,"types":[]},{"text":"impl Sync for RoundingMode","synthetic":true,"types":[]},{"text":"impl Sync for Exceptions","synthetic":true,"types":[]},{"text":"impl Sync for Kind","synthetic":true,"types":[]},{"text":"impl Sync for Source","synthetic":true,"types":[]},{"text":"impl Sync for VectorEntry","synthetic":true,"types":[]},{"text":"impl Sync for VectorTable","synthetic":true,"types":[]},{"text":"impl Sync for VectorBaseAddressRegister","synthetic":true,"types":[]},{"text":"impl Sync for MaskRegister","synthetic":true,"types":[]},{"text":"impl Sync for SyndromeRegister","synthetic":true,"types":[]},{"text":"impl Sync for Class","synthetic":true,"types":[]},{"text":"impl Sync for ExceptionLevel","synthetic":true,"types":[]},{"text":"impl Sync for StackPointerSelect","synthetic":true,"types":[]},{"text":"impl Sync for TaskStateSegmentHeader","synthetic":true,"types":[]},{"text":"impl Sync for ControlRegister8","synthetic":true,"types":[]},{"text":"impl Sync for ExtendedFeatureEnableRegister","synthetic":true,"types":[]},{"text":"impl Sync for BasicTaskStateSegment","synthetic":true,"types":[]},{"text":"impl Sync for TaskStateSegmentHeader","synthetic":true,"types":[]},{"text":"impl Sync for PrivilegedStack","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; Sync for TaskStateSegmentBitmaps&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for BasicFeatures","synthetic":true,"types":[]},{"text":"impl Sync for ExtendedFeatures","synthetic":true,"types":[]},{"text":"impl Sync for AddressSpaceSizes","synthetic":true,"types":[]},{"text":"impl Sync for InterruptVector","synthetic":true,"types":[]},{"text":"impl Sync for InterruptDescriptorTableRegister","synthetic":true,"types":[]},{"text":"impl Sync for APICBaseRegister","synthetic":true,"types":[]},{"text":"impl Sync for ControlRegister2","synthetic":true,"types":[]},{"text":"impl Sync for ControlRegister3","synthetic":true,"types":[]},{"text":"impl Sync for Level2PageTableEntry","synthetic":true,"types":[]},{"text":"impl Sync for Level1PageTableEntry","synthetic":true,"types":[]},{"text":"impl Sync for GlobalDescriptorTableRegister","synthetic":true,"types":[]},{"text":"impl Sync for LocalDescriptorTableRegister","synthetic":true,"types":[]},{"text":"impl Sync for TaskRegister","synthetic":true,"types":[]},{"text":"impl Sync for SegmentRegister","synthetic":true,"types":[]},{"text":"impl Sync for Selector","synthetic":true,"types":[]},{"text":"impl Sync for SystemDescriptorType","synthetic":true,"types":[]},{"text":"impl Sync for GenericDescriptor","synthetic":true,"types":[]},{"text":"impl Sync for GenericDescriptorFlags","synthetic":true,"types":[]},{"text":"impl Sync for SegmentDescriptor","synthetic":true,"types":[]},{"text":"impl Sync for SegmentDescriptorFlags","synthetic":true,"types":[]},{"text":"impl Sync for GateDescriptor","synthetic":true,"types":[]},{"text":"impl Sync for GateDescriptorFlags","synthetic":true,"types":[]},{"text":"impl&lt;T:&nbsp;?Sized&gt; Sync for IOPermissionBitmap&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for FlagRegister","synthetic":true,"types":[]},{"text":"impl Sync for ControlRegister0","synthetic":true,"types":[]},{"text":"impl Sync for ControlRegister4","synthetic":true,"types":[]},{"text":"impl Sync for ExtendedControlRegister0","synthetic":true,"types":[]}];
implementors["tartan_devicetree"] = [{"text":"impl&lt;'a&gt; Sync for Tree&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for StructureData&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Value&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for MemoryReservation","synthetic":true,"types":[]}];
implementors["tartan_elf"] = [{"text":"impl&lt;Addr&gt; Sync for Header&lt;Addr&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Addr: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for HeaderIdent","synthetic":true,"types":[]},{"text":"impl Sync for FileClass","synthetic":true,"types":[]},{"text":"impl Sync for Endianness","synthetic":true,"types":[]},{"text":"impl Sync for OSABI","synthetic":true,"types":[]},{"text":"impl Sync for FileType","synthetic":true,"types":[]},{"text":"impl Sync for Machine","synthetic":true,"types":[]},{"text":"impl Sync for ProgramHeader32","synthetic":true,"types":[]},{"text":"impl Sync for ProgramHeader64","synthetic":true,"types":[]},{"text":"impl Sync for ProgramSegmentType","synthetic":true,"types":[]},{"text":"impl Sync for ProgramSegmentFlags","synthetic":true,"types":[]},{"text":"impl&lt;Addr&gt; Sync for SectionHeader&lt;Addr&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;Addr: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for SectionType","synthetic":true,"types":[]},{"text":"impl Sync for SectionFlags","synthetic":true,"types":[]}];
implementors["tartan_kernel"] = [{"text":"impl&lt;'a&gt; !Sync for Allocator&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for BlockList&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for CursorMut&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for BlockHeader","synthetic":true,"types":[]},{"text":"impl Sync for GlobalDescriptorTable","synthetic":true,"types":[]},{"text":"impl Sync for InterruptDescriptorTable","synthetic":true,"types":[]}];
implementors["tartan_parsers"] = [{"text":"impl&lt;'a, I&gt; Sync for Position&lt;'a, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;'a, I&gt; Sync for ErrorWithPosition&lt;'a, I&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;I: Sync,&nbsp;</span>","synthetic":true,"types":[]}];
implementors["tartan_pci"] = [{"text":"impl Sync for IOConfigAccess","synthetic":true,"types":[]},{"text":"impl Sync for ConfigSelector","synthetic":true,"types":[]},{"text":"impl Sync for MemMapConfigAccess","synthetic":true,"types":[]},{"text":"impl Sync for HeaderRegister0","synthetic":true,"types":[]},{"text":"impl Sync for HeaderRegister1","synthetic":true,"types":[]},{"text":"impl Sync for HeaderRegister2","synthetic":true,"types":[]},{"text":"impl Sync for HeaderRegister3","synthetic":true,"types":[]},{"text":"impl Sync for Type0HeaderRegister11","synthetic":true,"types":[]},{"text":"impl Sync for Type0HeaderRegister13","synthetic":true,"types":[]},{"text":"impl Sync for Type0HeaderRegister15","synthetic":true,"types":[]},{"text":"impl Sync for CommandRegister","synthetic":true,"types":[]},{"text":"impl Sync for StatusRegister","synthetic":true,"types":[]},{"text":"impl Sync for SelfTest","synthetic":true,"types":[]},{"text":"impl Sync for BaseAddressRegister","synthetic":true,"types":[]},{"text":"impl Sync for AddressSpace","synthetic":true,"types":[]},{"text":"impl Sync for AddressWidth","synthetic":true,"types":[]},{"text":"impl Sync for GenericCapabilityRegister","synthetic":true,"types":[]},{"text":"impl Sync for CapabilityEntry","synthetic":true,"types":[]}];
implementors["tartan_serial"] = [{"text":"impl&lt;'a&gt; Sync for UARTPL011&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for RegisterBlock","synthetic":true,"types":[]},{"text":"impl Sync for ActualRegisterAccess","synthetic":true,"types":[]},{"text":"impl&lt;A&gt; Sync for UART16550&lt;A&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;A: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl&lt;T&gt; Sync for UARTWriteAdapter&lt;T&gt; <span class=\"where fmt-newline\">where<br>&nbsp;&nbsp;&nbsp;&nbsp;T: Sync,&nbsp;</span>","synthetic":true,"types":[]},{"text":"impl Sync for LineMode","synthetic":true,"types":[]},{"text":"impl Sync for Parity","synthetic":true,"types":[]},{"text":"impl Sync for NullUART","synthetic":true,"types":[]}];
implementors["tartan_uefi"] = [{"text":"impl Sync for BootAllocator","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for OutputStream&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; Sync for Logger&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for SimpleTextInput","synthetic":true,"types":[]},{"text":"impl Sync for SimpleTextOutput","synthetic":true,"types":[]},{"text":"impl Sync for SimpleTextOutputMode","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for LoadedImage&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for SimpleFileSystem","synthetic":true,"types":[]},{"text":"impl Sync for File","synthetic":true,"types":[]},{"text":"impl Sync for FileMode","synthetic":true,"types":[]},{"text":"impl Sync for FileAttributes","synthetic":true,"types":[]},{"text":"impl Sync for Handle","synthetic":true,"types":[]},{"text":"impl Sync for Revision","synthetic":true,"types":[]},{"text":"impl Sync for Status","synthetic":true,"types":[]},{"text":"impl Sync for TableHeader","synthetic":true,"types":[]},{"text":"impl&lt;'a&gt; !Sync for SystemTable&lt;'a&gt;","synthetic":true,"types":[]},{"text":"impl Sync for RuntimeServices","synthetic":true,"types":[]},{"text":"impl Sync for BootServices","synthetic":true,"types":[]},{"text":"impl Sync for GUID","synthetic":true,"types":[]},{"text":"impl Sync for ConfigurationTable","synthetic":true,"types":[]},{"text":"impl Sync for MemoryDescriptor","synthetic":true,"types":[]},{"text":"impl Sync for MemoryMap","synthetic":true,"types":[]},{"text":"impl Sync for MemoryType","synthetic":true,"types":[]},{"text":"impl Sync for AllocateType","synthetic":true,"types":[]},{"text":"impl Sync for MemoryAttributes","synthetic":true,"types":[]},{"text":"impl Sync for OpenProtocolAttributes","synthetic":true,"types":[]}];
if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()