var searchIndex = JSON.parse('{\
"aml_parse":{"doc":"","i":[[3,"UsageError","aml_parse","",null,null],[5,"main","","",null,[[],[["result",4],["box",3]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],[["result",4],["error",3]]]]],"p":[[3,"UsageError"]]},\
"tartan_acpi":{"doc":"Support for Advanced Configuration and Power Interface","i":[[3,"RootDescriptionPointerV1","tartan_acpi","Root System Description Pointer (RSDP) used in ACPI 1.0",null,null],[12,"signature","","",0,null],[12,"checksum","","",0,null],[12,"oem_id","","",0,null],[12,"revision","","",0,null],[12,"root_description_table_addr","","",0,null],[3,"RootDescriptionPointerV2","","Extended RDSP defined by ACPI 2.0",null,null],[12,"v1","","",1,null],[12,"length","","",1,null],[12,"extended_description_table_addr","","",1,null],[12,"extended_checksum","","",1,null],[3,"DescriptionHeader","","Common table header defined as `DESCRIPTION_HEADER` in the…",null,null],[12,"signature","","",2,null],[12,"length","","",2,null],[12,"revision","","",2,null],[12,"checksum","","",2,null],[12,"oem_id","","",2,null],[12,"oem_table_id","","",2,null],[12,"oem_revision","","",2,null],[12,"creator_id","","",2,null],[12,"creator_revision","","",2,null],[3,"FixedDescription","","Fixed ACPI Description Table (FADT)",null,null],[12,"header","","",3,null],[12,"firmware_api_ctrl_addr_32","","",3,null],[12,"diff_description_addr_32","","",3,null],[12,"preferred_power_profile","","",3,null],[12,"sci_interrupt","","",3,null],[12,"smi_command_port","","",3,null],[12,"smi_command_acpi_enable","","",3,null],[12,"smi_command_acpi_disable","","",3,null],[12,"smi_command_s4_bios_enter","","",3,null],[12,"smi_command_cpu_state_enable","","",3,null],[12,"pm_event_port_block_1a_32","","",3,null],[12,"pm_event_port_block_1b_32","","",3,null],[12,"pm_cntrl_port_block_1a_32","","",3,null],[12,"pm_cntrl_port_block_1b_32","","",3,null],[12,"pm_cntrl_port_block_2_32","","",3,null],[12,"pm_timer_port_block_32","","",3,null],[12,"general_event_port_block_0_32","","",3,null],[12,"general_event_port_block_1_32","","",3,null],[12,"pm_event_port_block_1_length","","",3,null],[12,"pm_cntrl_port_block_1_length","","",3,null],[12,"pm_cntrl_port_block_2_length","","",3,null],[12,"pm_timer_port_block_length","","",3,null],[12,"general_event_port_block_0_length","","",3,null],[12,"general_event_port_block_1_length","","",3,null],[12,"general_event_port_block_1_base","","",3,null],[12,"smi_command_c_state_enable","","",3,null],[12,"cpu_c2_latency","","",3,null],[12,"cpu_c3_latency","","",3,null],[12,"cache_flush_stride_count","","",3,null],[12,"cache_flush_stride_width","","",3,null],[12,"cpu_duty_cycle_register_offset","","",3,null],[12,"cpu_duty_cycle_register_width","","",3,null],[12,"rtc_day_alarm_index","","",3,null],[12,"rtc_month_alarm_index","","",3,null],[12,"rtc_century_alarm_index","","",3,null],[12,"pc_boot_architecture_flags","","",3,null],[12,"flags","","",3,null],[12,"reset_register","","",3,null],[12,"reset_register_value","","",3,null],[12,"arm_boot_architecture_flags","","",3,null],[12,"revision_minor","","",3,null],[12,"firmware_api_ctrl_addr_64","","",3,null],[12,"diff_description_addr_64","","",3,null],[12,"pm_event_port_block_1a_64","","",3,null],[12,"pm_event_port_block_1b_64","","",3,null],[12,"pm_control_port_block_1a_64","","",3,null],[12,"pm_control_port_block_1b_64","","",3,null],[12,"pm_control_port_block_2_64","","",3,null],[12,"pm_timer_port_block_64","","",3,null],[12,"general_event_port_block_0_64","","",3,null],[12,"general_event_port_block_1_64","","",3,null],[12,"sleep_control_register_addr","","",3,null],[12,"sleep_status_register_addr","","",3,null],[12,"hypervisor_vendor","","",3,null],[3,"GenericAddress","","Extended address structure defined in ACPI 2.0 to support…",null,null],[3,"AddressSpace","","Type of register address",null,null],[3,"AccessSize","","Memory width used to read/write from a register",null,null],[3,"FixedFlags","","Support flags from Fixed ACPI Description Table",null,null],[0,"aml","","Abstract syntax tree for ACPI Machine Language",null,null],[3,"AMLTable","tartan_acpi::aml","",null,null],[12,"header","","",4,null],[12,"body","","",4,null],[0,"parse","","Parsers for AML bytecode.",null,null],[5,"parse_table","tartan_acpi::aml::parse","Parse an ACPI table that contains AML, including the header",null,[[],[["result",4],["errorwithposition",3],["amltable",3]]]],[0,"state","","Parser context needed to disambiguate grammar",null,null],[3,"MethodSignature","tartan_acpi::aml::parse::state","Expected argument count for a method in the ACPI namespace.",null,null],[12,"name","","",5,null],[12,"arg_count","","",5,null],[3,"ParserState","","Input data plus context needed to disambiguate grammar",null,null],[12,"data","","",6,null],[12,"current_scope","","",6,null],[12,"method_signatures","","",6,null],[3,"Position","","Helper struct that prints human-readable position…",null,null],[12,"state","","",7,null],[12,"full_input","","",7,null],[3,"ErrorWithPosition","","A parser error with position info useful for printing…",null,null],[12,"error","","",8,null],[12,"full_input","","",8,null],[8,"ReplaceableParseError","","Helper trait used to convert a parser error from one input…",null,null],[16,"From","","",9,null],[10,"replace_input","","",9,[[]]],[11,"new","","",5,[[]]],[11,"new","","",6,[[]]],[11,"position_in","","",6,[[],["position",3]]],[11,"get_arg_count","","Get the argument count of the named method, if it is…",6,[[["namestring",3]],["option",4]]],[11,"in_scope","","Execute a parser in a new scope relative to the current…",6,[[["namestring",3]],["amlparseresult",6]]],[11,"lift","","Wraps a byte-oriented parser to work with `ParserState`",6,[[]]],[11,"new","","",8,[[["verboseerror",3],["err",4]]]],[0,"name","tartan_acpi::aml::parse","Name objects, defined in §20.2.2",null,null],[5,"super_name_minus_invoke","tartan_acpi::aml::parse::name","Parse a [`SuperName`], but do not allow method invocations.",null,[[["parserstate",3]],[["supername",4],["amlparseresult",6],["amlparseerror",8]]]],[5,"parse_target","","Grammar:",null,[[["parserstate",3]],[["amlparseresult",6],["target",6],["amlparseerror",8]]]],[0,"data","tartan_acpi::aml::parse","Data objects, defined in §20.2.3",null,null],[0,"term","","Terms, defined in §20.2.5",null,null],[0,"misc","","Miscellaneous objects, defined in §20.2.6",null,null],[6,"AMLParseResult","","Alias for type returned by AML parsers",null,null],[8,"Parse","","An object that can be parsed from AML bytecode",null,null],[10,"parse","","Try to parse an object of this type from the given input…",10,[[["parserstate",3]],[["amlparseerror",8],["amlparseresult",6]]]],[8,"AMLParseError","","Trait \\\"alias\\\" for error type used by AML parsers",null,null],[0,"name","tartan_acpi::aml","Names of objects, arguments, and references",null,null],[3,"NameSeg","tartan_acpi::aml::name","Four-character name segment, allowing underscores,…",null,null],[12,"0","","",11,null],[3,"NameString","","Fully qualified object path, either absolute or relative.",null,null],[12,"anchor","","",12,null],[12,"path","","",12,null],[4,"PathAnchor","","Indicates whether a name is absolute or relative to the…",null,null],[13,"Root","","",13,null],[13,"Parent","","",13,null],[4,"SimpleName","","A named object or variable.",null,null],[13,"Name","","",14,null],[13,"Arg","","",14,null],[13,"Local","","",14,null],[4,"SuperName","","A named object, variable, reference expression, or debug…",null,null],[13,"Name","","",15,null],[13,"Debug","","",15,null],[13,"Reference","","",15,null],[5,"to_path","","Convert a list of segments in various formats into a path…",null,[[],[["vec",3],["nameseg",3]]]],[6,"Target","","Location to store the result of an operation",null,null],[11,"empty","","",12,[[]]],[11,"new","","",12,[[]]],[11,"new_root","","",12,[[]]],[11,"new_parent","","",12,[[]]],[11,"resolve_as_decl","","Convert to an absolute namespace path in the context of…",12,[[],[["option",4],["vec",3]]]],[11,"resolve_as_ref","","List all possible absolute pathnames that this name may…",12,[[],[["vec",3],["vec",3]]]],[0,"data","tartan_acpi::aml","Data resources",null,null],[3,"Buffer","tartan_acpi::aml::data","Block of raw bytes, optionally initialized in whole or in…",null,null],[12,"size","","",16,null],[12,"initializer","","",16,null],[3,"Package","","Group of related data elements, optionally inititalized in…",null,null],[12,"count","","",17,null],[12,"initializers","","",17,null],[3,"VarPackage","","Group of related data elements, with a number of elements…",null,null],[12,"count","","",18,null],[12,"initializers","","",18,null],[4,"ComputationalData","","Single value resolved at compile time.",null,null],[13,"Byte","","",19,null],[13,"Word","","",19,null],[13,"DWord","","",19,null],[13,"QWord","","",19,null],[13,"String","","",19,null],[13,"Zero","","",19,null],[13,"One","","",19,null],[13,"Ones","","",19,null],[13,"Revision","","",19,null],[13,"Buffer","","",19,null],[4,"PackageElement","","A name or reference that constitutes part of a [`Package`]…",null,null],[13,"Ref","","",20,null],[13,"Name","","",20,null],[4,"DataObject","","Data resolved at compile time, possibly grouped in a…",null,null],[13,"Data","","",21,null],[13,"Package","","",21,null],[13,"VarPackage","","",21,null],[4,"DataRefObject","","",null,null],[13,"Data","","",22,null],[13,"ObjectReference","","",22,null],[13,"DefinitionBlockHandle","","",22,null],[0,"term","tartan_acpi::aml","Top-level terms and opcodes.",null,null],[3,"FieldFlags","tartan_acpi::aml::term","Rules for reading and writing a field.",null,null],[12,"access_type","","",23,null],[12,"lock","","",23,null],[12,"update_rule","","",23,null],[3,"MethodFlags","","Information about how to call a method.",null,null],[12,"arg_count","","",24,null],[12,"serialized","","",24,null],[12,"sync_level","","",24,null],[4,"TermObject","","Top-level, most general term type where the value (if any)…",null,null],[13,"Modifier","","",25,null],[13,"Named","","",25,null],[13,"Statement","","",25,null],[13,"Expression","","",25,null],[4,"TermArg","","Term that resolves to a value.",null,null],[13,"Expression","","",26,null],[13,"Data","","",26,null],[13,"Arg","","",26,null],[13,"Local","","",26,null],[13,"Name","","",26,null],[4,"NameSpaceModifier","","Term that attaches a name to its argument.",null,null],[13,"Alias","","Create a new `alias` for existing named `source` object.",27,null],[12,"source","tartan_acpi::aml::term::NameSpaceModifier","",28,null],[12,"alias","","",28,null],[13,"Name","tartan_acpi::aml::term","Attach a name to an anonymous data or reference.",27,null],[13,"Scope","","Evaluate the contained terms within a new scope.",27,null],[4,"NamedObject","","Term that defines an object with a name.",null,null],[13,"BankField","","Declare fields that can only be accessed after writing to…",29,null],[12,"region_name","tartan_acpi::aml::term::NamedObject","",30,null],[12,"bank_name","","",30,null],[12,"bank_value","","",30,null],[12,"flags","","",30,null],[12,"elements","","",30,null],[13,"CreateBitField","tartan_acpi::aml::term","Declare a single-bit field within a buffer",29,null],[12,"source_buffer","tartan_acpi::aml::term::NamedObject","",31,null],[12,"bit_index","","",31,null],[12,"name","","",31,null],[13,"CreateByteField","tartan_acpi::aml::term","Create a one-byte-wide field within a buffer",29,null],[12,"source_buffer","tartan_acpi::aml::term::NamedObject","",32,null],[12,"byte_index","","",32,null],[12,"name","","",32,null],[13,"CreateDWordField","tartan_acpi::aml::term","Declare a four-byte-wide field within a buffer",29,null],[12,"source_buffer","tartan_acpi::aml::term::NamedObject","",33,null],[12,"byte_index","","",33,null],[12,"name","","",33,null],[13,"CreateField","tartan_acpi::aml::term","Declare an arbitrary-width field within a buffer",29,null],[12,"source_buffer","tartan_acpi::aml::term::NamedObject","",34,null],[12,"bit_index","","",34,null],[12,"num_bits","","",34,null],[12,"name","","",34,null],[13,"CreateQWordField","tartan_acpi::aml::term","Declare an eight-byte-wide field within a buffer",29,null],[12,"source_buffer","tartan_acpi::aml::term::NamedObject","",35,null],[12,"byte_index","","",35,null],[12,"name","","",35,null],[13,"CreateWordField","tartan_acpi::aml::term","Declare a two-byte-wide field within a buffer",29,null],[12,"source_buffer","tartan_acpi::aml::term::NamedObject","",36,null],[12,"byte_index","","",36,null],[12,"name","","",36,null],[13,"DataTableRegion","tartan_acpi::aml::term","Allow an ACPI table indexed in the XSDT to be used as a…",29,null],[12,"name","tartan_acpi::aml::term::NamedObject","",37,null],[12,"signature","","",37,null],[12,"oem_id","","",37,null],[12,"oem_table_id","","",37,null],[13,"Device","tartan_acpi::aml::term","Declare a device and its associated fields, methods, and…",29,null],[12,"name","tartan_acpi::aml::term::NamedObject","",38,null],[12,"body","","",38,null],[13,"Event","tartan_acpi::aml::term","Declare a waitable synchronization object",29,null],[13,"External","","Declare an object that is defined in another ACPI table",29,null],[12,"name","tartan_acpi::aml::term::NamedObject","",39,null],[12,"object_type","","",39,null],[12,"argument_count","","",39,null],[13,"Field","tartan_acpi::aml::term","Declare a group of fields",29,null],[12,"region_name","tartan_acpi::aml::term::NamedObject","",40,null],[12,"flags","","",40,null],[12,"elements","","",40,null],[13,"IndexField","tartan_acpi::aml::term","Declare a group of field that must be accessed by writing…",29,null],[12,"index_name","tartan_acpi::aml::term::NamedObject","",41,null],[12,"data_name","","",41,null],[12,"flags","","",41,null],[12,"elements","","",41,null],[13,"Method","tartan_acpi::aml::term","Declare a control method",29,null],[12,"name","tartan_acpi::aml::term::NamedObject","",42,null],[12,"flags","","",42,null],[12,"body","","",42,null],[13,"Mutex","tartan_acpi::aml::term","Declare an acquirable mutex",29,null],[12,"name","tartan_acpi::aml::term::NamedObject","",43,null],[12,"sync_level","","",43,null],[13,"OperationRegion","tartan_acpi::aml::term","Declare an address space that can be used by fields",29,null],[12,"name","tartan_acpi::aml::term::NamedObject","",44,null],[12,"region_space","","",44,null],[12,"offset","","",44,null],[12,"length","","",44,null],[13,"PowerResource","tartan_acpi::aml::term","Declare a power resource object",29,null],[12,"name","tartan_acpi::aml::term::NamedObject","",45,null],[12,"system_level","","",45,null],[12,"resource_order","","",45,null],[12,"body","","",45,null],[13,"Processor","tartan_acpi::aml::term","Declare a processor and associated register block",29,null],[12,"name","tartan_acpi::aml::term::NamedObject","",46,null],[12,"id","","",46,null],[12,"register_block_addr","","",46,null],[12,"register_block_length","","",46,null],[12,"body","","",46,null],[13,"ThermalZone","tartan_acpi::aml::term","Declare a thermal zone namespace",29,null],[12,"name","tartan_acpi::aml::term::NamedObject","",47,null],[12,"body","","",47,null],[4,"AccessType","tartan_acpi::aml::term","Width used to access a field.",null,null],[13,"Any","","",48,null],[13,"Byte","","",48,null],[13,"Word","","",48,null],[13,"DWord","","",48,null],[13,"QWord","","",48,null],[13,"Buffer","","",48,null],[4,"UpdateRule","","Indicates what to do with unused bits when writing a field.",null,null],[13,"Preserve","","",49,null],[13,"WriteAsOnes","","",49,null],[13,"WriteAsZeros","","",49,null],[4,"FieldElement","","A substructure of a field.",null,null],[13,"Named","","A named bitfield.",50,null],[12,"name","tartan_acpi::aml::term::FieldElement","",51,null],[12,"bit_length","","",51,null],[13,"Reserved","tartan_acpi::aml::term","Indicates that the next most significant `bit_length` bits…",50,null],[12,"bit_length","tartan_acpi::aml::term::FieldElement","",52,null],[13,"AccessAs","tartan_acpi::aml::term","Sets access information for following fields.",50,null],[13,"ConnectNamed","","Indicates that following fields should be accessed with…",50,null],[13,"ConnectBuffer","","Indicates that following fields should be accessed with…",50,null],[4,"AccessAttrib","","Additional information about how a field is accessed.",null,null],[13,"None","","",53,null],[13,"Quick","","",53,null],[13,"SendReceive","","",53,null],[13,"Byte","","",53,null],[13,"Word","","",53,null],[13,"Block","","",53,null],[13,"ProcessCall","","",53,null],[13,"BlockProcessCall","","",53,null],[13,"Bytes","","",53,null],[13,"RawBytes","","",53,null],[13,"RawProcessBytes","","",53,null],[4,"RegionSpace","","Address space used to access a field.",null,null],[13,"SystemMemory","","",54,null],[13,"SystemIO","","",54,null],[13,"PCIConfig","","",54,null],[13,"EmbeddedControl","","",54,null],[13,"SMBus","","",54,null],[13,"SystemCMOS","","",54,null],[13,"PCIBarTarget","","",54,null],[13,"IPMI","","",54,null],[13,"GeneralPurposeIO","","",54,null],[13,"GenericSerialBus","","",54,null],[13,"PCC","","",54,null],[13,"OEMDefined","","",54,null],[4,"StatementOpcode","","Terminal operation that does not evaluate to a value,…",null,null],[13,"Break","","Break from a loop",55,null],[13,"BreakPoint","","Trigger a debugger breakpoint",55,null],[13,"Continue","","Continue to the next loop iteration",55,null],[13,"Fatal","","Signal an error that requires a system shutdown",55,null],[12,"fatal_type","tartan_acpi::aml::term::StatementOpcode","",56,null],[12,"code","","",56,null],[12,"arg","","",56,null],[13,"If","tartan_acpi::aml::term","Branch on a predicate",55,null],[12,"predicate","tartan_acpi::aml::term::StatementOpcode","",57,null],[12,"if_true","","",57,null],[12,"if_false","","",57,null],[13,"Load","tartan_acpi::aml::term","Load a dynamically-generated SSDT from a field, region, or…",55,null],[12,"name","tartan_acpi::aml::term::StatementOpcode","",58,null],[12,"definition_block_handle","","",58,null],[13,"NoOp","tartan_acpi::aml::term","Do nothing",55,null],[13,"Notify","","Send a signal value to a device/processor/zone",55,null],[12,"device_or_zone","tartan_acpi::aml::term::StatementOpcode","",59,null],[12,"value","","",59,null],[13,"Release","tartan_acpi::aml::term","Release a held mutex",55,null],[12,"mutex","tartan_acpi::aml::term::StatementOpcode","",60,null],[13,"Reset","tartan_acpi::aml::term","Clear the signalled state of an event object",55,null],[12,"event","tartan_acpi::aml::term::StatementOpcode","",61,null],[13,"Return","tartan_acpi::aml::term","Exit the current method and yield the given value to the…",55,null],[13,"Signal","","Signal to one thread waiting on the event",55,null],[12,"event","tartan_acpi::aml::term::StatementOpcode","",62,null],[13,"Sleep","tartan_acpi::aml::term","Delay for at least the given milliseconds, releasing the…",55,null],[12,"milliseconds","tartan_acpi::aml::term::StatementOpcode","",63,null],[13,"Stall","tartan_acpi::aml::term","Delay for at least the given microseconds, but do not…",55,null],[12,"microseconds","tartan_acpi::aml::term::StatementOpcode","",64,null],[13,"While","tartan_acpi::aml::term","Execute a series of statements as long as the predicate is…",55,null],[12,"predicate","tartan_acpi::aml::term::StatementOpcode","",65,null],[12,"body","","",65,null],[4,"ReferenceExpressionOpcode","tartan_acpi::aml::term","Terminal operation that evaluates to a reference.",null,null],[13,"RefOf","","Create a reference to the given name",66,null],[13,"Deref","","Get the target of a reference",66,null],[13,"Index","","Create a reference to an index within a buffer",66,null],[12,"source","tartan_acpi::aml::term::ReferenceExpressionOpcode","",67,null],[12,"index","","",67,null],[12,"result","","",67,null],[13,"Invoke","tartan_acpi::aml::term","Execute a control method",66,null],[4,"ExpressionOpcode","","Terminal operation that evaluates to a value or reference.",null,null],[13,"RefExpression","","",68,null],[13,"Buffer","","",68,null],[13,"Package","","",68,null],[13,"VarPackage","","",68,null],[13,"Acquire","","Try to acquire a mutex, returning true if the attempt…",68,null],[12,"mutex","tartan_acpi::aml::term::ExpressionOpcode","",69,null],[12,"timeout","","",69,null],[13,"Add","tartan_acpi::aml::term","Add two integers",68,null],[13,"BitwiseAnd","","Compute a bitwise AND of two integers",68,null],[13,"Concat","","Concatenate two strings or buffers",68,null],[13,"ConcatRes","","Concatenate two buffers containing resource templates",68,null],[13,"CondRefOf","","Try to create a reference, returning false if it is not…",68,null],[13,"CopyObject","","Update the destination with a copy of the given value,…",68,null],[13,"Decrement","","Decrement an integer variable",68,null],[13,"Divide","","Perform integer (quotient-remainder) division",68,null],[12,"dividend","tartan_acpi::aml::term::ExpressionOpcode","",70,null],[12,"divisor","","",70,null],[12,"remainder","","",70,null],[12,"quotient","","",70,null],[13,"FindSetLeftBit","tartan_acpi::aml::term","Get the index of the most-significant set bit in a value",68,null],[13,"FindSetRightBit","","Get the index of the least-significant set bit in a value",68,null],[13,"FromBCD","","Decode a series of binary-coded decimal nibbles into an…",68,null],[13,"Increment","","Increment an integer variable",68,null],[13,"LogicalAnd","","Evaluate to true if both arguments are non-zero integers",68,null],[13,"Equal","","Evaluate to true if both values are equal",68,null],[13,"Greater","","Evaluate to true if the left value is greater than the…",68,null],[13,"GreaterEqual","","Evaluate to true if the left value is greater than or…",68,null],[13,"Less","","Evaluate to true if the left value is less than the right…",68,null],[13,"LessEqual","","Evaluate to true if the left value is less than or equal…",68,null],[13,"LogicalNot","","Evaluate to true if the value is zero",68,null],[13,"NotEqual","","Evaluate to true if the left value is not equal to the…",68,null],[13,"LoadTable","","Find an ACPI table indexed by the XSDT",68,null],[12,"signature","tartan_acpi::aml::term::ExpressionOpcode","",71,null],[12,"oem_id","","",71,null],[12,"oem_table_id","","",71,null],[12,"root_path","","",71,null],[12,"parameter_path","","",71,null],[12,"parameter_data","","",71,null],[13,"LogicalOr","tartan_acpi::aml::term","Evaluate to true if either of the values is a non-zero…",68,null],[13,"Match","","Search a package and return the index of the first…",68,null],[12,"search_package","tartan_acpi::aml::term::ExpressionOpcode","",72,null],[12,"a","","",72,null],[12,"b","","",72,null],[12,"start_index","","",72,null],[13,"Mid","tartan_acpi::aml::term","Copy a slice of a string or buffer.",68,null],[12,"source","tartan_acpi::aml::term::ExpressionOpcode","",73,null],[12,"index","","",73,null],[12,"length","","",73,null],[12,"result","","",73,null],[13,"Mod","tartan_acpi::aml::term","Compute the remainder of dividing the first integer by the…",68,null],[13,"Multiply","","Multiply two integers",68,null],[13,"Nand","","Compute the bitwise NAND of two integers",68,null],[13,"Nor","","Compute the bitwise NOR of two integers",68,null],[13,"BitwiseNot","","Invert the bits of an integer",68,null],[13,"ObjectType","","Get an integer representing the type of the given value.…",68,null],[13,"BitwiseOr","","Compute the bitwise OR of the two integers",68,null],[13,"ShiftLeft","","Multiply an integer by the specified power of two",68,null],[13,"ShiftRight","","Divide an integer by the specified power of two",68,null],[13,"SizeOf","","Get the length of a string, buffer, or package",68,null],[13,"Store","","Update the destination with the given value, converting it…",68,null],[13,"Subtract","","Subtract an integer from another, ignoring underflow",68,null],[13,"Timer","","Get the current value of the system timer in 100ns",68,null],[13,"ToBCD","","Encode an integer into a sequence of binary-coded decimal…",68,null],[13,"ToBuffer","","Convert a value to a buffer",68,null],[13,"ToDecimalString","","Encode a value as an ASCII decimal number",68,null],[13,"ToHexString","","Encode a value as an ASCII hexadecimal number",68,null],[13,"ToInteger","","Convert a value to an integer, either by parsing a string…",68,null],[13,"ToString","","Copy an ASCII string from a buffer into a string value",68,null],[12,"source","tartan_acpi::aml::term::ExpressionOpcode","",74,null],[12,"length","","",74,null],[12,"result","","",74,null],[13,"Wait","tartan_acpi::aml::term","Try to wait for another thread to signal an event object,…",68,null],[12,"event","tartan_acpi::aml::term::ExpressionOpcode","",75,null],[12,"timeout","","",75,null],[13,"BitwiseXor","tartan_acpi::aml::term","Compute the bitwise XOR of two integers",68,null],[4,"MatchOpcode","","Type of comparison used for a branch in an…",null,null],[13,"True","","",76,null],[13,"Equal","","",76,null],[13,"LessEqual","","",76,null],[13,"Less","","",76,null],[13,"GreaterEqual","","",76,null],[13,"Greater","","",76,null],[4,"ObjectType","","Type ID returned by [`ExpressionOpcode::ObjectType`].",null,null],[13,"Uninitialized","","",77,null],[13,"Integer","","",77,null],[13,"String","","",77,null],[13,"Buffer","","",77,null],[13,"Package","","",77,null],[13,"FieldUnit","","",77,null],[13,"Device","","",77,null],[13,"Event","","",77,null],[13,"Method","","",77,null],[13,"Mutex","","",77,null],[13,"OperationRegion","","",77,null],[13,"PowerResource","","",77,null],[13,"Processor","","",77,null],[13,"ThermalZone","","",77,null],[13,"BufferField","","",77,null],[13,"DDBHandle","","",77,null],[13,"DebugObject","","",77,null],[11,"unsynced","","",24,[[]]],[0,"misc","tartan_acpi::aml","Special symbols",null,null],[3,"DebugObject","tartan_acpi::aml::misc","Symbol representing debugger output device.",null,null],[4,"ArgObject","","Symbol for a positional argument passed to the current…",null,null],[13,"Arg0","","",78,null],[13,"Arg1","","",78,null],[13,"Arg2","","",78,null],[13,"Arg3","","",78,null],[13,"Arg4","","",78,null],[13,"Arg5","","",78,null],[13,"Arg6","","",78,null],[4,"LocalObject","","Symbol for a variable local to the current method.",null,null],[13,"Local0","","",79,null],[13,"Local1","","",79,null],[13,"Local2","","",79,null],[13,"Local3","","",79,null],[13,"Local4","","",79,null],[13,"Local5","","",79,null],[13,"Local6","","",79,null],[13,"Local7","","",79,null],[18,"SYSTEM_MEMORY","tartan_acpi","",80,null],[18,"SYSTEM_IO","","",80,null],[18,"PCI_CONFIGURATION","","",80,null],[18,"EMBEDDED_CONTROLLER","","",80,null],[18,"SM_BUS","","",80,null],[18,"SYSTEM_CMOS","","",80,null],[18,"PCI_BAR_TARGET","","",80,null],[18,"IPMI","","",80,null],[18,"GENERAL_PURPOSE_IO","","",80,null],[18,"GENERIC_SERIAL_BUS","","",80,null],[18,"PLATFORM_COMMUNICATIONS_CHANNEL","","",80,null],[18,"FUNCTIONAL_FIXED","","",80,null],[18,"OEM_DEFINED_MIN","","",80,null],[18,"OEM_DEFINED_MAX","","",80,null],[18,"UNDEFINED","","",81,null],[18,"BYTE","","",81,null],[18,"WORD","","",81,null],[18,"DWORD","","",81,null],[18,"QWORD","","",81,null],[18,"X86_WBINVD_SUPPORTED","","",82,null],[18,"X86_WBINVD_REQUIRES_FLUSH","","",82,null],[18,"C1_SUPPORTED","","",82,null],[18,"C2_MULTI_CPU_SUPPORTED","","",82,null],[18,"POWER_BUTTON_IS_CONTROL_METHOD_DEVICE","","",82,null],[18,"SLEEP_BUTTON_IS_CONTROL_METHOD_DEVICE","","",82,null],[18,"RTC_NOT_FIXED","","",82,null],[18,"RTC_CAN_WAKE_S4","","",82,null],[18,"TIMER_VALUE_32_BIT","","",82,null],[18,"DOCK_CAPABLE","","",82,null],[18,"FIXED_DESCRIPTION_RESET_SUPPORTED","","",82,null],[18,"SEALED_CASE","","",82,null],[18,"HEADLESS","","",82,null],[18,"EXECUTE_INSTRUCTION_AFTER_SLP_TYP","","",82,null],[18,"PCI_EXPRESS_WAKE","","",82,null],[18,"USE_PLATFORM_CLOCK","","",82,null],[18,"RTC_STATUS_VALID_AFTER_S4","","",82,null],[18,"REMOTE_POWER_ON_SUPPORTED","","",82,null],[18,"FORCE_APIC_CLUSTER_MODEL","","",82,null],[18,"FORCE_APIC_PHYSICAL_DESTINATION_MODE","","",82,null],[18,"HARDWARE_REDUCED_ACPI","","",82,null],[18,"LOW_POWER_S0_IDLE","","",82,null],[11,"empty","","Returns an empty set of flags",82,[[],["fixedflags",3]]],[11,"all","","Returns the set containing all flags.",82,[[],["fixedflags",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",82,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",82,[[],[["fixedflags",3],["option",4]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",82,[[],["fixedflags",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",82,[[],["fixedflags",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",82,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",82,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",82,[[["fixedflags",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",82,[[["fixedflags",3]]]],[11,"insert","","Inserts the specified flags in-place.",82,[[["fixedflags",3]]]],[11,"remove","","Removes the specified flags in-place.",82,[[["fixedflags",3]]]],[11,"toggle","","Toggles the specified flags in-place.",82,[[["fixedflags",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",82,[[["fixedflags",3]]]],[14,"parser_fn","","Defines a byte slice parser function, avoiding repetitive…",null,null],[14,"struct_parser","","Parse struct fields in order using an initializer-like…",null,null],[11,"from","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"from","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"from","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"from","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"from","","",83,[[]]],[11,"try_from","","",83,[[],["result",4]]],[11,"into","","",83,[[]]],[11,"try_into","","",83,[[],["result",4]]],[11,"borrow","","",83,[[]]],[11,"borrow_mut","","",83,[[]]],[11,"type_id","","",83,[[],["typeid",3]]],[11,"to_owned","","",83,[[]]],[11,"clone_into","","",83,[[]]],[11,"from","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"into","","",80,[[]]],[11,"try_into","","",80,[[],["result",4]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"from","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"into","","",81,[[]]],[11,"try_into","","",81,[[],["result",4]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"from","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"into","","",82,[[]]],[11,"try_into","","",82,[[],["result",4]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"from","tartan_acpi::aml","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","tartan_acpi::aml::parse::state","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"from","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"from","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"to_string","","",7,[[],["string",3]]],[11,"from","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"to_owned","","",8,[[]]],[11,"clone_into","","",8,[[]]],[11,"to_string","","",8,[[],["string",3]]],[11,"from","tartan_acpi::aml::name","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"from","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"to_string","","",12,[[],["string",3]]],[11,"from","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"to_string","","",13,[[],["string",3]]],[11,"from","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"from","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"from","tartan_acpi::aml::data","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"from","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"from","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"from","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"from","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"from","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"from","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"from","tartan_acpi::aml::term","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"from","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"from","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"from","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"to_owned","","",26,[[]]],[11,"clone_into","","",26,[[]]],[11,"from","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"from","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"to_owned","","",29,[[]]],[11,"clone_into","","",29,[[]]],[11,"from","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"into","","",48,[[]]],[11,"try_into","","",48,[[],["result",4]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"from","","",49,[[]]],[11,"try_from","","",49,[[],["result",4]]],[11,"into","","",49,[[]]],[11,"try_into","","",49,[[],["result",4]]],[11,"borrow","","",49,[[]]],[11,"borrow_mut","","",49,[[]]],[11,"type_id","","",49,[[],["typeid",3]]],[11,"to_owned","","",49,[[]]],[11,"clone_into","","",49,[[]]],[11,"from","","",50,[[]]],[11,"try_from","","",50,[[],["result",4]]],[11,"into","","",50,[[]]],[11,"try_into","","",50,[[],["result",4]]],[11,"borrow","","",50,[[]]],[11,"borrow_mut","","",50,[[]]],[11,"type_id","","",50,[[],["typeid",3]]],[11,"to_owned","","",50,[[]]],[11,"clone_into","","",50,[[]]],[11,"from","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"into","","",53,[[]]],[11,"try_into","","",53,[[],["result",4]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"from","","",54,[[]]],[11,"try_from","","",54,[[],["result",4]]],[11,"into","","",54,[[]]],[11,"try_into","","",54,[[],["result",4]]],[11,"borrow","","",54,[[]]],[11,"borrow_mut","","",54,[[]]],[11,"type_id","","",54,[[],["typeid",3]]],[11,"to_owned","","",54,[[]]],[11,"clone_into","","",54,[[]]],[11,"from","","",55,[[]]],[11,"try_from","","",55,[[],["result",4]]],[11,"into","","",55,[[]]],[11,"try_into","","",55,[[],["result",4]]],[11,"borrow","","",55,[[]]],[11,"borrow_mut","","",55,[[]]],[11,"type_id","","",55,[[],["typeid",3]]],[11,"to_owned","","",55,[[]]],[11,"clone_into","","",55,[[]]],[11,"from","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"into","","",66,[[]]],[11,"try_into","","",66,[[],["result",4]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"from","","",68,[[]]],[11,"try_from","","",68,[[],["result",4]]],[11,"into","","",68,[[]]],[11,"try_into","","",68,[[],["result",4]]],[11,"borrow","","",68,[[]]],[11,"borrow_mut","","",68,[[]]],[11,"type_id","","",68,[[],["typeid",3]]],[11,"to_owned","","",68,[[]]],[11,"clone_into","","",68,[[]]],[11,"from","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"into","","",76,[[]]],[11,"try_into","","",76,[[],["result",4]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"from","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"into","","",77,[[]]],[11,"try_into","","",77,[[],["result",4]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"from","tartan_acpi::aml::misc","",84,[[]]],[11,"try_from","","",84,[[],["result",4]]],[11,"into","","",84,[[]]],[11,"try_into","","",84,[[],["result",4]]],[11,"borrow","","",84,[[]]],[11,"borrow_mut","","",84,[[]]],[11,"type_id","","",84,[[],["typeid",3]]],[11,"to_owned","","",84,[[]]],[11,"clone_into","","",84,[[]]],[11,"from","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"into","","",78,[[]]],[11,"try_into","","",78,[[],["result",4]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"from","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"into","","",79,[[]]],[11,"try_into","","",79,[[],["result",4]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"parse","tartan_acpi::aml::name","",11,[[["parserstate",3]],[["amlparseerror",8],["amlparseresult",6]]]],[11,"parse","","",12,[[["parserstate",3]],[["amlparseerror",8],["amlparseresult",6]]]],[11,"parse","","",13,[[["parserstate",3]],[["amlparseerror",8],["amlparseresult",6]]]],[11,"parse","","",14,[[["parserstate",3]],[["amlparseerror",8],["amlparseresult",6]]]],[11,"parse","","",15,[[["parserstate",3]],[["amlparseerror",8],["amlparseresult",6]]]],[11,"parse","tartan_acpi::aml::data","",19,[[["parserstate",3]],[["amlparseerror",8],["amlparseresult",6]]]],[11,"parse","","",16,[[["parserstate",3]],[["amlparseerror",8],["amlparseresult",6]]]],[11,"parse","","",17,[[["parserstate",3]],[["amlparseerror",8],["amlparseresult",6]]]],[11,"parse","","",18,[[["parserstate",3]],[["amlparseerror",8],["amlparseresult",6]]]],[11,"parse","","",20,[[["parserstate",3]],[["amlparseerror",8],["amlparseresult",6]]]],[11,"parse","","",21,[[["parserstate",3]],[["amlparseerror",8],["amlparseresult",6]]]],[11,"parse","","",22,[[["parserstate",3]],[["amlparseerror",8],["amlparseresult",6]]]],[11,"parse","tartan_acpi::aml::term","",25,[[["parserstate",3]],[["amlparseerror",8],["amlparseresult",6]]]],[11,"parse","","",26,[[["parserstate",3]],[["amlparseerror",8],["amlparseresult",6]]]],[11,"parse","","",27,[[["parserstate",3]],[["amlparseerror",8],["amlparseresult",6]]]],[11,"parse","","",29,[[["parserstate",3]],[["amlparseerror",8],["amlparseresult",6]]]],[11,"parse","","",23,[[["parserstate",3]],[["amlparseerror",8],["amlparseresult",6]]]],[11,"parse","","",50,[[["parserstate",3]],[["amlparseerror",8],["amlparseresult",6]]]],[11,"parse","","",24,[[["parserstate",3]],[["amlparseerror",8],["amlparseresult",6]]]],[11,"parse","","",54,[[["parserstate",3]],[["amlparseerror",8],["amlparseresult",6]]]],[11,"parse","","",55,[[["parserstate",3]],[["amlparseerror",8],["amlparseresult",6]]]],[11,"parse","","",66,[[["parserstate",3]],[["amlparseerror",8],["amlparseresult",6]]]],[11,"parse","","",68,[[["parserstate",3]],[["amlparseerror",8],["amlparseresult",6]]]],[11,"parse","","",76,[[["parserstate",3]],[["amlparseerror",8],["amlparseresult",6]]]],[11,"parse","","",77,[[["parserstate",3]],[["amlparseerror",8],["amlparseresult",6]]]],[11,"parse","tartan_acpi::aml::misc","",78,[[["parserstate",3]],[["amlparseerror",8],["amlparseresult",6]]]],[11,"parse","","",79,[[["parserstate",3]],[["amlparseerror",8],["amlparseresult",6]]]],[11,"parse","","",84,[[["parserstate",3]],[["amlparseerror",8],["amlparseresult",6]]]],[11,"from","tartan_acpi::aml::name","",11,[[],["nameseg",3]]],[11,"from","","",12,[[],["namestring",3]]],[11,"from","","",12,[[["nameseg",3]],["namestring",3]]],[11,"from","","",14,[[["namestring",3]],["simplename",4]]],[11,"from","","",14,[[["argobject",4]],["simplename",4]]],[11,"from","","",14,[[["localobject",4]],["simplename",4]]],[11,"from","","",15,[[["simplename",4]],["supername",4]]],[11,"from","","",15,[[["namestring",3]],["supername",4]]],[11,"from","","",15,[[["argobject",4]],["supername",4]]],[11,"from","","",15,[[["localobject",4]],["supername",4]]],[11,"from","","",15,[[["referenceexpressionopcode",4]],["supername",4]]],[11,"from","tartan_acpi::aml::data","",20,[[["datarefobject",4]],["packageelement",4]]],[11,"from","","",20,[[["namestring",3]],["packageelement",4]]],[11,"from","","",21,[[["computationaldata",4]],["dataobject",4]]],[11,"from","","",21,[[["package",3]],["dataobject",4]]],[11,"from","","",21,[[["varpackage",3]],["dataobject",4]]],[11,"from","","",22,[[["dataobject",4]],["datarefobject",4]]],[11,"from","","",22,[[["computationaldata",4]],["datarefobject",4]]],[11,"from","","",22,[[["package",3]],["datarefobject",4]]],[11,"from","","",22,[[["varpackage",3]],["datarefobject",4]]],[11,"from","tartan_acpi::aml::term","",25,[[["namespacemodifier",4]],["termobject",4]]],[11,"from","","",25,[[["namedobject",4]],["termobject",4]]],[11,"from","","",25,[[["statementopcode",4]],["termobject",4]]],[11,"from","","",25,[[["expressionopcode",4]],["termobject",4]]],[11,"from","","",25,[[["referenceexpressionopcode",4]],["termobject",4]]],[11,"from","","",25,[[["buffer",3]],["termobject",4]]],[11,"from","","",25,[[["package",3]],["termobject",4]]],[11,"from","","",25,[[["varpackage",3]],["termobject",4]]],[11,"from","","",26,[[["expressionopcode",4]],["termarg",4]]],[11,"from","","",26,[[["referenceexpressionopcode",4]],["termarg",4]]],[11,"from","","",26,[[["buffer",3]],["termarg",4]]],[11,"from","","",26,[[["package",3]],["termarg",4]]],[11,"from","","",26,[[["varpackage",3]],["termarg",4]]],[11,"from","","",26,[[["dataobject",4]],["termarg",4]]],[11,"from","","",26,[[["computationaldata",4]],["termarg",4]]],[11,"from","","",26,[[["argobject",4]],["termarg",4]]],[11,"from","","",26,[[["localobject",4]],["termarg",4]]],[11,"from","","",26,[[["namestring",3]],["termarg",4]]],[11,"from","","",68,[[["referenceexpressionopcode",4]],["expressionopcode",4]]],[11,"from","","",68,[[["buffer",3]],["expressionopcode",4]]],[11,"from","","",68,[[["package",3]],["expressionopcode",4]]],[11,"from","","",68,[[["varpackage",3]],["expressionopcode",4]]],[11,"fmt","tartan_acpi::aml::parse::state","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","tartan_acpi::aml","",4,[[["formatter",3]],["result",6]]],[11,"fmt","tartan_acpi::aml::name","",11,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",12,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","tartan_acpi::aml::data","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","tartan_acpi::aml::term","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",49,[[["formatter",3]],["result",6]]],[11,"fmt","","",50,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",54,[[["formatter",3]],["result",6]]],[11,"fmt","","",55,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",68,[[["formatter",3]],["result",6]]],[11,"fmt","","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","tartan_acpi::aml::misc","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",84,[[["formatter",3]],["result",6]]],[11,"fmt","tartan_acpi","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",83,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","tartan_acpi::aml::parse::state","",7,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",8,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","tartan_acpi::aml::name","",11,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","Format a `NameString` like a path in ASL",12,[[["formatter",3]],[["result",4],["error",3]]]],[11,"fmt","","",13,[[["formatter",3]],[["result",4],["error",3]]]],[11,"sub","tartan_acpi","Returns the set difference of the two sets of flags.",82,[[["fixedflags",3]],["fixedflags",3]]],[11,"eq","tartan_acpi::aml::parse::state","",5,[[["methodsignature",3]]]],[11,"ne","","",5,[[["methodsignature",3]]]],[11,"eq","","",6,[[["parserstate",3]]]],[11,"ne","","",6,[[["parserstate",3]]]],[11,"eq","tartan_acpi::aml","",4,[[["amltable",3]]]],[11,"ne","","",4,[[["amltable",3]]]],[11,"eq","tartan_acpi::aml::name","",11,[[["nameseg",3]]]],[11,"ne","","",11,[[["nameseg",3]]]],[11,"eq","","",12,[[["namestring",3]]]],[11,"ne","","",12,[[["namestring",3]]]],[11,"eq","","",13,[[["pathanchor",4]]]],[11,"ne","","",13,[[["pathanchor",4]]]],[11,"eq","","",14,[[["simplename",4]]]],[11,"ne","","",14,[[["simplename",4]]]],[11,"eq","","",15,[[["supername",4]]]],[11,"ne","","",15,[[["supername",4]]]],[11,"eq","tartan_acpi::aml::data","",19,[[["computationaldata",4]]]],[11,"ne","","",19,[[["computationaldata",4]]]],[11,"eq","","",16,[[["buffer",3]]]],[11,"ne","","",16,[[["buffer",3]]]],[11,"eq","","",17,[[["package",3]]]],[11,"ne","","",17,[[["package",3]]]],[11,"eq","","",18,[[["varpackage",3]]]],[11,"ne","","",18,[[["varpackage",3]]]],[11,"eq","","",20,[[["packageelement",4]]]],[11,"ne","","",20,[[["packageelement",4]]]],[11,"eq","","",21,[[["dataobject",4]]]],[11,"ne","","",21,[[["dataobject",4]]]],[11,"eq","","",22,[[["datarefobject",4]]]],[11,"ne","","",22,[[["datarefobject",4]]]],[11,"eq","tartan_acpi::aml::term","",25,[[["termobject",4]]]],[11,"ne","","",25,[[["termobject",4]]]],[11,"eq","","",26,[[["termarg",4]]]],[11,"ne","","",26,[[["termarg",4]]]],[11,"eq","","",27,[[["namespacemodifier",4]]]],[11,"ne","","",27,[[["namespacemodifier",4]]]],[11,"eq","","",29,[[["namedobject",4]]]],[11,"ne","","",29,[[["namedobject",4]]]],[11,"eq","","",23,[[["fieldflags",3]]]],[11,"ne","","",23,[[["fieldflags",3]]]],[11,"eq","","",48,[[["accesstype",4]]]],[11,"eq","","",49,[[["updaterule",4]]]],[11,"eq","","",50,[[["fieldelement",4]]]],[11,"ne","","",50,[[["fieldelement",4]]]],[11,"eq","","",53,[[["accessattrib",4]]]],[11,"ne","","",53,[[["accessattrib",4]]]],[11,"eq","","",24,[[["methodflags",3]]]],[11,"ne","","",24,[[["methodflags",3]]]],[11,"eq","","",54,[[["regionspace",4]]]],[11,"ne","","",54,[[["regionspace",4]]]],[11,"eq","","",55,[[["statementopcode",4]]]],[11,"ne","","",55,[[["statementopcode",4]]]],[11,"eq","","",66,[[["referenceexpressionopcode",4]]]],[11,"ne","","",66,[[["referenceexpressionopcode",4]]]],[11,"eq","","",68,[[["expressionopcode",4]]]],[11,"ne","","",68,[[["expressionopcode",4]]]],[11,"eq","","",76,[[["matchopcode",4]]]],[11,"eq","","",77,[[["objecttype",4]]]],[11,"eq","tartan_acpi::aml::misc","",78,[[["argobject",4]]]],[11,"eq","","",79,[[["localobject",4]]]],[11,"eq","","",84,[[["debugobject",3]]]],[11,"eq","tartan_acpi","",0,[[["rootdescriptionpointerv1",3]]]],[11,"ne","","",0,[[["rootdescriptionpointerv1",3]]]],[11,"eq","","",1,[[["rootdescriptionpointerv2",3]]]],[11,"ne","","",1,[[["rootdescriptionpointerv2",3]]]],[11,"eq","","",2,[[["descriptionheader",3]]]],[11,"ne","","",2,[[["descriptionheader",3]]]],[11,"eq","","",3,[[["fixeddescription",3]]]],[11,"ne","","",3,[[["fixeddescription",3]]]],[11,"eq","","",83,[[["genericaddress",3]]]],[11,"ne","","",83,[[["genericaddress",3]]]],[11,"eq","","",80,[[["addressspace",3]]]],[11,"ne","","",80,[[["addressspace",3]]]],[11,"eq","","",81,[[["accesssize",3]]]],[11,"ne","","",81,[[["accesssize",3]]]],[11,"eq","","",82,[[["fixedflags",3]]]],[11,"ne","","",82,[[["fixedflags",3]]]],[11,"cmp","","",82,[[["fixedflags",3]],["ordering",4]]],[11,"partial_cmp","","",82,[[["fixedflags",3]],[["option",4],["ordering",4]]]],[11,"lt","","",82,[[["fixedflags",3]]]],[11,"le","","",82,[[["fixedflags",3]]]],[11,"gt","","",82,[[["fixedflags",3]]]],[11,"ge","","",82,[[["fixedflags",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",82,[[["fixedflags",3]]]],[11,"not","","Returns the complement of this set of flags.",82,[[],["fixedflags",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",82,[[["fixedflags",3]],["fixedflags",3]]],[11,"bitor","","Returns the union of the two sets of flags.",82,[[["fixedflags",3]],["fixedflags",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",82,[[["fixedflags",3]],["fixedflags",3]]],[11,"bitand_assign","","Disables all flags disabled in the set.",82,[[["fixedflags",3]]]],[11,"bitor_assign","","Adds the set of flags.",82,[[["fixedflags",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",82,[[["fixedflags",3]]]],[11,"hash","","",82,[[]]],[11,"extend","","",82,[[["intoiterator",8]]]],[11,"from_iter","","",82,[[["intoiterator",8]],["fixedflags",3]]],[11,"try_from","tartan_acpi::aml::term","",48,[[],["result",4]]],[11,"try_from","","",49,[[],["result",4]]],[11,"fmt","tartan_acpi","",82,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"clone","tartan_acpi::aml::parse::state","",5,[[],["methodsignature",3]]],[11,"clone","","",6,[[],["parserstate",3]]],[11,"clone","","",8,[[],["errorwithposition",3]]],[11,"clone","tartan_acpi::aml::name","",11,[[],["nameseg",3]]],[11,"clone","","",12,[[],["namestring",3]]],[11,"clone","","",13,[[],["pathanchor",4]]],[11,"clone","","",14,[[],["simplename",4]]],[11,"clone","","",15,[[],["supername",4]]],[11,"clone","tartan_acpi::aml::data","",19,[[],["computationaldata",4]]],[11,"clone","","",16,[[],["buffer",3]]],[11,"clone","","",17,[[],["package",3]]],[11,"clone","","",18,[[],["varpackage",3]]],[11,"clone","","",20,[[],["packageelement",4]]],[11,"clone","","",21,[[],["dataobject",4]]],[11,"clone","","",22,[[],["datarefobject",4]]],[11,"clone","tartan_acpi::aml::term","",25,[[],["termobject",4]]],[11,"clone","","",26,[[],["termarg",4]]],[11,"clone","","",27,[[],["namespacemodifier",4]]],[11,"clone","","",29,[[],["namedobject",4]]],[11,"clone","","",23,[[],["fieldflags",3]]],[11,"clone","","",48,[[],["accesstype",4]]],[11,"clone","","",49,[[],["updaterule",4]]],[11,"clone","","",50,[[],["fieldelement",4]]],[11,"clone","","",53,[[],["accessattrib",4]]],[11,"clone","","",24,[[],["methodflags",3]]],[11,"clone","","",54,[[],["regionspace",4]]],[11,"clone","","",55,[[],["statementopcode",4]]],[11,"clone","","",66,[[],["referenceexpressionopcode",4]]],[11,"clone","","",68,[[],["expressionopcode",4]]],[11,"clone","","",76,[[],["matchopcode",4]]],[11,"clone","","",77,[[],["objecttype",4]]],[11,"clone","tartan_acpi::aml::misc","",78,[[],["argobject",4]]],[11,"clone","","",79,[[],["localobject",4]]],[11,"clone","","",84,[[],["debugobject",3]]],[11,"clone","tartan_acpi","",0,[[],["rootdescriptionpointerv1",3]]],[11,"clone","","",1,[[],["rootdescriptionpointerv2",3]]],[11,"clone","","",2,[[],["descriptionheader",3]]],[11,"clone","","",3,[[],["fixeddescription",3]]],[11,"clone","","",83,[[],["genericaddress",3]]],[11,"clone","","",80,[[],["addressspace",3]]],[11,"clone","","",81,[[],["accesssize",3]]],[11,"clone","","",82,[[],["fixedflags",3]]],[11,"default","tartan_acpi::aml::parse::state","",5,[[],["methodsignature",3]]],[11,"default","","",6,[[],["parserstate",3]]],[11,"input_len","","",6,[[]]],[11,"iter_indices","","",6,[[]]],[11,"iter_elements","","",6,[[]]],[11,"position","","",6,[[["fn",8]],["option",4]]],[11,"slice_index","","",6,[[],["option",4]]]],"p":[[3,"RootDescriptionPointerV1"],[3,"RootDescriptionPointerV2"],[3,"DescriptionHeader"],[3,"FixedDescription"],[3,"AMLTable"],[3,"MethodSignature"],[3,"ParserState"],[3,"Position"],[3,"ErrorWithPosition"],[8,"ReplaceableParseError"],[8,"Parse"],[3,"NameSeg"],[3,"NameString"],[4,"PathAnchor"],[4,"SimpleName"],[4,"SuperName"],[3,"Buffer"],[3,"Package"],[3,"VarPackage"],[4,"ComputationalData"],[4,"PackageElement"],[4,"DataObject"],[4,"DataRefObject"],[3,"FieldFlags"],[3,"MethodFlags"],[4,"TermObject"],[4,"TermArg"],[4,"NameSpaceModifier"],[13,"Alias"],[4,"NamedObject"],[13,"BankField"],[13,"CreateBitField"],[13,"CreateByteField"],[13,"CreateDWordField"],[13,"CreateField"],[13,"CreateQWordField"],[13,"CreateWordField"],[13,"DataTableRegion"],[13,"Device"],[13,"External"],[13,"Field"],[13,"IndexField"],[13,"Method"],[13,"Mutex"],[13,"OperationRegion"],[13,"PowerResource"],[13,"Processor"],[13,"ThermalZone"],[4,"AccessType"],[4,"UpdateRule"],[4,"FieldElement"],[13,"Named"],[13,"Reserved"],[4,"AccessAttrib"],[4,"RegionSpace"],[4,"StatementOpcode"],[13,"Fatal"],[13,"If"],[13,"Load"],[13,"Notify"],[13,"Release"],[13,"Reset"],[13,"Signal"],[13,"Sleep"],[13,"Stall"],[13,"While"],[4,"ReferenceExpressionOpcode"],[13,"Index"],[4,"ExpressionOpcode"],[13,"Acquire"],[13,"Divide"],[13,"LoadTable"],[13,"Match"],[13,"Mid"],[13,"ToString"],[13,"Wait"],[4,"MatchOpcode"],[4,"ObjectType"],[4,"ArgObject"],[4,"LocalObject"],[3,"AddressSpace"],[3,"AccessSize"],[3,"FixedFlags"],[3,"GenericAddress"],[3,"DebugObject"]]},\
"tartan_uefi":{"doc":"Support for Unified Extensible Firmware Interface","i":[[3,"Handle","tartan_uefi","",null,null],[3,"Revision","","",null,null],[12,"0","","",0,null],[3,"Status","","",null,null],[3,"TableHeader","","",null,null],[12,"signature","","",1,null],[12,"revision","","",1,null],[12,"header_size","","",1,null],[12,"crc32","","",1,null],[3,"SystemTable","","",null,null],[12,"header","","",2,null],[12,"firmware_vendor","","",2,null],[12,"firmware_revision","","",2,null],[12,"console_in_handle","","",2,null],[12,"console_in","","",2,null],[12,"console_out_handle","","",2,null],[12,"console_out","","",2,null],[12,"std_err_handle","","",2,null],[12,"std_err","","",2,null],[12,"runtime_services","","",2,null],[12,"boot_services","","",2,null],[12,"config_entry_count","","",2,null],[12,"config_table","","",2,null],[3,"RuntimeServices","","",null,null],[12,"header","","",3,null],[3,"BootServices","","",null,null],[12,"header","","",4,null],[12,"allocate_pages","","",4,null],[12,"free_pages","","",4,null],[12,"get_memory_map","","",4,null],[12,"allocate_pool","","",4,null],[12,"free_pool","","",4,null],[12,"handle_protocol","","",4,null],[3,"GUID","","",null,null],[3,"ConfigurationTable","","",null,null],[12,"vendor_guid","","",5,null],[3,"MemoryDescriptor","","",null,null],[12,"memory_type","","",6,null],[12,"physical_start","","",6,null],[12,"virtual_start","","",6,null],[12,"page_count","","",6,null],[12,"attributes","","",6,null],[3,"MemoryMap","","",null,null],[12,"raw_map","","",7,null],[12,"key","","",7,null],[12,"descriptor_size","","",7,null],[12,"descriptor_version","","",7,null],[3,"MemoryType","","",null,null],[3,"AllocateType","","",null,null],[3,"MemoryAttributes","","",null,null],[0,"allocator","","`BootServices`-based heap allocator to support the…",null,null],[3,"BootAllocator","tartan_uefi::allocator","",null,null],[0,"global","tartan_uefi","Static pointer to the [`SystemTable`], used by features…",null,null],[7,"SYSTEM_TABLE","tartan_uefi::global","",null,null],[0,"io","tartan_uefi","[`SimpleTextOutput`]-based [`Write`] implementation to…",null,null],[3,"OutputStream","tartan_uefi::io","",null,null],[12,"last_result","","",8,null],[11,"new","","",8,[[["simpletextoutput",3]]]],[0,"proto","tartan_uefi","",null,null],[3,"SimpleTextInput","tartan_uefi::proto","",null,null],[3,"SimpleTextOutput","","",null,null],[12,"reset","","",9,null],[12,"output_string","","",9,null],[12,"test_string","","",9,null],[12,"mode","","",9,null],[3,"SimpleTextOutputMode","","",null,null],[12,"max_mode","","",10,null],[12,"mode","","",10,null],[12,"attribute","","",10,null],[12,"cursor_column","","",10,null],[12,"cursor_row","","",10,null],[12,"cursor_visible","","",10,null],[3,"LoadedImage","","",null,null],[12,"revision","","",11,null],[12,"parent_handle","","",11,null],[12,"system_table","","",11,null],[12,"device_handle","","",11,null],[12,"load_options_size","","",11,null],[12,"load_options","","",11,null],[12,"image_base","","",11,null],[12,"image_size","","",11,null],[12,"image_code_type","","",11,null],[12,"image_data_type","","",11,null],[12,"unload","","",11,null],[8,"Protocol","","",null,null],[18,"PROTOCOL_ID","","",12,null],[18,"LATEST_REVISION","","",11,null],[6,"Result","tartan_uefi","",null,null],[8,"Table","","",null,null],[18,"SIGNATURE","","",13,null],[18,"MIN_REVISION","","",13,null],[10,"header","","",13,[[],["tableheader",3]]],[11,"verify","","",13,[[]]],[11,"verify_signature","","",13,[[]]],[11,"verify_revision","","",13,[[]]],[11,"verify_size","","",13,[[]]],[11,"verify_crc32","","",13,[[]]],[18,"LATEST","","",0,null],[18,"V2_80","","",0,null],[18,"V2_70","","",0,null],[18,"V2_60","","",0,null],[18,"V2_50","","",0,null],[18,"V2_40","","",0,null],[18,"V2_31","","",0,null],[18,"V2_30","","",0,null],[18,"V2_20","","",0,null],[18,"V2_10","","",0,null],[18,"V2_00","","",0,null],[18,"V1_10","","",0,null],[18,"V1_02","","",0,null],[11,"major_version","","",0,[[]]],[11,"minor_version","","",0,[[]]],[11,"fix_version","","",0,[[]]],[18,"SUCCESS","","",14,null],[18,"WARN_UNKNOWN_GLYPH","","",14,null],[18,"WARN_DELETE_FAILURE","","",14,null],[18,"WARN_WRITE_FAILURE","","",14,null],[18,"WARN_BUFFER_TOO_SMALL","","",14,null],[18,"WARN_STALE_DATA","","",14,null],[18,"WARN_FILE_SYSTEM","","",14,null],[18,"WARN_RESET_REQUIRED","","",14,null],[18,"ERROR_BIT","","",14,null],[18,"LOAD_ERROR","","",14,null],[18,"INVALID_PARAMETER","","",14,null],[18,"UNSUPPORTED","","",14,null],[18,"BAD_BUFFER_SIZE","","",14,null],[18,"BUFFER_TOO_SMALL","","",14,null],[18,"NOT_READY","","",14,null],[18,"DEVICE_ERROR","","",14,null],[18,"WRITE_PROTECTED","","",14,null],[18,"OUT_OF_RESOURCES","","",14,null],[18,"VOLUME_CORRUPTED","","",14,null],[18,"VOLUME_FULL","","",14,null],[18,"NO_MEDIA","","",14,null],[18,"MEDIA_CHANGED","","",14,null],[18,"NOT_FOUND","","",14,null],[18,"ACCESS_DENIED","","",14,null],[18,"NO_RESPONSE","","",14,null],[18,"NO_MAPPING","","",14,null],[18,"TIMEOUT","","",14,null],[18,"NOT_STARTED","","",14,null],[18,"ALREADY_STARTED","","",14,null],[18,"ABORTED","","",14,null],[18,"ICMP_ERROR","","",14,null],[18,"TFTP_ERROR","","",14,null],[18,"PROTOCOL_ERROR","","",14,null],[18,"INCOMPATIBLE_VERSION","","",14,null],[18,"SECURITY_VIOLATION","","",14,null],[18,"CRC_ERROR","","",14,null],[18,"END_OF_MEDIA","","",14,null],[18,"END_OF_FILE","","",14,null],[18,"INVALID_LANGUAGE","","",14,null],[18,"COMPROMISED_DATA","","",14,null],[18,"HTTP_ERROR","","",14,null],[11,"is_error","","",14,[[]]],[11,"is_warning","","",14,[[]]],[11,"into_result","","Wraps success and warning codes in [`Ok`], and error codes…",14,[[],["result",6]]],[11,"from","","",15,[[]]],[18,"ACPI_20_GUID","","",5,null],[18,"ACPI_GUID","","",5,null],[18,"SAL_SYSTEM_GUID","","",5,null],[18,"SMBIOS_GUID","","",5,null],[18,"SMBIOS3_GUID","","",5,null],[18,"MPS_GUID","","",5,null],[18,"MIN_VERSION","","",7,null],[11,"new","","",7,[[]]],[11,"verify","","",7,[[]]],[11,"verify_version","","",7,[[]]],[11,"verify_descriptor_size","","",7,[[]]],[11,"verify_map","","",7,[[]]],[11,"iter","","Iterate over memory descriptors contained in the map.",7,[[]]],[18,"RESERVED","","",16,null],[18,"LOADER_CODE","","",16,null],[18,"LOADER_DATA","","",16,null],[18,"BOOT_SERVICES_CODE","","",16,null],[18,"BOOT_SERVICES_DATA","","",16,null],[18,"RUNTIME_SERVICES_CODE","","",16,null],[18,"RUNTIME_SERVICES_DATA","","",16,null],[18,"CONVENTIONAL","","",16,null],[18,"UNUSABLE","","",16,null],[18,"ACPI_RECLAIM","","",16,null],[18,"ACPI_NVS","","",16,null],[18,"MAPPED_IO","","",16,null],[18,"MAPPED_IO_PORT_SPACE","","",16,null],[18,"PAL_CODE","","",16,null],[18,"PERSISTENT","","",16,null],[18,"ANY_ADDRESS","","",17,null],[18,"MAX_ADDRESS","","",17,null],[18,"EXACT_ADDRESS","","",17,null],[18,"SUPPORTS_UNCACHEABLE","","",18,null],[18,"SUPPORTS_WRITE_COMBINING","","",18,null],[18,"SUPPORTS_WRITE_THROUGH","","",18,null],[18,"SUPPORTS_WRITE_BACK","","",18,null],[18,"SUPPORTS_UNCACHEABLE_SEM","","",18,null],[18,"SUPPORTS_WRITE_PROTECT","","",18,null],[18,"SUPPORTS_READ_PROTECT","","",18,null],[18,"SUPPORTS_EXEC_PROTECT","","",18,null],[18,"NONVOLATILE","","",18,null],[18,"MORE_RELIABLE","","",18,null],[18,"SUPPORTS_READ_ONLY","","",18,null],[18,"SPECIFIC_PURPOSE","","",18,null],[18,"SUPPORTS_CPU_CRYPTO","","",18,null],[18,"RUNTIME","","",18,null],[11,"empty","","Returns an empty set of flags",18,[[],["memoryattributes",3]]],[11,"all","","Returns the set containing all flags.",18,[[],["memoryattributes",3]]],[11,"bits","","Returns the raw value of the flags currently stored.",18,[[]]],[11,"from_bits","","Convert from underlying bit representation, unless that…",18,[[],[["option",4],["memoryattributes",3]]]],[11,"from_bits_truncate","","Convert from underlying bit representation, dropping any…",18,[[],["memoryattributes",3]]],[11,"from_bits_unchecked","","Convert from underlying bit representation, preserving all…",18,[[],["memoryattributes",3]]],[11,"is_empty","","Returns `true` if no flags are currently stored.",18,[[]]],[11,"is_all","","Returns `true` if all flags are currently set.",18,[[]]],[11,"intersects","","Returns `true` if there are flags common to both `self`…",18,[[["memoryattributes",3]]]],[11,"contains","","Returns `true` all of the flags in `other` are contained…",18,[[["memoryattributes",3]]]],[11,"insert","","Inserts the specified flags in-place.",18,[[["memoryattributes",3]]]],[11,"remove","","Removes the specified flags in-place.",18,[[["memoryattributes",3]]]],[11,"toggle","","Toggles the specified flags in-place.",18,[[["memoryattributes",3]]]],[11,"set","","Inserts or removes the specified flags depending on the…",18,[[["memoryattributes",3]]]],[14,"writeln_result","","Write formatted data to an [`OutputStream`] and return the…",null,null],[11,"from","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"from","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"from","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"from","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"from","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"from","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"from","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"from","tartan_uefi::allocator","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","tartan_uefi::io","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","tartan_uefi::proto","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"header","tartan_uefi","",2,[[],["tableheader",3]]],[11,"header","","",3,[[],["tableheader",3]]],[11,"header","","",4,[[],["tableheader",3]]],[11,"from","","",22,[[["status",3]]]],[11,"from","","",15,[[]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"sub","","Returns the set difference of the two sets of flags.",18,[[["memoryattributes",3]],["memoryattributes",3]]],[11,"eq","","",19,[[["handle",3]]]],[11,"ne","","",19,[[["handle",3]]]],[11,"eq","","",0,[[["revision",3]]]],[11,"ne","","",0,[[["revision",3]]]],[11,"eq","","",14,[[["status",3]]]],[11,"ne","","",14,[[["status",3]]]],[11,"eq","","",15,[[["guid",3]]]],[11,"ne","","",15,[[["guid",3]]]],[11,"eq","","",16,[[["memorytype",3]]]],[11,"ne","","",16,[[["memorytype",3]]]],[11,"eq","","",17,[[["allocatetype",3]]]],[11,"ne","","",17,[[["allocatetype",3]]]],[11,"eq","","",18,[[["memoryattributes",3]]]],[11,"ne","","",18,[[["memoryattributes",3]]]],[11,"cmp","","",0,[[["revision",3]],["ordering",4]]],[11,"cmp","","",18,[[["memoryattributes",3]],["ordering",4]]],[11,"partial_cmp","","",0,[[["revision",3]],[["option",4],["ordering",4]]]],[11,"lt","","",0,[[["revision",3]]]],[11,"le","","",0,[[["revision",3]]]],[11,"gt","","",0,[[["revision",3]]]],[11,"ge","","",0,[[["revision",3]]]],[11,"partial_cmp","","",18,[[["memoryattributes",3]],[["option",4],["ordering",4]]]],[11,"lt","","",18,[[["memoryattributes",3]]]],[11,"le","","",18,[[["memoryattributes",3]]]],[11,"gt","","",18,[[["memoryattributes",3]]]],[11,"ge","","",18,[[["memoryattributes",3]]]],[11,"sub_assign","","Disables all flags enabled in the set.",18,[[["memoryattributes",3]]]],[11,"not","","Returns the complement of this set of flags.",18,[[],["memoryattributes",3]]],[11,"bitand","","Returns the intersection between the two sets of flags.",18,[[["memoryattributes",3]],["memoryattributes",3]]],[11,"bitor","","Returns the union of the two sets of flags.",18,[[["memoryattributes",3]],["memoryattributes",3]]],[11,"bitxor","","Returns the left flags, but with all the right flags…",18,[[["memoryattributes",3]],["memoryattributes",3]]],[11,"bitand_assign","","Disables all flags disabled in the set.",18,[[["memoryattributes",3]]]],[11,"bitor_assign","","Adds the set of flags.",18,[[["memoryattributes",3]]]],[11,"bitxor_assign","","Toggles the set of flags.",18,[[["memoryattributes",3]]]],[11,"hash","","",18,[[]]],[11,"extend","","",18,[[["intoiterator",8]]]],[11,"from_iter","","",18,[[["intoiterator",8]],["memoryattributes",3]]],[11,"write_str","tartan_uefi::io","",8,[[],["result",6]]],[11,"write_char","","",8,[[],["result",6]]],[11,"fmt","tartan_uefi","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"clone","","",19,[[],["handle",3]]],[11,"clone","","",0,[[],["revision",3]]],[11,"clone","","",14,[[],["status",3]]],[11,"clone","","",15,[[],["guid",3]]],[11,"clone","","",16,[[],["memorytype",3]]],[11,"clone","","",17,[[],["allocatetype",3]]],[11,"clone","","",18,[[],["memoryattributes",3]]],[11,"default","","",7,[[]]],[11,"alloc","tartan_uefi::allocator","",20,[[["layout",3]]]],[11,"dealloc","","",20,[[["layout",3]]]]],"p":[[3,"Revision"],[3,"TableHeader"],[3,"SystemTable"],[3,"RuntimeServices"],[3,"BootServices"],[3,"ConfigurationTable"],[3,"MemoryDescriptor"],[3,"MemoryMap"],[3,"OutputStream"],[3,"SimpleTextOutput"],[3,"SimpleTextOutputMode"],[3,"LoadedImage"],[8,"Protocol"],[8,"Table"],[3,"Status"],[3,"GUID"],[3,"MemoryType"],[3,"AllocateType"],[3,"MemoryAttributes"],[3,"Handle"],[3,"BootAllocator"],[3,"SimpleTextInput"],[6,"Result"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);