var searchIndex = JSON.parse('{\
"aml_parse":{"doc":"","i":[[3,"UsageError","aml_parse","",null,null],[5,"main","","",null,[[],[["box",3],["result",4]]]],[11,"from","","",0,[[]]],[11,"into","","",0,[[]]],[11,"to_string","","",0,[[],["string",3]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]]],"p":[[3,"UsageError"]]},\
"tartan_acpi":{"doc":"Support for Advanced Configuration and Power Interface","i":[[3,"RootDescriptionPointerV1","tartan_acpi","Root System Description Pointer (RSDP) used in ACPI 1.0",null,null],[12,"signature","","",0,null],[12,"checksum","","",0,null],[12,"oem_id","","",0,null],[12,"revision","","",0,null],[12,"root_description_table_addr","","",0,null],[3,"RootDescriptionPointerV2","","Extended RDSP defined by ACPI 2.0",null,null],[12,"v1","","",1,null],[12,"length","","",1,null],[12,"extended_description_table_addr","","",1,null],[12,"extended_checksum","","",1,null],[3,"DescriptionHeader","","Common table header defined as `DESCRIPTION_HEADER` in the…",null,null],[12,"signature","","",2,null],[12,"length","","",2,null],[12,"revision","","",2,null],[12,"checksum","","",2,null],[12,"oem_id","","",2,null],[12,"oem_table_id","","",2,null],[12,"oem_revision","","",2,null],[12,"creator_id","","",2,null],[12,"creator_revision","","",2,null],[3,"FixedDescription","","Fixed ACPI Description Table (FADT)",null,null],[12,"header","","",3,null],[12,"firmware_api_ctrl_addr_32","","",3,null],[12,"diff_description_addr_32","","",3,null],[12,"preferred_power_profile","","",3,null],[12,"sci_interrupt","","",3,null],[12,"smi_command_port","","",3,null],[12,"smi_command_acpi_enable","","",3,null],[12,"smi_command_acpi_disable","","",3,null],[12,"smi_command_s4_bios_enter","","",3,null],[12,"smi_command_cpu_state_enable","","",3,null],[12,"pm_event_port_block_1a_32","","",3,null],[12,"pm_event_port_block_1b_32","","",3,null],[12,"pm_cntrl_port_block_1a_32","","",3,null],[12,"pm_cntrl_port_block_1b_32","","",3,null],[12,"pm_cntrl_port_block_2_32","","",3,null],[12,"pm_timer_port_block_32","","",3,null],[12,"general_event_port_block_0_32","","",3,null],[12,"general_event_port_block_1_32","","",3,null],[12,"pm_event_port_block_1_length","","",3,null],[12,"pm_cntrl_port_block_1_length","","",3,null],[12,"pm_cntrl_port_block_2_length","","",3,null],[12,"pm_timer_port_block_length","","",3,null],[12,"general_event_port_block_0_length","","",3,null],[12,"general_event_port_block_1_length","","",3,null],[12,"general_event_port_block_1_base","","",3,null],[12,"smi_command_c_state_enable","","",3,null],[12,"cpu_c2_latency","","",3,null],[12,"cpu_c3_latency","","",3,null],[12,"cache_flush_stride_count","","",3,null],[12,"cache_flush_stride_width","","",3,null],[12,"cpu_duty_cycle_register_offset","","",3,null],[12,"cpu_duty_cycle_register_width","","",3,null],[12,"rtc_day_alarm_index","","",3,null],[12,"rtc_month_alarm_index","","",3,null],[12,"rtc_century_alarm_index","","",3,null],[12,"pc_boot_architecture_flags","","",3,null],[12,"flags","","",3,null],[12,"reset_register","","",3,null],[12,"reset_register_value","","",3,null],[12,"arm_boot_architecture_flags","","",3,null],[12,"revision_minor","","",3,null],[12,"firmware_api_ctrl_addr_64","","",3,null],[12,"diff_description_addr_64","","",3,null],[12,"pm_event_port_block_1a_64","","",3,null],[12,"pm_event_port_block_1b_64","","",3,null],[12,"pm_control_port_block_1a_64","","",3,null],[12,"pm_control_port_block_1b_64","","",3,null],[12,"pm_control_port_block_2_64","","",3,null],[12,"pm_timer_port_block_64","","",3,null],[12,"general_event_port_block_0_64","","",3,null],[12,"general_event_port_block_1_64","","",3,null],[12,"sleep_control_register_addr","","",3,null],[12,"sleep_status_register_addr","","",3,null],[12,"hypervisor_vendor","","",3,null],[3,"GenericAddress","","Extended address structure defined in ACPI 2.0 to support…",null,null],[3,"AddressSpace","","Type of register address",null,null],[3,"AccessSize","","Memory width used to read/write from a register",null,null],[3,"FixedFlags","","Support flags from Fixed ACPI Description Table",null,null],[0,"aml","","Abstract syntax tree for ACPI Machine Language",null,null],[3,"AMLTable","tartan_acpi::aml","An ACPI table that contains AML, such as the DSDT or an…",null,null],[12,"header","","Common ACPI table header",4,null],[12,"body","","Top-level AML objects defined in the table",4,null],[0,"parse","","Parsers for AML bytecode.",null,null],[5,"parse_table","tartan_acpi::aml::parse","Parse an ACPI table that contains AML, including the header",null,[[],[["errorwithposition",3],["amltable",3],["result",4]]]],[0,"state","","Parser context needed to disambiguate grammar",null,null],[3,"MethodSignature","tartan_acpi::aml::parse::state","Expected argument count for a method in the ACPI namespace.",null,null],[12,"name","","",5,null],[12,"arg_count","","",5,null],[3,"ParserState","","Input data plus context needed to disambiguate grammar",null,null],[12,"data","","",6,null],[12,"current_scope","","",6,null],[12,"method_signatures","","",6,null],[8,"ReplaceableParseError","","Helper trait used to convert a parser error from one input…",null,null],[16,"From","","",7,null],[10,"replace_input","","",7,[[]]],[11,"new","","",5,[[]]],[11,"new","","",6,[[]]],[11,"get_arg_count","","Get the argument count of the named method, if it is…",6,[[["namestring",3]],["option",4]]],[11,"in_scope","","Execute a parser in a new scope relative to the current…",6,[[["namestring",3]],["amlparseresult",6]]],[11,"lift","","Wraps a byte-oriented parser to work with `ParserState`",6,[[]]],[0,"name","tartan_acpi::aml::parse","Name objects, defined in §20.2.2",null,null],[5,"super_name_minus_invoke","tartan_acpi::aml::parse::name","Parse a [`SuperName`], but do not allow method invocations.",null,[[["parserstate",3]],[["amlparseerror",8],["amlparseresult",6],["supername",4]]]],[5,"parse_target","","Grammar:",null,[[["parserstate",3]],[["target",6],["amlparseerror",8],["amlparseresult",6]]]],[0,"data","tartan_acpi::aml::parse","Data objects, defined in §20.2.3",null,null],[0,"term","","Terms, defined in §20.2.5",null,null],[0,"misc","","Miscellaneous objects, defined in §20.2.6",null,null],[6,"AMLParseResult","","Alias for type returned by AML parsers",null,null],[8,"Parse","","An object that can be parsed from AML bytecode",null,null],[10,"parse","","Try to parse an object of this type from the given input…",8,[[["parserstate",3]],[["amlparseresult",6],["amlparseerror",8]]]],[8,"AMLParseError","","Trait \\\"alias\\\" for error type used by AML parsers",null,null],[0,"name","tartan_acpi::aml","Names of objects, arguments, and references",null,null],[3,"NameSeg","tartan_acpi::aml::name","Four-character name segment, allowing underscores,…",null,null],[12,"0","","",9,null],[3,"NameString","","Fully qualified object path, either absolute or relative.",null,null],[12,"anchor","","Specifies how to resolve this path as absolute or relative.",10,null],[12,"path","","Segments of the path",10,null],[4,"PathAnchor","","Indicates whether a name is absolute or relative to the…",null,null],[13,"Root","","",11,null],[13,"Parent","","",11,null],[4,"SimpleName","","A named object or variable.",null,null],[13,"Name","","",12,null],[13,"Arg","","",12,null],[13,"Local","","",12,null],[4,"SuperName","","A named object, variable, reference expression, or debug…",null,null],[13,"Name","","",13,null],[13,"Debug","","",13,null],[13,"Reference","","",13,null],[5,"to_path","","Convert a list of segments in various formats into a path…",null,[[],[["vec",3],["nameseg",3]]]],[6,"Target","","Location to store the result of an operation",null,null],[11,"empty","","",10,[[]]],[11,"new","","",10,[[]]],[11,"new_root","","",10,[[]]],[11,"new_parent","","",10,[[]]],[11,"resolve_as_decl","","Convert to an absolute namespace path in the context of…",10,[[],[["vec",3],["option",4]]]],[11,"resolve_as_ref","","List all possible absolute pathnames that this name may…",10,[[],[["vec",3],["vec",3]]]],[0,"data","tartan_acpi::aml","Data resources",null,null],[3,"Buffer","tartan_acpi::aml::data","Block of raw bytes, optionally initialized in whole or in…",null,null],[12,"size","","",14,null],[12,"initializer","","",14,null],[3,"Package","","Group of related data elements, optionally inititalized in…",null,null],[12,"count","","",15,null],[12,"initializers","","",15,null],[3,"VarPackage","","Group of related data elements, with a number of elements…",null,null],[12,"count","","",16,null],[12,"initializers","","",16,null],[4,"ComputationalData","","Single value resolved at compile time.",null,null],[13,"Byte","","",17,null],[13,"Word","","",17,null],[13,"DWord","","",17,null],[13,"QWord","","",17,null],[13,"String","","",17,null],[13,"Zero","","",17,null],[13,"One","","",17,null],[13,"Ones","","",17,null],[13,"Revision","","",17,null],[13,"Buffer","","",17,null],[4,"PackageElement","","A name or reference that constitutes part of a [`Package`]…",null,null],[13,"Ref","","",18,null],[13,"Name","","",18,null],[4,"DataObject","","Data resolved at compile time, possibly grouped in a…",null,null],[13,"Data","","",19,null],[13,"Package","","",19,null],[13,"VarPackage","","",19,null],[4,"DataRefObject","","",null,null],[13,"Data","","",20,null],[13,"ObjectReference","","",20,null],[13,"DefinitionBlockHandle","","",20,null],[0,"term","tartan_acpi::aml","Top-level terms and opcodes.",null,null],[3,"FieldFlags","tartan_acpi::aml::term","Rules for reading and writing a field.",null,null],[12,"access_type","","",21,null],[12,"lock","","",21,null],[12,"update_rule","","",21,null],[3,"MethodFlags","","Information about how to call a method.",null,null],[12,"arg_count","","",22,null],[12,"serialized","","",22,null],[12,"sync_level","","",22,null],[4,"TermObject","","Top-level, most general term type where the value (if any)…",null,null],[13,"Modifier","","",23,null],[13,"Named","","",23,null],[13,"Statement","","",23,null],[13,"Expression","","",23,null],[4,"TermArg","","Term that resolves to a value.",null,null],[13,"Expression","","",24,null],[13,"Data","","",24,null],[13,"Arg","","",24,null],[13,"Local","","",24,null],[13,"Name","","",24,null],[4,"NameSpaceModifier","","Term that attaches a name to its argument.",null,null],[13,"Alias","","Create a new `alias` for existing named `source` object.",25,null],[12,"source","tartan_acpi::aml::term::NameSpaceModifier","",26,null],[12,"alias","","",26,null],[13,"Name","tartan_acpi::aml::term","Attach a name to an anonymous data or reference.",25,null],[13,"Scope","","Evaluate the contained terms within a new scope.",25,null],[4,"NamedObject","","Term that defines an object with a name.",null,null],[13,"BankField","","Declare fields that can only be accessed after writing to…",27,null],[12,"region_name","tartan_acpi::aml::term::NamedObject","",28,null],[12,"bank_name","","",28,null],[12,"bank_value","","",28,null],[12,"flags","","",28,null],[12,"elements","","",28,null],[13,"CreateBitField","tartan_acpi::aml::term","Declare a single-bit field within a buffer",27,null],[12,"source_buffer","tartan_acpi::aml::term::NamedObject","",29,null],[12,"bit_index","","",29,null],[12,"name","","",29,null],[13,"CreateByteField","tartan_acpi::aml::term","Create a one-byte-wide field within a buffer",27,null],[12,"source_buffer","tartan_acpi::aml::term::NamedObject","",30,null],[12,"byte_index","","",30,null],[12,"name","","",30,null],[13,"CreateDWordField","tartan_acpi::aml::term","Declare a four-byte-wide field within a buffer",27,null],[12,"source_buffer","tartan_acpi::aml::term::NamedObject","",31,null],[12,"byte_index","","",31,null],[12,"name","","",31,null],[13,"CreateField","tartan_acpi::aml::term","Declare an arbitrary-width field within a buffer",27,null],[12,"source_buffer","tartan_acpi::aml::term::NamedObject","",32,null],[12,"bit_index","","",32,null],[12,"num_bits","","",32,null],[12,"name","","",32,null],[13,"CreateQWordField","tartan_acpi::aml::term","Declare an eight-byte-wide field within a buffer",27,null],[12,"source_buffer","tartan_acpi::aml::term::NamedObject","",33,null],[12,"byte_index","","",33,null],[12,"name","","",33,null],[13,"CreateWordField","tartan_acpi::aml::term","Declare a two-byte-wide field within a buffer",27,null],[12,"source_buffer","tartan_acpi::aml::term::NamedObject","",34,null],[12,"byte_index","","",34,null],[12,"name","","",34,null],[13,"DataTableRegion","tartan_acpi::aml::term","Allow an ACPI table indexed in the XSDT to be used as a…",27,null],[12,"name","tartan_acpi::aml::term::NamedObject","",35,null],[12,"signature","","",35,null],[12,"oem_id","","",35,null],[12,"oem_table_id","","",35,null],[13,"Device","tartan_acpi::aml::term","Declare a device and its associated fields, methods, and…",27,null],[12,"name","tartan_acpi::aml::term::NamedObject","",36,null],[12,"body","","",36,null],[13,"Event","tartan_acpi::aml::term","Declare a waitable synchronization object",27,null],[13,"External","","Declare an object that is defined in another ACPI table",27,null],[12,"name","tartan_acpi::aml::term::NamedObject","",37,null],[12,"object_type","","",37,null],[12,"argument_count","","",37,null],[13,"Field","tartan_acpi::aml::term","Declare a group of fields",27,null],[12,"region_name","tartan_acpi::aml::term::NamedObject","",38,null],[12,"flags","","",38,null],[12,"elements","","",38,null],[13,"IndexField","tartan_acpi::aml::term","Declare a group of field that must be accessed by writing…",27,null],[12,"index_name","tartan_acpi::aml::term::NamedObject","",39,null],[12,"data_name","","",39,null],[12,"flags","","",39,null],[12,"elements","","",39,null],[13,"Method","tartan_acpi::aml::term","Declare a control method",27,null],[12,"name","tartan_acpi::aml::term::NamedObject","",40,null],[12,"flags","","",40,null],[12,"body","","",40,null],[13,"Mutex","tartan_acpi::aml::term","Declare an acquirable mutex",27,null],[12,"name","tartan_acpi::aml::term::NamedObject","",41,null],[12,"sync_level","","",41,null],[13,"OperationRegion","tartan_acpi::aml::term","Declare an address space that can be used by fields",27,null],[12,"name","tartan_acpi::aml::term::NamedObject","",42,null],[12,"region_space","","",42,null],[12,"offset","","",42,null],[12,"length","","",42,null],[13,"PowerResource","tartan_acpi::aml::term","Declare a power resource object",27,null],[12,"name","tartan_acpi::aml::term::NamedObject","",43,null],[12,"system_level","","",43,null],[12,"resource_order","","",43,null],[12,"body","","",43,null],[13,"Processor","tartan_acpi::aml::term","Declare a processor and associated register block",27,null],[12,"name","tartan_acpi::aml::term::NamedObject","",44,null],[12,"id","","",44,null],[12,"register_block_addr","","",44,null],[12,"register_block_length","","",44,null],[12,"body","","",44,null],[13,"ThermalZone","tartan_acpi::aml::term","Declare a thermal zone namespace",27,null],[12,"name","tartan_acpi::aml::term::NamedObject","",45,null],[12,"body","","",45,null],[4,"AccessType","tartan_acpi::aml::term","Width used to access a field.",null,null],[13,"Any","","",46,null],[13,"Byte","","",46,null],[13,"Word","","",46,null],[13,"DWord","","",46,null],[13,"QWord","","",46,null],[13,"Buffer","","",46,null],[4,"UpdateRule","","Indicates what to do with unused bits when writing a field.",null,null],[13,"Preserve","","",47,null],[13,"WriteAsOnes","","",47,null],[13,"WriteAsZeros","","",47,null],[4,"FieldElement","","A substructure of a field.",null,null],[13,"Named","","A named bitfield.",48,null],[12,"name","tartan_acpi::aml::term::FieldElement","",49,null],[12,"bit_length","","",49,null],[13,"Reserved","tartan_acpi::aml::term","Indicates that the next most significant `bit_length` bits…",48,null],[12,"bit_length","tartan_acpi::aml::term::FieldElement","",50,null],[13,"AccessAs","tartan_acpi::aml::term","Sets access information for following fields.",48,null],[13,"ConnectNamed","","Indicates that following fields should be accessed with…",48,null],[13,"ConnectBuffer","","Indicates that following fields should be accessed with…",48,null],[4,"AccessAttrib","","Additional information about how a field is accessed.",null,null],[13,"None","","",51,null],[13,"Quick","","",51,null],[13,"SendReceive","","",51,null],[13,"Byte","","",51,null],[13,"Word","","",51,null],[13,"Block","","",51,null],[13,"ProcessCall","","",51,null],[13,"BlockProcessCall","","",51,null],[13,"Bytes","","",51,null],[13,"RawBytes","","",51,null],[13,"RawProcessBytes","","",51,null],[4,"RegionSpace","","Address space used to access a field.",null,null],[13,"SystemMemory","","",52,null],[13,"SystemIO","","",52,null],[13,"PCIConfig","","",52,null],[13,"EmbeddedControl","","",52,null],[13,"SMBus","","",52,null],[13,"SystemCMOS","","",52,null],[13,"PCIBarTarget","","",52,null],[13,"IPMI","","",52,null],[13,"GeneralPurposeIO","","",52,null],[13,"GenericSerialBus","","",52,null],[13,"PCC","","",52,null],[13,"OEMDefined","","",52,null],[4,"StatementOpcode","","Terminal operation that does not evaluate to a value,…",null,null],[13,"Break","","Break from a loop",53,null],[13,"BreakPoint","","Trigger a debugger breakpoint",53,null],[13,"Continue","","Continue to the next loop iteration",53,null],[13,"Fatal","","Signal an error that requires a system shutdown",53,null],[12,"fatal_type","tartan_acpi::aml::term::StatementOpcode","",54,null],[12,"code","","",54,null],[12,"arg","","",54,null],[13,"If","tartan_acpi::aml::term","Branch on a predicate",53,null],[12,"predicate","tartan_acpi::aml::term::StatementOpcode","",55,null],[12,"if_true","","",55,null],[12,"if_false","","",55,null],[13,"Load","tartan_acpi::aml::term","Load a dynamically-generated SSDT from a field, region, or…",53,null],[12,"name","tartan_acpi::aml::term::StatementOpcode","",56,null],[12,"definition_block_handle","","",56,null],[13,"NoOp","tartan_acpi::aml::term","Do nothing",53,null],[13,"Notify","","Send a signal value to a device/processor/zone",53,null],[12,"device_or_zone","tartan_acpi::aml::term::StatementOpcode","",57,null],[12,"value","","",57,null],[13,"Release","tartan_acpi::aml::term","Release a held mutex",53,null],[12,"mutex","tartan_acpi::aml::term::StatementOpcode","",58,null],[13,"Reset","tartan_acpi::aml::term","Clear the signalled state of an event object",53,null],[12,"event","tartan_acpi::aml::term::StatementOpcode","",59,null],[13,"Return","tartan_acpi::aml::term","Exit the current method and yield the given value to the…",53,null],[13,"Signal","","Signal to one thread waiting on the event",53,null],[12,"event","tartan_acpi::aml::term::StatementOpcode","",60,null],[13,"Sleep","tartan_acpi::aml::term","Delay for at least the given milliseconds, releasing the…",53,null],[12,"milliseconds","tartan_acpi::aml::term::StatementOpcode","",61,null],[13,"Stall","tartan_acpi::aml::term","Delay for at least the given microseconds, but do not…",53,null],[12,"microseconds","tartan_acpi::aml::term::StatementOpcode","",62,null],[13,"While","tartan_acpi::aml::term","Execute a series of statements as long as the predicate is…",53,null],[12,"predicate","tartan_acpi::aml::term::StatementOpcode","",63,null],[12,"body","","",63,null],[4,"ReferenceExpressionOpcode","tartan_acpi::aml::term","Terminal operation that evaluates to a reference.",null,null],[13,"RefOf","","Create a reference to the given name",64,null],[13,"Deref","","Get the target of a reference",64,null],[13,"Index","","Create a reference to an index within a buffer",64,null],[12,"source","tartan_acpi::aml::term::ReferenceExpressionOpcode","",65,null],[12,"index","","",65,null],[12,"result","","",65,null],[13,"Invoke","tartan_acpi::aml::term","Execute a control method",64,null],[4,"ExpressionOpcode","","Terminal operation that evaluates to a value or reference.",null,null],[13,"RefExpression","","",66,null],[13,"Buffer","","",66,null],[13,"Package","","",66,null],[13,"VarPackage","","",66,null],[13,"Acquire","","Try to acquire a mutex, returning true if the attempt…",66,null],[12,"mutex","tartan_acpi::aml::term::ExpressionOpcode","",67,null],[12,"timeout","","",67,null],[13,"Add","tartan_acpi::aml::term","Add two integers",66,null],[13,"BitwiseAnd","","Compute a bitwise AND of two integers",66,null],[13,"Concat","","Concatenate two strings or buffers",66,null],[13,"ConcatRes","","Concatenate two buffers containing resource templates",66,null],[13,"CondRefOf","","Try to create a reference, returning false if it is not…",66,null],[13,"CopyObject","","Update the destination with a copy of the given value,…",66,null],[13,"Decrement","","Decrement an integer variable",66,null],[13,"Divide","","Perform integer (quotient-remainder) division",66,null],[12,"dividend","tartan_acpi::aml::term::ExpressionOpcode","",68,null],[12,"divisor","","",68,null],[12,"remainder","","",68,null],[12,"quotient","","",68,null],[13,"FindSetLeftBit","tartan_acpi::aml::term","Get the index of the most-significant set bit in a value",66,null],[13,"FindSetRightBit","","Get the index of the least-significant set bit in a value",66,null],[13,"FromBCD","","Decode a series of binary-coded decimal nibbles into an…",66,null],[13,"Increment","","Increment an integer variable",66,null],[13,"LogicalAnd","","Evaluate to true if both arguments are non-zero integers",66,null],[13,"Equal","","Evaluate to true if both values are equal",66,null],[13,"Greater","","Evaluate to true if the left value is greater than the…",66,null],[13,"GreaterEqual","","Evaluate to true if the left value is greater than or…",66,null],[13,"Less","","Evaluate to true if the left value is less than the right…",66,null],[13,"LessEqual","","Evaluate to true if the left value is less than or equal…",66,null],[13,"LogicalNot","","Evaluate to true if the value is zero",66,null],[13,"NotEqual","","Evaluate to true if the left value is not equal to the…",66,null],[13,"LoadTable","","Find an ACPI table indexed by the XSDT",66,null],[12,"signature","tartan_acpi::aml::term::ExpressionOpcode","",69,null],[12,"oem_id","","",69,null],[12,"oem_table_id","","",69,null],[12,"root_path","","",69,null],[12,"parameter_path","","",69,null],[12,"parameter_data","","",69,null],[13,"LogicalOr","tartan_acpi::aml::term","Evaluate to true if either of the values is a non-zero…",66,null],[13,"Match","","Search a package and return the index of the first…",66,null],[12,"search_package","tartan_acpi::aml::term::ExpressionOpcode","",70,null],[12,"a","","",70,null],[12,"b","","",70,null],[12,"start_index","","",70,null],[13,"Mid","tartan_acpi::aml::term","Copy a slice of a string or buffer.",66,null],[12,"source","tartan_acpi::aml::term::ExpressionOpcode","",71,null],[12,"index","","",71,null],[12,"length","","",71,null],[12,"result","","",71,null],[13,"Mod","tartan_acpi::aml::term","Compute the remainder of dividing the first integer by the…",66,null],[13,"Multiply","","Multiply two integers",66,null],[13,"Nand","","Compute the bitwise NAND of two integers",66,null],[13,"Nor","","Compute the bitwise NOR of two integers",66,null],[13,"BitwiseNot","","Invert the bits of an integer",66,null],[13,"ObjectType","","Get an integer representing the type of the given value.…",66,null],[13,"BitwiseOr","","Compute the bitwise OR of the two integers",66,null],[13,"ShiftLeft","","Multiply an integer by the specified power of two",66,null],[13,"ShiftRight","","Divide an integer by the specified power of two",66,null],[13,"SizeOf","","Get the length of a string, buffer, or package",66,null],[13,"Store","","Update the destination with the given value, converting it…",66,null],[13,"Subtract","","Subtract an integer from another, ignoring underflow",66,null],[13,"Timer","","Get the current value of the system timer in 100ns",66,null],[13,"ToBCD","","Encode an integer into a sequence of binary-coded decimal…",66,null],[13,"ToBuffer","","Convert a value to a buffer",66,null],[13,"ToDecimalString","","Encode a value as an ASCII decimal number",66,null],[13,"ToHexString","","Encode a value as an ASCII hexadecimal number",66,null],[13,"ToInteger","","Convert a value to an integer, either by parsing a string…",66,null],[13,"ToString","","Copy an ASCII string from a buffer into a string value",66,null],[12,"source","tartan_acpi::aml::term::ExpressionOpcode","",72,null],[12,"length","","",72,null],[12,"result","","",72,null],[13,"Wait","tartan_acpi::aml::term","Try to wait for another thread to signal an event object,…",66,null],[12,"event","tartan_acpi::aml::term::ExpressionOpcode","",73,null],[12,"timeout","","",73,null],[13,"BitwiseXor","tartan_acpi::aml::term","Compute the bitwise XOR of two integers",66,null],[4,"MatchOpcode","","Type of comparison used for a branch in an…",null,null],[13,"True","","",74,null],[13,"Equal","","",74,null],[13,"LessEqual","","",74,null],[13,"Less","","",74,null],[13,"GreaterEqual","","",74,null],[13,"Greater","","",74,null],[4,"ObjectType","","Type ID returned by [`ExpressionOpcode::ObjectType`].",null,null],[13,"Uninitialized","","",75,null],[13,"Integer","","",75,null],[13,"String","","",75,null],[13,"Buffer","","",75,null],[13,"Package","","",75,null],[13,"FieldUnit","","",75,null],[13,"Device","","",75,null],[13,"Event","","",75,null],[13,"Method","","",75,null],[13,"Mutex","","",75,null],[13,"OperationRegion","","",75,null],[13,"PowerResource","","",75,null],[13,"Processor","","",75,null],[13,"ThermalZone","","",75,null],[13,"BufferField","","",75,null],[13,"DDBHandle","","",75,null],[13,"DebugObject","","",75,null],[11,"unsynced","","",22,[[]]],[0,"misc","tartan_acpi::aml","Special symbols",null,null],[3,"DebugObject","tartan_acpi::aml::misc","Symbol representing debugger output device.",null,null],[4,"ArgObject","","Symbol for a positional argument passed to the current…",null,null],[13,"Arg0","","",76,null],[13,"Arg1","","",76,null],[13,"Arg2","","",76,null],[13,"Arg3","","",76,null],[13,"Arg4","","",76,null],[13,"Arg5","","",76,null],[13,"Arg6","","",76,null],[4,"LocalObject","","Symbol for a variable local to the current method.",null,null],[13,"Local0","","",77,null],[13,"Local1","","",77,null],[13,"Local2","","",77,null],[13,"Local3","","",77,null],[13,"Local4","","",77,null],[13,"Local5","","",77,null],[13,"Local6","","",77,null],[13,"Local7","","",77,null],[18,"SystemMemory","tartan_acpi","",78,null],[18,"SystemIO","","",78,null],[18,"PCIConfiguration","","",78,null],[18,"EmbeddedController","","",78,null],[18,"SMBus","","",78,null],[18,"SystemCMOS","","",78,null],[18,"PCIBARTarget","","",78,null],[18,"IPMI","","",78,null],[18,"GeneralPurposeIo","","",78,null],[18,"GenericSerialBus","","",78,null],[18,"PlatformCommunicationsChannel","","",78,null],[18,"FunctionalFixed","","",78,null],[18,"OEMDefinedMin","","",78,null],[18,"OEMDefinedMax","","",78,null],[11,"name","","The name of the enum variant in code, if one is defined…",78,[[],["option",4]]],[18,"Undefined","","",79,null],[18,"Byte","","",79,null],[18,"Word","","",79,null],[18,"DWord","","",79,null],[18,"QWord","","",79,null],[11,"name","","The name of the enum variant in code, if one is defined…",79,[[],["option",4]]],[11,"x86_wbinvd_supported","","",80,[[]]],[11,"x86_wbinvd_requires_flush","","",80,[[]]],[11,"c1_supported","","",80,[[]]],[11,"c2_multi_cpu_supported","","",80,[[]]],[11,"power_button_is_control_method_device","","",80,[[]]],[11,"sleep_button_is_control_method_device","","",80,[[]]],[11,"rtc_not_fixed","","",80,[[]]],[11,"rtc_can_wake_s4","","",80,[[]]],[11,"timer_value_32_bit","","",80,[[]]],[11,"dock_capable","","",80,[[]]],[11,"fixed_description_reset_supported","","",80,[[]]],[11,"sealed_case","","",80,[[]]],[11,"headless","","",80,[[]]],[11,"execute_instruction_after_slp_typ","","",80,[[]]],[11,"pci_express_wake","","",80,[[]]],[11,"use_platform_clock","","",80,[[]]],[11,"rtc_status_valid_after_s4","","",80,[[]]],[11,"remote_power_on_supported","","",80,[[]]],[11,"force_apic_cluster_model","","",80,[[]]],[11,"force_apic_physical_destination_mode","","",80,[[]]],[11,"hardware_reduced_acpi","","",80,[[]]],[11,"low_power_s0_idle","","",80,[[]]],[11,"set_x86_wbinvd_supported","","",80,[[]]],[11,"set_x86_wbinvd_requires_flush","","",80,[[]]],[11,"set_c1_supported","","",80,[[]]],[11,"set_c2_multi_cpu_supported","","",80,[[]]],[11,"set_power_button_is_control_method_device","","",80,[[]]],[11,"set_sleep_button_is_control_method_device","","",80,[[]]],[11,"set_rtc_not_fixed","","",80,[[]]],[11,"set_rtc_can_wake_s4","","",80,[[]]],[11,"set_timer_value_32_bit","","",80,[[]]],[11,"set_dock_capable","","",80,[[]]],[11,"set_fixed_description_reset_supported","","",80,[[]]],[11,"set_sealed_case","","",80,[[]]],[11,"set_headless","","",80,[[]]],[11,"set_execute_instruction_after_slp_typ","","",80,[[]]],[11,"set_pci_express_wake","","",80,[[]]],[11,"set_use_platform_clock","","",80,[[]]],[11,"set_rtc_status_valid_after_s4","","",80,[[]]],[11,"set_remote_power_on_supported","","",80,[[]]],[11,"set_force_apic_cluster_model","","",80,[[]]],[11,"set_force_apic_physical_destination_mode","","",80,[[]]],[11,"set_hardware_reduced_acpi","","",80,[[]]],[11,"set_low_power_s0_idle","","",80,[[]]],[14,"parser_fn","","Defines a byte slice parser function, avoiding repetitive…",null,null],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"to_owned","","",3,[[]]],[11,"clone_into","","",3,[[]]],[11,"from","","",81,[[]]],[11,"borrow","","",81,[[]]],[11,"borrow_mut","","",81,[[]]],[11,"try_from","","",81,[[],["result",4]]],[11,"into","","",81,[[]]],[11,"try_into","","",81,[[],["result",4]]],[11,"type_id","","",81,[[],["typeid",3]]],[11,"to_owned","","",81,[[]]],[11,"clone_into","","",81,[[]]],[11,"from","","",78,[[]]],[11,"borrow","","",78,[[]]],[11,"borrow_mut","","",78,[[]]],[11,"try_from","","",78,[[],["result",4]]],[11,"into","","",78,[[]]],[11,"try_into","","",78,[[],["result",4]]],[11,"type_id","","",78,[[],["typeid",3]]],[11,"to_owned","","",78,[[]]],[11,"clone_into","","",78,[[]]],[11,"from","","",79,[[]]],[11,"borrow","","",79,[[]]],[11,"borrow_mut","","",79,[[]]],[11,"try_from","","",79,[[],["result",4]]],[11,"into","","",79,[[]]],[11,"try_into","","",79,[[],["result",4]]],[11,"type_id","","",79,[[],["typeid",3]]],[11,"to_owned","","",79,[[]]],[11,"clone_into","","",79,[[]]],[11,"from","","",80,[[]]],[11,"borrow","","",80,[[]]],[11,"borrow_mut","","",80,[[]]],[11,"try_from","","",80,[[],["result",4]]],[11,"into","","",80,[[]]],[11,"try_into","","",80,[[],["result",4]]],[11,"type_id","","",80,[[],["typeid",3]]],[11,"to_owned","","",80,[[]]],[11,"clone_into","","",80,[[]]],[11,"from","tartan_acpi::aml","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","tartan_acpi::aml::parse::state","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"to_owned","","",5,[[]]],[11,"clone_into","","",5,[[]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"to_owned","","",6,[[]]],[11,"clone_into","","",6,[[]]],[11,"from","tartan_acpi::aml::name","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"to_owned","","",9,[[]]],[11,"clone_into","","",9,[[]]],[11,"to_string","","",9,[[],["string",3]]],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"to_string","","",10,[[],["string",3]]],[11,"from","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"to_owned","","",11,[[]]],[11,"clone_into","","",11,[[]]],[11,"to_string","","",11,[[],["string",3]]],[11,"from","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"to_owned","","",12,[[]]],[11,"clone_into","","",12,[[]]],[11,"from","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"to_owned","","",13,[[]]],[11,"clone_into","","",13,[[]]],[11,"from","tartan_acpi::aml::data","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"to_owned","","",14,[[]]],[11,"clone_into","","",14,[[]]],[11,"from","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"from","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"to_owned","","",16,[[]]],[11,"clone_into","","",16,[[]]],[11,"from","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"from","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"from","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"from","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"from","tartan_acpi::aml::term","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"from","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"from","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"from","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"from","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"to_owned","","",25,[[]]],[11,"clone_into","","",25,[[]]],[11,"from","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"from","","",46,[[]]],[11,"borrow","","",46,[[]]],[11,"borrow_mut","","",46,[[]]],[11,"try_from","","",46,[[],["result",4]]],[11,"into","","",46,[[]]],[11,"try_into","","",46,[[],["result",4]]],[11,"type_id","","",46,[[],["typeid",3]]],[11,"to_owned","","",46,[[]]],[11,"clone_into","","",46,[[]]],[11,"from","","",47,[[]]],[11,"borrow","","",47,[[]]],[11,"borrow_mut","","",47,[[]]],[11,"try_from","","",47,[[],["result",4]]],[11,"into","","",47,[[]]],[11,"try_into","","",47,[[],["result",4]]],[11,"type_id","","",47,[[],["typeid",3]]],[11,"to_owned","","",47,[[]]],[11,"clone_into","","",47,[[]]],[11,"from","","",48,[[]]],[11,"borrow","","",48,[[]]],[11,"borrow_mut","","",48,[[]]],[11,"try_from","","",48,[[],["result",4]]],[11,"into","","",48,[[]]],[11,"try_into","","",48,[[],["result",4]]],[11,"type_id","","",48,[[],["typeid",3]]],[11,"to_owned","","",48,[[]]],[11,"clone_into","","",48,[[]]],[11,"from","","",51,[[]]],[11,"borrow","","",51,[[]]],[11,"borrow_mut","","",51,[[]]],[11,"try_from","","",51,[[],["result",4]]],[11,"into","","",51,[[]]],[11,"try_into","","",51,[[],["result",4]]],[11,"type_id","","",51,[[],["typeid",3]]],[11,"to_owned","","",51,[[]]],[11,"clone_into","","",51,[[]]],[11,"from","","",52,[[]]],[11,"borrow","","",52,[[]]],[11,"borrow_mut","","",52,[[]]],[11,"try_from","","",52,[[],["result",4]]],[11,"into","","",52,[[]]],[11,"try_into","","",52,[[],["result",4]]],[11,"type_id","","",52,[[],["typeid",3]]],[11,"to_owned","","",52,[[]]],[11,"clone_into","","",52,[[]]],[11,"from","","",53,[[]]],[11,"borrow","","",53,[[]]],[11,"borrow_mut","","",53,[[]]],[11,"try_from","","",53,[[],["result",4]]],[11,"into","","",53,[[]]],[11,"try_into","","",53,[[],["result",4]]],[11,"type_id","","",53,[[],["typeid",3]]],[11,"to_owned","","",53,[[]]],[11,"clone_into","","",53,[[]]],[11,"from","","",64,[[]]],[11,"borrow","","",64,[[]]],[11,"borrow_mut","","",64,[[]]],[11,"try_from","","",64,[[],["result",4]]],[11,"into","","",64,[[]]],[11,"try_into","","",64,[[],["result",4]]],[11,"type_id","","",64,[[],["typeid",3]]],[11,"to_owned","","",64,[[]]],[11,"clone_into","","",64,[[]]],[11,"from","","",66,[[]]],[11,"borrow","","",66,[[]]],[11,"borrow_mut","","",66,[[]]],[11,"try_from","","",66,[[],["result",4]]],[11,"into","","",66,[[]]],[11,"try_into","","",66,[[],["result",4]]],[11,"type_id","","",66,[[],["typeid",3]]],[11,"to_owned","","",66,[[]]],[11,"clone_into","","",66,[[]]],[11,"from","","",74,[[]]],[11,"borrow","","",74,[[]]],[11,"borrow_mut","","",74,[[]]],[11,"try_from","","",74,[[],["result",4]]],[11,"into","","",74,[[]]],[11,"try_into","","",74,[[],["result",4]]],[11,"type_id","","",74,[[],["typeid",3]]],[11,"to_owned","","",74,[[]]],[11,"clone_into","","",74,[[]]],[11,"from","","",75,[[]]],[11,"borrow","","",75,[[]]],[11,"borrow_mut","","",75,[[]]],[11,"try_from","","",75,[[],["result",4]]],[11,"into","","",75,[[]]],[11,"try_into","","",75,[[],["result",4]]],[11,"type_id","","",75,[[],["typeid",3]]],[11,"to_owned","","",75,[[]]],[11,"clone_into","","",75,[[]]],[11,"from","tartan_acpi::aml::misc","",82,[[]]],[11,"borrow","","",82,[[]]],[11,"borrow_mut","","",82,[[]]],[11,"try_from","","",82,[[],["result",4]]],[11,"into","","",82,[[]]],[11,"try_into","","",82,[[],["result",4]]],[11,"type_id","","",82,[[],["typeid",3]]],[11,"to_owned","","",82,[[]]],[11,"clone_into","","",82,[[]]],[11,"from","","",76,[[]]],[11,"borrow","","",76,[[]]],[11,"borrow_mut","","",76,[[]]],[11,"try_from","","",76,[[],["result",4]]],[11,"into","","",76,[[]]],[11,"try_into","","",76,[[],["result",4]]],[11,"type_id","","",76,[[],["typeid",3]]],[11,"to_owned","","",76,[[]]],[11,"clone_into","","",76,[[]]],[11,"from","","",77,[[]]],[11,"borrow","","",77,[[]]],[11,"borrow_mut","","",77,[[]]],[11,"try_from","","",77,[[],["result",4]]],[11,"into","","",77,[[]]],[11,"try_into","","",77,[[],["result",4]]],[11,"type_id","","",77,[[],["typeid",3]]],[11,"to_owned","","",77,[[]]],[11,"clone_into","","",77,[[]]],[11,"parse","tartan_acpi::aml::name","",9,[[["parserstate",3]],[["amlparseresult",6],["amlparseerror",8]]]],[11,"parse","","",10,[[["parserstate",3]],[["amlparseresult",6],["amlparseerror",8]]]],[11,"parse","","",11,[[["parserstate",3]],[["amlparseresult",6],["amlparseerror",8]]]],[11,"parse","","",12,[[["parserstate",3]],[["amlparseresult",6],["amlparseerror",8]]]],[11,"parse","","",13,[[["parserstate",3]],[["amlparseresult",6],["amlparseerror",8]]]],[11,"parse","tartan_acpi::aml::data","",17,[[["parserstate",3]],[["amlparseresult",6],["amlparseerror",8]]]],[11,"parse","","",14,[[["parserstate",3]],[["amlparseresult",6],["amlparseerror",8]]]],[11,"parse","","",15,[[["parserstate",3]],[["amlparseresult",6],["amlparseerror",8]]]],[11,"parse","","",16,[[["parserstate",3]],[["amlparseresult",6],["amlparseerror",8]]]],[11,"parse","","",18,[[["parserstate",3]],[["amlparseresult",6],["amlparseerror",8]]]],[11,"parse","","",19,[[["parserstate",3]],[["amlparseresult",6],["amlparseerror",8]]]],[11,"parse","","",20,[[["parserstate",3]],[["amlparseresult",6],["amlparseerror",8]]]],[11,"parse","tartan_acpi::aml::term","",23,[[["parserstate",3]],[["amlparseresult",6],["amlparseerror",8]]]],[11,"parse","","",24,[[["parserstate",3]],[["amlparseresult",6],["amlparseerror",8]]]],[11,"parse","","",25,[[["parserstate",3]],[["amlparseresult",6],["amlparseerror",8]]]],[11,"parse","","",27,[[["parserstate",3]],[["amlparseresult",6],["amlparseerror",8]]]],[11,"parse","","",21,[[["parserstate",3]],[["amlparseresult",6],["amlparseerror",8]]]],[11,"parse","","",48,[[["parserstate",3]],[["amlparseresult",6],["amlparseerror",8]]]],[11,"parse","","",22,[[["parserstate",3]],[["amlparseresult",6],["amlparseerror",8]]]],[11,"parse","","",52,[[["parserstate",3]],[["amlparseresult",6],["amlparseerror",8]]]],[11,"parse","","",53,[[["parserstate",3]],[["amlparseresult",6],["amlparseerror",8]]]],[11,"parse","","",64,[[["parserstate",3]],[["amlparseresult",6],["amlparseerror",8]]]],[11,"parse","","",66,[[["parserstate",3]],[["amlparseresult",6],["amlparseerror",8]]]],[11,"parse","","",74,[[["parserstate",3]],[["amlparseresult",6],["amlparseerror",8]]]],[11,"parse","","",75,[[["parserstate",3]],[["amlparseresult",6],["amlparseerror",8]]]],[11,"parse","tartan_acpi::aml::misc","",76,[[["parserstate",3]],[["amlparseresult",6],["amlparseerror",8]]]],[11,"parse","","",77,[[["parserstate",3]],[["amlparseresult",6],["amlparseerror",8]]]],[11,"parse","","",82,[[["parserstate",3]],[["amlparseresult",6],["amlparseerror",8]]]],[11,"from","tartan_acpi::aml::parse::state","",6,[[]]],[11,"from","tartan_acpi::aml::name","",9,[[],["nameseg",3]]],[11,"from","","",10,[[],["namestring",3]]],[11,"from","","",10,[[["nameseg",3]],["namestring",3]]],[11,"from","","",12,[[["namestring",3]],["simplename",4]]],[11,"from","","",12,[[["argobject",4]],["simplename",4]]],[11,"from","","",12,[[["localobject",4]],["simplename",4]]],[11,"from","","",13,[[["simplename",4]],["supername",4]]],[11,"from","","",13,[[["namestring",3]],["supername",4]]],[11,"from","","",13,[[["argobject",4]],["supername",4]]],[11,"from","","",13,[[["localobject",4]],["supername",4]]],[11,"from","","",13,[[["referenceexpressionopcode",4]],["supername",4]]],[11,"from","tartan_acpi::aml::data","",18,[[["datarefobject",4]],["packageelement",4]]],[11,"from","","",18,[[["namestring",3]],["packageelement",4]]],[11,"from","","",19,[[["computationaldata",4]],["dataobject",4]]],[11,"from","","",19,[[["package",3]],["dataobject",4]]],[11,"from","","",19,[[["varpackage",3]],["dataobject",4]]],[11,"from","","",20,[[["dataobject",4]],["datarefobject",4]]],[11,"from","","",20,[[["computationaldata",4]],["datarefobject",4]]],[11,"from","","",20,[[["package",3]],["datarefobject",4]]],[11,"from","","",20,[[["varpackage",3]],["datarefobject",4]]],[11,"from","tartan_acpi::aml::term","",23,[[["namespacemodifier",4]],["termobject",4]]],[11,"from","","",23,[[["namedobject",4]],["termobject",4]]],[11,"from","","",23,[[["statementopcode",4]],["termobject",4]]],[11,"from","","",23,[[["expressionopcode",4]],["termobject",4]]],[11,"from","","",23,[[["referenceexpressionopcode",4]],["termobject",4]]],[11,"from","","",23,[[["buffer",3]],["termobject",4]]],[11,"from","","",23,[[["package",3]],["termobject",4]]],[11,"from","","",23,[[["varpackage",3]],["termobject",4]]],[11,"from","","",24,[[["expressionopcode",4]],["termarg",4]]],[11,"from","","",24,[[["referenceexpressionopcode",4]],["termarg",4]]],[11,"from","","",24,[[["buffer",3]],["termarg",4]]],[11,"from","","",24,[[["package",3]],["termarg",4]]],[11,"from","","",24,[[["varpackage",3]],["termarg",4]]],[11,"from","","",24,[[["dataobject",4]],["termarg",4]]],[11,"from","","",24,[[["computationaldata",4]],["termarg",4]]],[11,"from","","",24,[[["argobject",4]],["termarg",4]]],[11,"from","","",24,[[["localobject",4]],["termarg",4]]],[11,"from","","",24,[[["namestring",3]],["termarg",4]]],[11,"from","","",66,[[["referenceexpressionopcode",4]],["expressionopcode",4]]],[11,"from","","",66,[[["buffer",3]],["expressionopcode",4]]],[11,"from","","",66,[[["package",3]],["expressionopcode",4]]],[11,"from","","",66,[[["varpackage",3]],["expressionopcode",4]]],[11,"from","tartan_acpi","",78,[[]]],[11,"from","","",79,[[]]],[11,"from","","",80,[[]]],[11,"fmt","tartan_acpi::aml::parse::state","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","tartan_acpi::aml","",4,[[["formatter",3]],["result",6]]],[11,"fmt","tartan_acpi::aml::name","",9,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",10,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","tartan_acpi::aml::data","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","tartan_acpi::aml::term","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","","",25,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",46,[[["formatter",3]],["result",6]]],[11,"fmt","","",47,[[["formatter",3]],["result",6]]],[11,"fmt","","",48,[[["formatter",3]],["result",6]]],[11,"fmt","","",51,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",52,[[["formatter",3]],["result",6]]],[11,"fmt","","",53,[[["formatter",3]],["result",6]]],[11,"fmt","","",64,[[["formatter",3]],["result",6]]],[11,"fmt","","",66,[[["formatter",3]],["result",6]]],[11,"fmt","","",74,[[["formatter",3]],["result",6]]],[11,"fmt","","",75,[[["formatter",3]],["result",6]]],[11,"fmt","tartan_acpi::aml::misc","",76,[[["formatter",3]],["result",6]]],[11,"fmt","","",77,[[["formatter",3]],["result",6]]],[11,"fmt","","",82,[[["formatter",3]],["result",6]]],[11,"fmt","tartan_acpi","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",81,[[["formatter",3]],["result",6]]],[11,"fmt","","",78,[[["formatter",3]],["result",6]]],[11,"fmt","","",79,[[["formatter",3]],["result",6]]],[11,"fmt","","",80,[[["formatter",3]],["result",6]]],[11,"fmt","tartan_acpi::aml::name","",9,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","Format a `NameString` like a path in ASL",10,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",11,[[["formatter",3]],[["error",3],["result",4]]]],[11,"eq","tartan_acpi::aml::parse::state","",5,[[["methodsignature",3]]]],[11,"ne","","",5,[[["methodsignature",3]]]],[11,"eq","","",6,[[["parserstate",3]]]],[11,"ne","","",6,[[["parserstate",3]]]],[11,"eq","tartan_acpi::aml","",4,[[["amltable",3]]]],[11,"ne","","",4,[[["amltable",3]]]],[11,"eq","tartan_acpi::aml::name","",9,[[["nameseg",3]]]],[11,"ne","","",9,[[["nameseg",3]]]],[11,"eq","","",10,[[["namestring",3]]]],[11,"ne","","",10,[[["namestring",3]]]],[11,"eq","","",11,[[["pathanchor",4]]]],[11,"ne","","",11,[[["pathanchor",4]]]],[11,"eq","","",12,[[["simplename",4]]]],[11,"ne","","",12,[[["simplename",4]]]],[11,"eq","","",13,[[["supername",4]]]],[11,"ne","","",13,[[["supername",4]]]],[11,"eq","tartan_acpi::aml::data","",17,[[["computationaldata",4]]]],[11,"ne","","",17,[[["computationaldata",4]]]],[11,"eq","","",14,[[["buffer",3]]]],[11,"ne","","",14,[[["buffer",3]]]],[11,"eq","","",15,[[["package",3]]]],[11,"ne","","",15,[[["package",3]]]],[11,"eq","","",16,[[["varpackage",3]]]],[11,"ne","","",16,[[["varpackage",3]]]],[11,"eq","","",18,[[["packageelement",4]]]],[11,"ne","","",18,[[["packageelement",4]]]],[11,"eq","","",19,[[["dataobject",4]]]],[11,"ne","","",19,[[["dataobject",4]]]],[11,"eq","","",20,[[["datarefobject",4]]]],[11,"ne","","",20,[[["datarefobject",4]]]],[11,"eq","tartan_acpi::aml::term","",23,[[["termobject",4]]]],[11,"ne","","",23,[[["termobject",4]]]],[11,"eq","","",24,[[["termarg",4]]]],[11,"ne","","",24,[[["termarg",4]]]],[11,"eq","","",25,[[["namespacemodifier",4]]]],[11,"ne","","",25,[[["namespacemodifier",4]]]],[11,"eq","","",27,[[["namedobject",4]]]],[11,"ne","","",27,[[["namedobject",4]]]],[11,"eq","","",21,[[["fieldflags",3]]]],[11,"ne","","",21,[[["fieldflags",3]]]],[11,"eq","","",46,[[["accesstype",4]]]],[11,"eq","","",47,[[["updaterule",4]]]],[11,"eq","","",48,[[["fieldelement",4]]]],[11,"ne","","",48,[[["fieldelement",4]]]],[11,"eq","","",51,[[["accessattrib",4]]]],[11,"ne","","",51,[[["accessattrib",4]]]],[11,"eq","","",22,[[["methodflags",3]]]],[11,"ne","","",22,[[["methodflags",3]]]],[11,"eq","","",52,[[["regionspace",4]]]],[11,"ne","","",52,[[["regionspace",4]]]],[11,"eq","","",53,[[["statementopcode",4]]]],[11,"ne","","",53,[[["statementopcode",4]]]],[11,"eq","","",64,[[["referenceexpressionopcode",4]]]],[11,"ne","","",64,[[["referenceexpressionopcode",4]]]],[11,"eq","","",66,[[["expressionopcode",4]]]],[11,"ne","","",66,[[["expressionopcode",4]]]],[11,"eq","","",74,[[["matchopcode",4]]]],[11,"eq","","",75,[[["objecttype",4]]]],[11,"eq","tartan_acpi::aml::misc","",76,[[["argobject",4]]]],[11,"eq","","",77,[[["localobject",4]]]],[11,"eq","","",82,[[["debugobject",3]]]],[11,"eq","tartan_acpi","",0,[[["rootdescriptionpointerv1",3]]]],[11,"ne","","",0,[[["rootdescriptionpointerv1",3]]]],[11,"eq","","",1,[[["rootdescriptionpointerv2",3]]]],[11,"ne","","",1,[[["rootdescriptionpointerv2",3]]]],[11,"eq","","",2,[[["descriptionheader",3]]]],[11,"ne","","",2,[[["descriptionheader",3]]]],[11,"eq","","",3,[[["fixeddescription",3]]]],[11,"ne","","",3,[[["fixeddescription",3]]]],[11,"eq","","",81,[[["genericaddress",3]]]],[11,"ne","","",81,[[["genericaddress",3]]]],[11,"eq","","",78,[[["addressspace",3]]]],[11,"ne","","",78,[[["addressspace",3]]]],[11,"eq","","",79,[[["accesssize",3]]]],[11,"ne","","",79,[[["accesssize",3]]]],[11,"eq","","",80,[[["fixedflags",3]]]],[11,"ne","","",80,[[["fixedflags",3]]]],[11,"cmp","","",78,[[["addressspace",3]],["ordering",4]]],[11,"cmp","","",79,[[["accesssize",3]],["ordering",4]]],[11,"partial_cmp","","",78,[[["addressspace",3]],[["ordering",4],["option",4]]]],[11,"lt","","",78,[[["addressspace",3]]]],[11,"le","","",78,[[["addressspace",3]]]],[11,"gt","","",78,[[["addressspace",3]]]],[11,"ge","","",78,[[["addressspace",3]]]],[11,"partial_cmp","","",79,[[["accesssize",3]],[["ordering",4],["option",4]]]],[11,"lt","","",79,[[["accesssize",3]]]],[11,"le","","",79,[[["accesssize",3]]]],[11,"gt","","",79,[[["accesssize",3]]]],[11,"ge","","",79,[[["accesssize",3]]]],[11,"hash","","",78,[[]]],[11,"hash","","",79,[[]]],[11,"try_from","tartan_acpi::aml::term","",46,[[],["result",4]]],[11,"try_from","","",47,[[],["result",4]]],[11,"clone","tartan_acpi::aml::parse::state","",5,[[],["methodsignature",3]]],[11,"clone","","",6,[[],["parserstate",3]]],[11,"clone","tartan_acpi::aml::name","",9,[[],["nameseg",3]]],[11,"clone","","",10,[[],["namestring",3]]],[11,"clone","","",11,[[],["pathanchor",4]]],[11,"clone","","",12,[[],["simplename",4]]],[11,"clone","","",13,[[],["supername",4]]],[11,"clone","tartan_acpi::aml::data","",17,[[],["computationaldata",4]]],[11,"clone","","",14,[[],["buffer",3]]],[11,"clone","","",15,[[],["package",3]]],[11,"clone","","",16,[[],["varpackage",3]]],[11,"clone","","",18,[[],["packageelement",4]]],[11,"clone","","",19,[[],["dataobject",4]]],[11,"clone","","",20,[[],["datarefobject",4]]],[11,"clone","tartan_acpi::aml::term","",23,[[],["termobject",4]]],[11,"clone","","",24,[[],["termarg",4]]],[11,"clone","","",25,[[],["namespacemodifier",4]]],[11,"clone","","",27,[[],["namedobject",4]]],[11,"clone","","",21,[[],["fieldflags",3]]],[11,"clone","","",46,[[],["accesstype",4]]],[11,"clone","","",47,[[],["updaterule",4]]],[11,"clone","","",48,[[],["fieldelement",4]]],[11,"clone","","",51,[[],["accessattrib",4]]],[11,"clone","","",22,[[],["methodflags",3]]],[11,"clone","","",52,[[],["regionspace",4]]],[11,"clone","","",53,[[],["statementopcode",4]]],[11,"clone","","",64,[[],["referenceexpressionopcode",4]]],[11,"clone","","",66,[[],["expressionopcode",4]]],[11,"clone","","",74,[[],["matchopcode",4]]],[11,"clone","","",75,[[],["objecttype",4]]],[11,"clone","tartan_acpi::aml::misc","",76,[[],["argobject",4]]],[11,"clone","","",77,[[],["localobject",4]]],[11,"clone","","",82,[[],["debugobject",3]]],[11,"clone","tartan_acpi","",0,[[],["rootdescriptionpointerv1",3]]],[11,"clone","","",1,[[],["rootdescriptionpointerv2",3]]],[11,"clone","","",2,[[],["descriptionheader",3]]],[11,"clone","","",3,[[],["fixeddescription",3]]],[11,"clone","","",81,[[],["genericaddress",3]]],[11,"clone","","",78,[[],["addressspace",3]]],[11,"clone","","",79,[[],["accesssize",3]]],[11,"clone","","",80,[[],["fixedflags",3]]],[11,"default","tartan_acpi::aml::parse::state","",5,[[],["methodsignature",3]]],[11,"default","","",6,[[],["parserstate",3]]],[11,"default","tartan_acpi","",78,[[],["addressspace",3]]],[11,"default","","",79,[[],["accesssize",3]]],[11,"default","","",80,[[],["fixedflags",3]]],[11,"name","","",78,[[],["option",4]]],[11,"name","","",79,[[],["option",4]]],[11,"input_len","tartan_acpi::aml::parse::state","",6,[[]]],[11,"as_bytes","","",6,[[]]],[11,"iter_indices","","",6,[[]]],[11,"iter_elements","","",6,[[]]],[11,"position","","",6,[[["fn",8]],["option",4]]],[11,"slice_index","","",6,[[],["option",4]]]],"p":[[3,"RootDescriptionPointerV1"],[3,"RootDescriptionPointerV2"],[3,"DescriptionHeader"],[3,"FixedDescription"],[3,"AMLTable"],[3,"MethodSignature"],[3,"ParserState"],[8,"ReplaceableParseError"],[8,"Parse"],[3,"NameSeg"],[3,"NameString"],[4,"PathAnchor"],[4,"SimpleName"],[4,"SuperName"],[3,"Buffer"],[3,"Package"],[3,"VarPackage"],[4,"ComputationalData"],[4,"PackageElement"],[4,"DataObject"],[4,"DataRefObject"],[3,"FieldFlags"],[3,"MethodFlags"],[4,"TermObject"],[4,"TermArg"],[4,"NameSpaceModifier"],[13,"Alias"],[4,"NamedObject"],[13,"BankField"],[13,"CreateBitField"],[13,"CreateByteField"],[13,"CreateDWordField"],[13,"CreateField"],[13,"CreateQWordField"],[13,"CreateWordField"],[13,"DataTableRegion"],[13,"Device"],[13,"External"],[13,"Field"],[13,"IndexField"],[13,"Method"],[13,"Mutex"],[13,"OperationRegion"],[13,"PowerResource"],[13,"Processor"],[13,"ThermalZone"],[4,"AccessType"],[4,"UpdateRule"],[4,"FieldElement"],[13,"Named"],[13,"Reserved"],[4,"AccessAttrib"],[4,"RegionSpace"],[4,"StatementOpcode"],[13,"Fatal"],[13,"If"],[13,"Load"],[13,"Notify"],[13,"Release"],[13,"Reset"],[13,"Signal"],[13,"Sleep"],[13,"Stall"],[13,"While"],[4,"ReferenceExpressionOpcode"],[13,"Index"],[4,"ExpressionOpcode"],[13,"Acquire"],[13,"Divide"],[13,"LoadTable"],[13,"Match"],[13,"Mid"],[13,"ToString"],[13,"Wait"],[4,"MatchOpcode"],[4,"ObjectType"],[4,"ArgObject"],[4,"LocalObject"],[3,"AddressSpace"],[3,"AccessSize"],[3,"FixedFlags"],[3,"GenericAddress"],[3,"DebugObject"]]},\
"tartan_arch":{"doc":"Architecture-specific bindings for Tartan OS","i":[[5,"jump","tartan_arch","Unconditionally transfer control to the instruction at the…",null,[[]]],[0,"x86","","Architecture-specific bindings for 32-bit x86 processors.",null,null],[0,"protection","tartan_arch::x86","Support for protected mode operation.",null,null],[3,"BasicTaskStateSegment","tartan_arch::x86::protection","A task state segment (TSS) with fixed redirect and I/O…",null,null],[12,"header","","Saved task data and pointer to bitmaps",0,null],[12,"bitmaps","","I/O permission map and interrupt redirect map",0,null],[3,"TaskStateSegmentHeader","","Saved task state that makes up the most significant part…",null,null],[12,"previous_task","","Segment selector saved by the processor referencing the…",1,null],[12,"privileged_stack","","Stack pointer and segment for privilege levels 0–2.",1,null],[12,"control_register_3","","Page table pointer from [`ControlRegister3`].",1,null],[12,"instruction_pointer","","`EIP` value saved by the processor.",1,null],[12,"flags","","`EFLAGS` value saved by the processor.",1,null],[12,"general_a","","`EAX` value saved by the processor.",1,null],[12,"general_c","","`ECX` value saved by the processor.",1,null],[12,"general_d","","`EDX` value saved by the processor.",1,null],[12,"general_b","","`EBX` value saved by the processor.",1,null],[12,"stack_pointer","","`SP` value saved by the processor for privilege level 3.",1,null],[12,"base_pointer","","`EBP` value saved by the processor.",1,null],[12,"source_index","","`ESI` value saved by the processor.",1,null],[12,"destination_index","","`EDI` value saved by the processor.",1,null],[12,"general_segment_e","","`ES` value saved by the processor.",1,null],[12,"code_segment","","`CS` value saved by the processor.",1,null],[12,"stack_segment","","`SS` value saved by the processor for privilege level 3.",1,null],[12,"data_segment","","`DS` value saved by the processor.",1,null],[12,"general_segment_f","","`FS` value saved by the processor.",1,null],[12,"general_segment_g","","`GS` value saved by the processor.",1,null],[12,"local_descriptor_table","","[`LocalDescriptorTableRegister`] value to load when…",1,null],[12,"debug_trap","","Indicates that a debug exception should be raised when…",1,null],[12,"io_permission_map_offset","","Offset from the start of this structure to start of the…",1,null],[12,"shadow_stack_pointer","","Pointer to the shadow stack.",1,null],[3,"PrivilegedStack","","Stack pointer and segment for a given privilege level",null,null],[12,"pointer","","Stack pointer (`SP`) value for this privilege level.",2,null],[12,"segment","","Stack segment (`SS`) value for this privilege level.",2,null],[3,"TaskStateSegmentBitmaps","","I/O permission map and interrupt redirect map, which are…",null,null],[12,"interrupt_redirect","","Indicates which handler to use for software-triggered…",3,null],[12,"io_permission","","The [`IOPermissionBitmap`] for this task.",3,null],[0,"x86_64","tartan_arch","Architecture-specific bindings for 64-bit x86 processors.",null,null],[3,"ControlRegister8","tartan_arch::x86_64","`CR8`: System control register for controlling interrupts…",null,null],[3,"ExtendedFeatureEnableRegister","","`IA32_EFER`: Model-specific register that controls…",null,null],[0,"protection","","Support for protected mode operation.",null,null],[3,"TaskStateSegmentHeader","tartan_arch::x86_64::protection","Stack and I/O permission map pointers that make up the…",null,null],[12,"privileged_stack","","Stack pointers to use when switching to privilege levels…",4,null],[12,"interrupt_stack","","Stack pointers available for use when handling interrupts.…",4,null],[12,"io_permission_map_offset","","Offset from the start of this structure to start of the…",4,null],[11,"task_priority_level","tartan_arch::x86_64","`CR8.TPL`: Threshold for blocking low-priority interrupts.…",5,[[]]],[11,"set_task_priority_level","","`CR8.TPL`: Threshold for blocking low-priority interrupts.…",5,[[]]],[11,"get","","Retrieve the current value of this register",5,[[]]],[11,"set","","Update the register with the value in this struct.",5,[[]]],[11,"syscall","","`IA32_EFER.SCE`: Support `SYSCALL`/`SYSRET` in 64-bit mode.",6,[[]]],[11,"long_mode_enabled","","`IA32_EFER.LME`: Support 64-bit mode.",6,[[]]],[11,"long_mode_active","","`IA32_EFER.LMA`: Indicates 64-bit mode is active. Read-only.",6,[[]]],[11,"no_execute","","`IA32-EFER.NXE`: Support no-execute (NX) bit in page tables.",6,[[]]],[11,"set_syscall","","`IA32_EFER.SCE`: Support `SYSCALL`/`SYSRET` in 64-bit mode.",6,[[]]],[11,"set_long_mode_enabled","","`IA32_EFER.LME`: Support 64-bit mode.",6,[[]]],[11,"set_long_mode_active","","`IA32_EFER.LMA`: Indicates 64-bit mode is active. Read-only.",6,[[]]],[11,"set_no_execute","","`IA32-EFER.NXE`: Support no-execute (NX) bit in page tables.",6,[[]]],[11,"get","","Retrieve the current value of this register",6,[[]]],[11,"set","","Update the register with the value in this struct.",6,[[]]],[0,"x86_common","tartan_arch","Architecture-specific bindings common to 32-bit and 64-bit…",null,null],[3,"FlagRegister","tartan_arch::x86_common","`EFLAGS`/`RFLAGS`: General flags, including control,…",null,null],[3,"ControlRegister0","","`CR0`: System control register with flags affecting…",null,null],[3,"ControlRegister4","","`CR4`: Miscellaneous system control flags.",null,null],[3,"ExtendedControlRegister0","","`XCR0`: System control flags that indicate OS support for…",null,null],[0,"features","","Processor feature detection with CPUID.",null,null],[3,"BasicFeatures","tartan_arch::x86_common::features","Primary feature list returned in `CPUID.01H:ECX+EDX`.",null,null],[3,"ExtendedFeatures","","Features applicable to 64-bit processors, returned in…",null,null],[3,"AddressSpaceSizes","","Indicates the processor\'s maximum supported physical and…",null,null],[5,"cpuid","","Low-level CPUID call. Writes the leaf/subleaf index given…",null,[[]]],[5,"max_cpuid_index_basic","","Get the maximum primary index value (EAX) supported for…",null,[[]]],[5,"max_cpuid_index_extended","","Get the maximum primary index value (EAX) supported for…",null,[[]]],[11,"on_chip_fpu","","`FPU`: The processor has a built-in x87 floating-point unit",7,[[]]],[11,"virtual_8086_extensions","","`VME`: Supports virtual real-mode extensions (VME) and…",7,[[]]],[11,"debugging_extensions","","`DE`: Supports breaking on I/O and on accessing debug…",7,[[]]],[11,"page_size_extension","","`PSE`: Supports 4MB virtual memory pages and the dirty flag.",7,[[]]],[11,"time_stamp_counter","","`TSC`: Supports reading the processor\'s timestamp with…",7,[[]]],[11,"model_registers","","`MSR`: Has model-specific registers which can be accessed…",7,[[]]],[11,"physical_address_extension","","`PAE`: Supports mapping virtual memory to physical…",7,[[]]],[11,"machine_check_exception","","`MCE`: Defines an exception (18) for reporting internal…",7,[[]]],[11,"compare_exchange_64bit","","`CX8`: Supports the 64-byte `CMPXCHG8B` atomic instruction.",7,[[]]],[11,"on_chip_apic","","`APIC`: The processor has a built-in advanced programmable…",7,[[]]],[11,"sysenter","","`SEP`: Supports the `SYSENTER`/`SYSEXIT` instructions.",7,[[]]],[11,"memory_type_range_registers","","`MTRR`: Has memory type range registers.",7,[[]]],[11,"global_pages","","`PGE`: Supports global pages, which are available in all…",7,[[]]],[11,"machine_check_architecture","","`MCA`: Supports extended features for reporting internal…",7,[[]]],[11,"conditional_move","","`CMOV`: Supports the `CMOV` instruction and…",7,[[]]],[11,"page_attribute_table","","`PAT`: Supports page attribute tables.",7,[[]]],[11,"page_size_extension_36bit","","`PSE-36`: Supports 4MB virtual memory pages that can map…",7,[[]]],[11,"serial_number","","`PSN`: Supports retrieving a processor serial number with…",7,[[]]],[11,"cache_line_flush","","`CLFSH`: Supports flushing a cache line with the `CLFLUSH`…",7,[[]]],[11,"debug_store","","`DS`: Supports writing debug information to memory.",7,[[]]],[11,"thermal_power_management","","`ACPI`: Supports thermal monitoring and power management…",7,[[]]],[11,"mmx","","`MMX`: Supports MMX instructions.",7,[[]]],[11,"fpu_save","","`FXSAVE`: Supports managing FPU state with…",7,[[]]],[11,"sse","","`SSE`: Supports SSE instructions.",7,[[]]],[11,"sse_2","","`SSE2`: Supports SSE2 instructions.",7,[[]]],[11,"self_snoop","","The processor can snoop on its own cache line. This helps…",7,[[]]],[11,"max_apic_id_field","","`HTT`: Indicates that the number of reserved APIC IDs is…",7,[[]]],[11,"thermal_monitor","","`TM`: Has thermal monitor control circuitry (TCC).",7,[[]]],[11,"pending_break_enable","","`PBE`: Supports a pin notifying a stopped processor that…",7,[[]]],[11,"sse_3","","`SSE3`: Supports SSE3 instructions.",7,[[]]],[11,"carryless_multiply_64bit","","Supports carry-less multiplication of two 64-bit integers…",7,[[]]],[11,"debug_store_64bit","","`DTES64`: Supports 64-bit addresses for the debug store.",7,[[]]],[11,"monitor","","`MONITOR`: Supports the `MONITOR`/`MWAIT` instructions.",7,[[]]],[11,"permission_qualified_debug_store","","`DS-CPL`: Supports saving the permission level with data…",7,[[]]],[11,"virtual_machine_extensions","","`VMX`: Supports virtual machine extensions.",7,[[]]],[11,"safer_mode_extensions","","`SMX`: Supports safer-mode extensions",7,[[]]],[11,"enhanced_speedstep","","`EIST`: Supports enhanced SpeedStep throttling.",7,[[]]],[11,"thermal_monitor_2","","Supports the TM2 thermal monitor interface.",7,[[]]],[11,"supplemental_sse_3","","`SSSE3`: Supports Supplemental SSE3 (SSSE3) instructions.",7,[[]]],[11,"l1_context_id","","`CNXT-ID`: Supports setting the L1 cache to adaptive or…",7,[[]]],[11,"debug_interface_model_register","","`SDBG`: Supports an MSR for chip debugging.",7,[[]]],[11,"fused_multiply_add","","`FMA`: Supports fused multiply-add SSE instructions.",7,[[]]],[11,"compare_exchange_128bit","","`CMPXCHG16B`: Supports the 128-bit `CMPXCHG16B` atomic…",7,[[]]],[11,"chipset_task_priority_control","","Supports disabling xTPR task priority messages to the…",7,[[]]],[11,"monitor_debug_capabilities_register","","`PDCM`: Supports a model-specific register that lists…",7,[[]]],[11,"process_context_ids","","`PCID`: Supports process-context IDs.",7,[[]]],[11,"memory_mapped_prefetch","","`DCA`: Supports prefetching memory-mapped data from a…",7,[[]]],[11,"sse_4_1","","`SSE4_1`: Supports SSE4.1 instructions.",7,[[]]],[11,"sse_4_2","","`SSE4_2`: Supports SSE4.2 instructions.",7,[[]]],[11,"apic_x2","","`x2APIC`: Supports the enhanced \\\"x2\\\" interface for the APIC.",7,[[]]],[11,"byte_swap_move","","Supports byte swapping with the `MOVBE` instruction.",7,[[]]],[11,"count_bits","","Supports counting the set bits in a value with the…",7,[[]]],[11,"apic_timestamp_deadline","","`TSC-Deadline`: Supports one-shot interrupts with the APIC…",7,[[]]],[11,"aes","","`AESNI`: Supports AES acceleration instructions.",7,[[]]],[11,"extended_state_save","","`XSAVE`: Supports instructions for saving and restoring…",7,[[]]],[11,"extended_state_save_enabled","","`OSXSAVE`: Reflects the value of…",7,[[]]],[11,"avx","","`AVX`: Supports AVX instructions.",7,[[]]],[11,"float_16_conversion","","`F16C`: Supports conversion instructions for 16-bit floats.",7,[[]]],[11,"random","","Supports random number generation with the `RDRAND`…",7,[[]]],[11,"set_on_chip_fpu","","`FPU`: The processor has a built-in x87 floating-point unit",7,[[]]],[11,"set_virtual_8086_extensions","","`VME`: Supports virtual real-mode extensions (VME) and…",7,[[]]],[11,"set_debugging_extensions","","`DE`: Supports breaking on I/O and on accessing debug…",7,[[]]],[11,"set_page_size_extension","","`PSE`: Supports 4MB virtual memory pages and the dirty flag.",7,[[]]],[11,"set_time_stamp_counter","","`TSC`: Supports reading the processor\'s timestamp with…",7,[[]]],[11,"set_model_registers","","`MSR`: Has model-specific registers which can be accessed…",7,[[]]],[11,"set_physical_address_extension","","`PAE`: Supports mapping virtual memory to physical…",7,[[]]],[11,"set_machine_check_exception","","`MCE`: Defines an exception (18) for reporting internal…",7,[[]]],[11,"set_compare_exchange_64bit","","`CX8`: Supports the 64-byte `CMPXCHG8B` atomic instruction.",7,[[]]],[11,"set_on_chip_apic","","`APIC`: The processor has a built-in advanced programmable…",7,[[]]],[11,"set_sysenter","","`SEP`: Supports the `SYSENTER`/`SYSEXIT` instructions.",7,[[]]],[11,"set_memory_type_range_registers","","`MTRR`: Has memory type range registers.",7,[[]]],[11,"set_global_pages","","`PGE`: Supports global pages, which are available in all…",7,[[]]],[11,"set_machine_check_architecture","","`MCA`: Supports extended features for reporting internal…",7,[[]]],[11,"set_conditional_move","","`CMOV`: Supports the `CMOV` instruction and…",7,[[]]],[11,"set_page_attribute_table","","`PAT`: Supports page attribute tables.",7,[[]]],[11,"set_page_size_extension_36bit","","`PSE-36`: Supports 4MB virtual memory pages that can map…",7,[[]]],[11,"set_serial_number","","`PSN`: Supports retrieving a processor serial number with…",7,[[]]],[11,"set_cache_line_flush","","`CLFSH`: Supports flushing a cache line with the `CLFLUSH`…",7,[[]]],[11,"set_debug_store","","`DS`: Supports writing debug information to memory.",7,[[]]],[11,"set_thermal_power_management","","`ACPI`: Supports thermal monitoring and power management…",7,[[]]],[11,"set_mmx","","`MMX`: Supports MMX instructions.",7,[[]]],[11,"set_fpu_save","","`FXSAVE`: Supports managing FPU state with…",7,[[]]],[11,"set_sse","","`SSE`: Supports SSE instructions.",7,[[]]],[11,"set_sse_2","","`SSE2`: Supports SSE2 instructions.",7,[[]]],[11,"set_self_snoop","","The processor can snoop on its own cache line. This helps…",7,[[]]],[11,"set_max_apic_id_field","","`HTT`: Indicates that the number of reserved APIC IDs is…",7,[[]]],[11,"set_thermal_monitor","","`TM`: Has thermal monitor control circuitry (TCC).",7,[[]]],[11,"set_pending_break_enable","","`PBE`: Supports a pin notifying a stopped processor that…",7,[[]]],[11,"set_sse_3","","`SSE3`: Supports SSE3 instructions.",7,[[]]],[11,"set_carryless_multiply_64bit","","Supports carry-less multiplication of two 64-bit integers…",7,[[]]],[11,"set_debug_store_64bit","","`DTES64`: Supports 64-bit addresses for the debug store.",7,[[]]],[11,"set_monitor","","`MONITOR`: Supports the `MONITOR`/`MWAIT` instructions.",7,[[]]],[11,"set_permission_qualified_debug_store","","`DS-CPL`: Supports saving the permission level with data…",7,[[]]],[11,"set_virtual_machine_extensions","","`VMX`: Supports virtual machine extensions.",7,[[]]],[11,"set_safer_mode_extensions","","`SMX`: Supports safer-mode extensions",7,[[]]],[11,"set_enhanced_speedstep","","`EIST`: Supports enhanced SpeedStep throttling.",7,[[]]],[11,"set_thermal_monitor_2","","Supports the TM2 thermal monitor interface.",7,[[]]],[11,"set_supplemental_sse_3","","`SSSE3`: Supports Supplemental SSE3 (SSSE3) instructions.",7,[[]]],[11,"set_l1_context_id","","`CNXT-ID`: Supports setting the L1 cache to adaptive or…",7,[[]]],[11,"set_debug_interface_model_register","","`SDBG`: Supports an MSR for chip debugging.",7,[[]]],[11,"set_fused_multiply_add","","`FMA`: Supports fused multiply-add SSE instructions.",7,[[]]],[11,"set_compare_exchange_128bit","","`CMPXCHG16B`: Supports the 128-bit `CMPXCHG16B` atomic…",7,[[]]],[11,"set_chipset_task_priority_control","","Supports disabling xTPR task priority messages to the…",7,[[]]],[11,"set_monitor_debug_capabilities_register","","`PDCM`: Supports a model-specific register that lists…",7,[[]]],[11,"set_process_context_ids","","`PCID`: Supports process-context IDs.",7,[[]]],[11,"set_memory_mapped_prefetch","","`DCA`: Supports prefetching memory-mapped data from a…",7,[[]]],[11,"set_sse_4_1","","`SSE4_1`: Supports SSE4.1 instructions.",7,[[]]],[11,"set_sse_4_2","","`SSE4_2`: Supports SSE4.2 instructions.",7,[[]]],[11,"set_apic_x2","","`x2APIC`: Supports the enhanced \\\"x2\\\" interface for the APIC.",7,[[]]],[11,"set_byte_swap_move","","Supports byte swapping with the `MOVBE` instruction.",7,[[]]],[11,"set_count_bits","","Supports counting the set bits in a value with the…",7,[[]]],[11,"set_apic_timestamp_deadline","","`TSC-Deadline`: Supports one-shot interrupts with the APIC…",7,[[]]],[11,"set_aes","","`AESNI`: Supports AES acceleration instructions.",7,[[]]],[11,"set_extended_state_save","","`XSAVE`: Supports instructions for saving and restoring…",7,[[]]],[11,"set_extended_state_save_enabled","","`OSXSAVE`: Reflects the value of…",7,[[]]],[11,"set_avx","","`AVX`: Supports AVX instructions.",7,[[]]],[11,"set_float_16_conversion","","`F16C`: Supports conversion instructions for 16-bit floats.",7,[[]]],[11,"set_random","","Supports random number generation with the `RDRAND`…",7,[[]]],[11,"get","","Retrieve the feature list from the processor using the…",7,[[]]],[11,"get","","Retrieve the extended feature list from the processor…",8,[[]]],[11,"get","","Retrieve the supported address space sizes from the…",9,[[]]],[0,"interrupt","tartan_arch::x86_common","Support for managing interrupts.",null,null],[3,"InterruptVector","tartan_arch::x86_common::interrupt","An interrupt/exception number.",null,null],[3,"InterruptDescriptorTableRegister","","`IDTR`: Contains the memory range of the interrupt…",null,null],[12,"limit","","The inclusive maximum address offset (i.e., size - 1) of…",10,null],[12,"address","","Base address of the descriptor table.",10,null],[3,"APICBaseRegister","","`IA32_APIC_BASE`: A model-specific register that allows…",null,null],[18,"DivideError","","`#DE`: Division by zero or overflow in division.",11,null],[18,"DebugException","","`#DB`: Breakpoints or other debugging-related traps/faults.",11,null],[18,"NonMaskable","","`NMI`: Severe external interrupt that cannot be ignored.",11,null],[18,"Breakpoint","","`#BP`: Breakpoint via `INT3` instruction.",11,null],[18,"Overflow","","`#OF`: Overflow condition was detected with `INTO`…",11,null],[18,"Bound","","`#BR`: Out-of-bounds index detected with `BOUND`…",11,null],[18,"InvalidOpcode","","`#UD`: Unrecognized or reserved instruction opcode.",11,null],[18,"DeviceNotAvailable","","`#NM`: Tried to execute FPU instruction with no…",11,null],[18,"DoubleFault","","`#DF`: A fault was triggered while handling another…",11,null],[18,"InvalidTaskSegment","","`#TS`: An error was found in the TSS while task switching.",11,null],[18,"SegmentNotPresent","","`#NP`: Tried to use a segment without a descriptor…",11,null],[18,"StackFault","","`#SS`: The stack overflowed its segment or the segment was…",11,null],[18,"ProtectionFault","","`#GP`: Memory protection or other miscellaneous error.",11,null],[18,"PageFault","","`#PF`: Tried to load a page that was not present, or used…",11,null],[18,"FloatingPointError","","`#MF`: Unmasked floating-point error that was not part of…",11,null],[18,"AlignmentCheck","","`#AC`: Improperly aligned memory access in user mode while…",11,null],[18,"MachineCheck","","`#MC`: Internal processor/bus error.",11,null],[18,"SIMDFloatingPointError","","`#XM`: Unmasked floating-point error during SIMD operation.",11,null],[18,"VirtualizationException","","`#VE`:",11,null],[18,"ControlProtectionException","","`#CP`: Improper branching detected by control-flow guard.",11,null],[11,"name","","The name of the enum variant in code, if one is defined…",11,[[],["option",4]]],[11,"reserved","","Indicates that this is interrupt vector is reserved by the…",11,[[]]],[11,"get","","Retrieve the current value of this register",10,[[]]],[11,"set","","Update the register with the value in this struct.",10,[[]]],[11,"enabled","","Can be cleared to disable the APIC. However, it cannot be…",12,[[]]],[11,"x2_interface","","Enable the APIC\'s",12,[[]]],[11,"bootstrap_processor","","Indicates that this core was designated as the bootstrap…",12,[[]]],[11,"set_enabled","","Can be cleared to disable the APIC. However, it cannot be…",12,[[]]],[11,"set_x2_interface","","Enable the APIC\'s",12,[[]]],[11,"set_bootstrap_processor","","Indicates that this core was designated as the bootstrap…",12,[[]]],[18,"DEFAULT_ADDRESS","","The default APIC base address when the processor is reset.",12,null],[11,"address","","Base address of the APIC\'s registers.",12,[[]]],[11,"set_address","","Update the base address of the APIC\'s registers.",12,[[]]],[11,"get","","Retrieve the current value of this register",12,[[]]],[11,"set","","Update the register with the value in this struct.",12,[[]]],[0,"io","tartan_arch::x86_common","Access to I/O space",null,null],[5,"in_u8","tartan_arch::x86_common::io","Read an 8-bit value from the port at the given address in…",null,[[]]],[5,"in_u16","","Read a 16-bit value from the port at the given address in…",null,[[]]],[5,"in_u32","","Read a 32-bit value from the port at the given address in…",null,[[]]],[5,"out_u8","","Write an 8-bit value to the port at the given address in…",null,[[]]],[5,"out_u16","","Write a 16-bit value to the port at the given address in…",null,[[]]],[5,"out_u32","","Write a 16-bit value to the port at the given address in…",null,[[]]],[0,"paging","tartan_arch::x86_common","Support for virtual memory paging.",null,null],[3,"ControlRegister2","tartan_arch::x86_common::paging","`CR2`: Contains the address that triggered a page fault.",null,null],[3,"ControlRegister3","","`CR3`: System control register that contains the top-level…",null,null],[3,"Level2PageTableEntry","","Second-level page table (page directory) entry that either…",null,null],[3,"Level1PageTableEntry","","Bottom-level page table entry that maps a single 4KB page.",null,null],[8,"GenericPageTableEntry","","An entry in a page table at any level.",null,null],[11,"present","","`P`: Indicates that this entry is mapped. Otherwise the…",13,[[]]],[11,"writable","","`R/W`: Allows writes to this memory region.",13,[[]]],[11,"user","","`U/S`: Allows access to this memory region from permission…",13,[[]]],[11,"write_through","","`PWT`: Enables write-through caching for this memory region.",13,[[]]],[11,"cache_disabled","","`PCD`: Disables caching for this memory region.",13,[[]]],[11,"accessed","","`A`: Set by the processor when an instruction accesses the…",13,[[]]],[11,"no_execute","","`XD`/`NX`: Prevent the processor from executing any…",13,[[]]],[11,"set_present","","`P`: Indicates that this entry is mapped. Otherwise the…",13,[[]]],[11,"set_writable","","`R/W`: Allows writes to this memory region.",13,[[]]],[11,"set_user","","`U/S`: Allows access to this memory region from permission…",13,[[]]],[11,"set_write_through","","`PWT`: Enables write-through caching for this memory region.",13,[[]]],[11,"set_cache_disabled","","`PCD`: Disables caching for this memory region.",13,[[]]],[11,"set_accessed","","`A`: Set by the processor when an instruction accesses the…",13,[[]]],[11,"set_no_execute","","`XD`/`NX`: Prevent the processor from executing any…",13,[[]]],[11,"fmt_fields","","Print this object\'s bitfield values. Helper method for…",13,[[["debugstruct",3]]]],[8,"DirectPageTableEntry","","An page table entry (any level) that directly maps a page.",null,null],[11,"dirty","","`D`: Set by the processor when an instruction modifies the…",14,[[]]],[11,"attribute_table","","`PAT`: Used to associate this page with a page attribute…",14,[[]]],[11,"global","","`G`: Indicates that this is a global page shared by all…",14,[[]]],[11,"protection_key","","The protection key that applies to this memory region.",14,[[]]],[11,"set_dirty","","`D`: Set by the processor when an instruction modifies the…",14,[[]]],[11,"set_attribute_table","","`PAT`: Used to associate this page with a page attribute…",14,[[]]],[11,"set_global","","`G`: Indicates that this is a global page shared by all…",14,[[]]],[11,"set_protection_key","","The protection key that applies to this memory region.",14,[[]]],[11,"fmt_fields","","Print this object\'s bitfield values. Helper method for…",14,[[["debugstruct",3]]]],[8,"HybridPageTableEntry","","A page table entry (any level) that either directly maps a…",null,null],[11,"is_page","","`PS`: Indicates that this entry directly maps a page.…",15,[[]]],[11,"set_is_page","","`PS`: Indicates that this entry directly maps a page.…",15,[[]]],[11,"fmt_fields","","Print this object\'s bitfield values. Helper method for…",15,[[["debugstruct",3]]]],[11,"get","","Retrieve the current value of this register",16,[[]]],[11,"set","","Update the register with the value in this struct.",16,[[]]],[11,"write_through","","`CR3.PWT`: Enables write-through caching for the top-level…",17,[[]]],[11,"cache_disabled","","`CR3.PCD`: Disables caching for the top-level page table.",17,[[]]],[11,"process_context_id","","`CR4.PCIDE`: The process-context identifier (PCID)…",17,[[]]],[11,"set_write_through","","`CR3.PWT`: Enables write-through caching for the top-level…",17,[[]]],[11,"set_cache_disabled","","`CR3.PCD`: Disables caching for the top-level page table.",17,[[]]],[11,"set_process_context_id","","`CR4.PCIDE`: The process-context identifier (PCID)…",17,[[]]],[11,"get","","Retrieve the current value of this register",17,[[]]],[11,"set","","Update the register with the value in this struct.",17,[[]]],[11,"address","","Get the address of the top-level page table.",17,[[]]],[11,"set_address","","Set the address of the top-level page table.",17,[[]]],[0,"protection","tartan_arch::x86_common","Support for protected mode operation.",null,null],[3,"GlobalDescriptorTableRegister","tartan_arch::x86_common::protection","`GDTR`: Points to the memory range of the global…",null,null],[12,"limit","","The inclusive maximum address offset (i.e., size - 1) of…",18,null],[12,"address","","Base address of the descriptor table",18,null],[3,"Selector","","A reference to an entry in a segment descriptor table.",null,null],[3,"ApplicationDescriptorFlags","","Flags for code and data segment descriptors.",null,null],[3,"SystemDescriptorType","","Discriminate types of segment descriptors that are not…",null,null],[3,"GenericDescriptor","","Generic entry in a global/local/interrupt descriptor…",null,null],[12,"flags","","Common descriptor settings.",19,null],[3,"GenericDescriptorFlags","","Settings for [`GenericDescriptor`]s.",null,null],[3,"SegmentDescriptor","","An entry in a segment descriptor table that defines a new…",null,null],[12,"flags","","Common segment descriptor settings.",20,null],[3,"SegmentDescriptorFlags","","Settings for [`SegmentDescriptor`]s.",null,null],[3,"GateDescriptor","","An entry in a segment descriptor table that points to an…",null,null],[12,"flags","","Common gate descriptor settings.",21,null],[3,"GateDescriptorFlags","","Settings for [`GateDescriptor`]s.",null,null],[3,"IOPermissionBitmap","","Bitmap that controls which I/O port addresses are covered…",null,null],[4,"LocalDescriptorTableRegister","","`LDTR`: Contains a [`Selector`] referencing a…",null,null],[4,"TaskRegister","","`TR`: Contains a [`Selector`] referencing a…",null,null],[4,"SegmentRegister","","Standard segment registers (`CS`, `DS`, `SS`, etc.), which…",null,null],[13,"Code","","`CS` register, which controls instruction loading",22,null],[13,"Data","","`DS` register, which controls the default segment for…",22,null],[13,"Stack","","`SS` segment register, which controls the location of the…",22,null],[13,"Extra","","`ES` segment register, which can be used as an additional…",22,null],[13,"ExtraF","","`FS` segment register, which can be used as an additional…",22,null],[13,"ExtraG","","`GS` segment register, which can be used as an additional…",22,null],[8,"DescriptorFlags","","Settings common to [`SegmentDescriptor`]s and…",null,null],[11,"system_type","","If this is a system descriptor, indicates which type.",23,[[],["systemdescriptortype",3]]],[11,"application_flags","","If this is a code or data descriptor, indicates which type.",23,[[],["applicationdescriptorflags",3]]],[11,"is_application","","`S`: Indicates that this is an application section…",23,[[]]],[11,"privilege_level","","`DPL`: The privilege level associated with the segment.",23,[[]]],[11,"present","","`P`: Indicates that the segment is defined.",23,[[]]],[11,"set_system_type","","If this is a system descriptor, indicates which type.",23,[[["systemdescriptortype",3]]]],[11,"set_application_flags","","If this is a code or data descriptor, indicates which type.",23,[[["applicationdescriptorflags",3]]]],[11,"set_is_application","","`S`: Indicates that this is an application section…",23,[[]]],[11,"set_privilege_level","","`DPL`: The privilege level associated with the segment.",23,[[]]],[11,"set_present","","`P`: Indicates that the segment is defined.",23,[[]]],[11,"fmt_fields","","Print this object\'s bitfield values. Helper method for…",23,[[["debugstruct",3]]]],[11,"is_gate","","Indicates that this is a [`GateDescriptor`].",23,[[]]],[11,"get","","Retrieve the current value of this register",18,[[]]],[11,"set","","Update the register with the value in this struct.",18,[[]]],[11,"get","","Retrieve the current value of this register",24,[[],["selector",3]]],[11,"set","","Update the register with the value in this struct.",24,[[["selector",3]]]],[11,"current_descriptor","","Get a pointer to the [`SegmentDescriptor`] for the…",24,[[]]],[11,"get","","Retrieve the current value of this register",25,[[],["selector",3]]],[11,"set","","Update the register with the provided selector value.",25,[[["selector",3]]]],[11,"get","","Retrieve the current value of this register",22,[[],["selector",3]]],[11,"set","","Update the register with the provided selector value.",22,[[["selector",3]]]],[11,"privilege_level","","`RPL`: The privilege level \\\"requested\\\" when accessing the…",26,[[]]],[11,"local","","Indicates that this selector references a descriptor in…",26,[[]]],[11,"set_privilege_level","","`RPL`: The privilege level \\\"requested\\\" when accessing the…",26,[[]]],[11,"set_local","","Indicates that this selector references a descriptor in…",26,[[]]],[11,"offset","","The offset of the referenced segment entry in the…",26,[[]]],[11,"set_offset","","Update the offset of the referenced entry in the…",26,[[]]],[11,"descriptor_address","","Calculate the address of the descriptor referenced by this…",26,[[]]],[11,"accessed","","The processor sets this bit whenever a segment register…",27,[[]]],[11,"code_readable","","If this is a code descriptor, indicates that the segment…",27,[[]]],[11,"data_writable","","If this is a data descriptor, indicates that this segment…",27,[[]]],[11,"code_conforming","","If this is a code descriptor, indicates that this segment…",27,[[]]],[11,"data_expand_down","","If this is a data descriptor, indicates that the segment…",27,[[]]],[11,"code_descriptor","","Indicates whether this is a code (true) or data (false)…",27,[[]]],[11,"code_mode_64","","`L`: If this is a code segment, indicates that it should…",27,[[]]],[11,"mode_32","","`D`/`B`: Indicates that the segment uses 32-bit mode.…",27,[[]]],[11,"set_accessed","","The processor sets this bit whenever a segment register…",27,[[]]],[11,"set_code_readable","","If this is a code descriptor, indicates that the segment…",27,[[]]],[11,"set_data_writable","","If this is a data descriptor, indicates that this segment…",27,[[]]],[11,"set_code_conforming","","If this is a code descriptor, indicates that this segment…",27,[[]]],[11,"set_data_expand_down","","If this is a data descriptor, indicates that the segment…",27,[[]]],[11,"set_code_descriptor","","Indicates whether this is a code (true) or data (false)…",27,[[]]],[11,"set_code_mode_64","","`L`: If this is a code segment, indicates that it should…",27,[[]]],[11,"set_mode_32","","`D`/`B`: Indicates that the segment uses 32-bit mode.…",27,[[]]],[18,"TaskStateAvailable16Bit","","A [`SegmentDescriptor`] for a 16-bit task state segment…",28,null],[18,"LocalDescriptorTable","","A [`SegmentDescriptor`] for a segment that contains a…",28,null],[18,"TaskStateBusy16Bit","","A [`SegmentDescriptor`] for a 16-bit task state segment…",28,null],[18,"CallGate16Bit","","A [`GateDescriptor`] for a call to 16-bit code.",28,null],[18,"TaskGate","","A [`GateDescriptor`] for task switching.",28,null],[18,"InterruptGate16Bit","","A [`GateDescriptor`] for a 16-bit interrupt handler.",28,null],[18,"TrapGate16Bit","","A [`GateDescriptor`] for a 16-bit trap handler.",28,null],[18,"TaskStateAvailable","","A [`SegmentDescriptor`] for a 32/64-bit task state segment…",28,null],[18,"TaskStateBusy","","A [`SegmentDescriptor`] for a 32/64-bit task state segment…",28,null],[18,"CallGate","","A [`GateDescriptor`] for a call to 32/64-bit code.",28,null],[18,"InterruptGate","","A [`GateDescriptor`] for a 32/64-bit interrupt handler.",28,null],[18,"TrapGate","","A [`GateDescriptor`] for a 32/64-bit interrupt handler.",28,null],[11,"name","","The name of the enum variant in code, if one is defined…",28,[[],["option",4]]],[11,"is_gate","","Indicates that this is a [`GateDescriptor`].",28,[[]]],[18,"LIMIT_MAX","","The maximum supported value of the `limit` field (20 bits).",20,null],[11,"address","","Base virtual address of the segment, to which offsets are…",20,[[]]],[11,"set_address","","Update the base address.",20,[[]]],[11,"limit","","The \\\"limit\\\" of the segment, which is a maximum or minimum…",20,[[]]],[11,"set_limit","","Update the segment limit.",20,[[]]],[11,"os_defined","","`AVL`: Ignored bit that can be used by the operating system.",29,[[]]],[11,"granularity","","`G`: Indicates that the segment limit is in units of 4KB.…",29,[[]]],[11,"set_os_defined","","`AVL`: Ignored bit that can be used by the operating system.",29,[[]]],[11,"set_granularity","","`G`: Indicates that the segment limit is in units of 4KB.…",29,[[]]],[11,"selector","","Selector that points to the code or task state segment to…",21,[[],["selector",3]]],[11,"set_selector","","Update the selector pointing to the segment to be accessed…",21,[[["selector",3]]]],[11,"entry_point_offset","","Offset of the entry point in code segment referenced by…",21,[[]]],[11,"set_entry_point_offset","","Update the offset of the entry point within the referenced…",21,[[]]],[11,"call_param_count","","Number of stack parameters to copy if the code segment…",30,[[]]],[11,"interrupt_stack_index","","One-based index of the `interrupt_stack` pointer to use…",30,[[]]],[11,"set_call_param_count","","Number of stack parameters to copy if the code segment…",30,[[]]],[11,"set_interrupt_stack_index","","One-based index of the `interrupt_stack` pointer to use…",30,[[]]],[18,"MAX_SIZE","","Size in bytes required to map all I/O ports",31,null],[11,"required_size","","Calculate the size in bytes of a map that has bits for…",31,[[]]],[11,"max_port_for_size","","Calculate the last I/O port that is covered by a map of…",31,[[],[["nonzerou16",3],["option",4]]]],[11,"size","","The number of bytes in this structure.",31,[[]]],[11,"max_port","","The last I/O port that is covered by this map. The bits…",31,[[],[["nonzerou16",3],["option",4]]]],[11,"is_port_checked","","Get the value in this bitmap that indicates whether the…",31,[[]]],[11,"set_port_checked","","Set the value in this bitmap that indicates whether the…",31,[[]]],[11,"carry","tartan_arch::x86_common","`CF`: Indicates an arithmetic instruction generated a…",32,[[]]],[11,"parity","","`PF`: Indicates that the least-significant byte of the…",32,[[]]],[11,"aux_carry","","`AF`: Indicates a carry/borrow/overflow out of bit 3 in…",32,[[]]],[11,"zero","","`ZF`: Indicates that the result of an instruction is zero.",32,[[]]],[11,"sign","","`SF`: Indicates that the most-significant bit of a result…",32,[[]]],[11,"trap","","`TF`: Enable single-step debugging.",32,[[]]],[11,"interrupt_enabled","","`IF`: Enable non-maskable interrupts. Non-maskable…",32,[[]]],[11,"direction","","`DF`: String instructions work on addresses high-to-low…",32,[[]]],[11,"signed_overflow","","`OF`: Indicates that the result overflowed for signed…",32,[[]]],[11,"io_privilege_level","","`IOPL`: Sets the privilege threshold for a task to access…",32,[[]]],[11,"nested_task","","`NT`: Indicates that the processor should switch back to a…",32,[[]]],[11,"resume","","`RF`: Disable instruction breakpoints.",32,[[]]],[11,"virtual_8086_mode","","`VM`: Enable virtual real mode.",32,[[]]],[11,"alignment_check_or_access_control","","`AC`: Enable strict alignment checks for memory accesses…",32,[[]]],[11,"virtual_interrupt_enabled","","`VIF`: Virtual counterpart to the `interrupt_enabled`…",32,[[]]],[11,"virtual_interrupt_pending","","`VIP`: Indicates an interrupt is pending for VME or PVI.",32,[[]]],[11,"identification","","`ID`: Indicates `CPUID` support when the flag is modifiable.",32,[[]]],[11,"set_carry","","`CF`: Indicates an arithmetic instruction generated a…",32,[[]]],[11,"set_parity","","`PF`: Indicates that the least-significant byte of the…",32,[[]]],[11,"set_aux_carry","","`AF`: Indicates a carry/borrow/overflow out of bit 3 in…",32,[[]]],[11,"set_zero","","`ZF`: Indicates that the result of an instruction is zero.",32,[[]]],[11,"set_sign","","`SF`: Indicates that the most-significant bit of a result…",32,[[]]],[11,"set_trap","","`TF`: Enable single-step debugging.",32,[[]]],[11,"set_interrupt_enabled","","`IF`: Enable non-maskable interrupts. Non-maskable…",32,[[]]],[11,"set_direction","","`DF`: String instructions work on addresses high-to-low…",32,[[]]],[11,"set_signed_overflow","","`OF`: Indicates that the result overflowed for signed…",32,[[]]],[11,"set_io_privilege_level","","`IOPL`: Sets the privilege threshold for a task to access…",32,[[]]],[11,"set_nested_task","","`NT`: Indicates that the processor should switch back to a…",32,[[]]],[11,"set_resume","","`RF`: Disable instruction breakpoints.",32,[[]]],[11,"set_virtual_8086_mode","","`VM`: Enable virtual real mode.",32,[[]]],[11,"set_alignment_check_or_access_control","","`AC`: Enable strict alignment checks for memory accesses…",32,[[]]],[11,"set_virtual_interrupt_enabled","","`VIF`: Virtual counterpart to the `interrupt_enabled`…",32,[[]]],[11,"set_virtual_interrupt_pending","","`VIP`: Indicates an interrupt is pending for VME or PVI.",32,[[]]],[11,"set_identification","","`ID`: Indicates `CPUID` support when the flag is modifiable.",32,[[]]],[11,"get","","Retrieve the current value of the `EFLAGS` register.",32,[[]]],[11,"set","","Update the `EFLAGS` register with the values in this…",32,[[]]],[11,"paging","","`CR0.PG`: Enable paging. Requires `protected_mode`.",33,[[]]],[11,"cache_disabled","","`CR0.CD`: Disable all memory caching.",33,[[]]],[11,"cache_not_write_through","","`CR0.NW`: Disable write-back/write-through caching.",33,[[]]],[11,"alignment_check_mask","","`CR0.AM`: Enables strict alignment checks for memory…",33,[[]]],[11,"write_protect","","`CR0.WP`: Enforce read-only pages even in privilege levels…",33,[[]]],[11,"native_fpu_error","","`CR0.NE`: Use internal error mechanism for FPU errors,…",33,[[]]],[11,"fpu_extension_type","","`CR0.ET`: On 386/486, 387 FPU instructions are supported…",33,[[]]],[11,"task_switched_without_fpu_state","","`CR0.TS`: Set by processor when task was switched but FPU…",33,[[]]],[11,"fpu_emulation","","`CR0.EM`: Trigger an exception on all FPU instructions.…",33,[[]]],[11,"monitor_fpu","","`CR0.MP`: Enable exception behavior described for the…",33,[[]]],[11,"protected_mode","","Enable protected mode. Does not enable paging on its own.…",33,[[]]],[11,"set_paging","","`CR0.PG`: Enable paging. Requires `protected_mode`.",33,[[]]],[11,"set_cache_disabled","","`CR0.CD`: Disable all memory caching.",33,[[]]],[11,"set_cache_not_write_through","","`CR0.NW`: Disable write-back/write-through caching.",33,[[]]],[11,"set_alignment_check_mask","","`CR0.AM`: Enables strict alignment checks for memory…",33,[[]]],[11,"set_write_protect","","`CR0.WP`: Enforce read-only pages even in privilege levels…",33,[[]]],[11,"set_native_fpu_error","","`CR0.NE`: Use internal error mechanism for FPU errors,…",33,[[]]],[11,"set_fpu_extension_type","","`CR0.ET`: On 386/486, 387 FPU instructions are supported…",33,[[]]],[11,"set_task_switched_without_fpu_state","","`CR0.TS`: Set by processor when task was switched but FPU…",33,[[]]],[11,"set_fpu_emulation","","`CR0.EM`: Trigger an exception on all FPU instructions.…",33,[[]]],[11,"set_monitor_fpu","","`CR0.MP`: Enable exception behavior described for the…",33,[[]]],[11,"set_protected_mode","","Enable protected mode. Does not enable paging on its own.…",33,[[]]],[11,"get","","Retrieve the current value of this register",33,[[]]],[11,"set","","Update the register with the value in this struct.",33,[[]]],[11,"clear_task_switched_without_fpu_state","","Directly clear the `task_switched_without_fpu_state` flag…",33,[[]]],[11,"virtual_8086_extensions","","`CR4.VME`: Enable interrupts and exception handling in…",34,[[]]],[11,"protected_virtual_interrupts","","`CR4.PVI`: Enable virtual interrupts in protected mode.",34,[[]]],[11,"timestamp_disabled","","`CR4.TSD`: Disable access to processor timestamp counter…",34,[[]]],[11,"debugging_extensions","","`CR4.DE`: Enable newer debug register scheme where `DR4`…",34,[[]]],[11,"page_size_extensions","","`CR4.PSE`: Support large pages (4MB). Applies to 32-bit…",34,[[]]],[11,"physical_address_extension","","`CR4.PAE`: Enable pages to map to physical addresses…",34,[[]]],[11,"machine_check_exception","","`CR4.MCE`: Enable machine-check exception.",34,[[]]],[11,"global_pages","","`CR4.PGE`: Enable global pages, which are shared across…",34,[[]]],[11,"performance_counter","","`CR4.PCE`: Allow access to performance monitoring counter…",34,[[]]],[11,"sse_and_fpu_save","","`CR4.OSFXSR`: Enable the `FXSAVE`/`FXRSTOR` and SSE…",34,[[]]],[11,"simd_exceptions","","`CR4.OSXMMEXCPT`: Enable unmasked SIMD floating-point…",34,[[]]],[11,"restrict_user_mode_instructions","","`CR4.UMIP`: Prevent access to instructions that allow…",34,[[]]],[11,"five_level_paging","","`CR4.LA57`: Support 57-bit addresses using 5-level paging…",34,[[]]],[11,"virtual_machine_extensions","","`CR4.VMX` (Intel-only): Enable virtual machine extensions.",34,[[]]],[11,"safer_mode_extensions","","`CR4.SME` (Intel-only): Enable safer-mode extensions.",34,[[]]],[11,"extended_base_registers","","`CR4.FSGSBASE`: Enable instructions to load/store the `FS`…",34,[[]]],[11,"process_context_ids","","`CR4.PCIDE`: Enable process-context identifiers (PCID) in…",34,[[]]],[11,"extended_state_save","","`CR4.OSXSAVE`: Enable instructions for saving and…",34,[[]]],[11,"supervisor_execution_prevention","","`CR4.SMEP`: Enable execution prevention in privilege…",34,[[]]],[11,"supervisor_access_prevention","","`CR4.SMAP`: Enable access prevention in privilege levels…",34,[[]]],[11,"user_protection_keys","","`CR4.PKE`: Use page protection keys in 64-bit mode to…",34,[[]]],[11,"control_flow_enforcement","","`CR4.CET` (Intel-only): Enable control-flow enforcement…",34,[[]]],[11,"supervisor_protection_keys","","`CR4.PKS` (Intel-only): Use page protection keys in 64-bit…",34,[[]]],[11,"set_virtual_8086_extensions","","`CR4.VME`: Enable interrupts and exception handling in…",34,[[]]],[11,"set_protected_virtual_interrupts","","`CR4.PVI`: Enable virtual interrupts in protected mode.",34,[[]]],[11,"set_timestamp_disabled","","`CR4.TSD`: Disable access to processor timestamp counter…",34,[[]]],[11,"set_debugging_extensions","","`CR4.DE`: Enable newer debug register scheme where `DR4`…",34,[[]]],[11,"set_page_size_extensions","","`CR4.PSE`: Support large pages (4MB). Applies to 32-bit…",34,[[]]],[11,"set_physical_address_extension","","`CR4.PAE`: Enable pages to map to physical addresses…",34,[[]]],[11,"set_machine_check_exception","","`CR4.MCE`: Enable machine-check exception.",34,[[]]],[11,"set_global_pages","","`CR4.PGE`: Enable global pages, which are shared across…",34,[[]]],[11,"set_performance_counter","","`CR4.PCE`: Allow access to performance monitoring counter…",34,[[]]],[11,"set_sse_and_fpu_save","","`CR4.OSFXSR`: Enable the `FXSAVE`/`FXRSTOR` and SSE…",34,[[]]],[11,"set_simd_exceptions","","`CR4.OSXMMEXCPT`: Enable unmasked SIMD floating-point…",34,[[]]],[11,"set_restrict_user_mode_instructions","","`CR4.UMIP`: Prevent access to instructions that allow…",34,[[]]],[11,"set_five_level_paging","","`CR4.LA57`: Support 57-bit addresses using 5-level paging…",34,[[]]],[11,"set_virtual_machine_extensions","","`CR4.VMX` (Intel-only): Enable virtual machine extensions.",34,[[]]],[11,"set_safer_mode_extensions","","`CR4.SME` (Intel-only): Enable safer-mode extensions.",34,[[]]],[11,"set_extended_base_registers","","`CR4.FSGSBASE`: Enable instructions to load/store the `FS`…",34,[[]]],[11,"set_process_context_ids","","`CR4.PCIDE`: Enable process-context identifiers (PCID) in…",34,[[]]],[11,"set_extended_state_save","","`CR4.OSXSAVE`: Enable instructions for saving and…",34,[[]]],[11,"set_supervisor_execution_prevention","","`CR4.SMEP`: Enable execution prevention in privilege…",34,[[]]],[11,"set_supervisor_access_prevention","","`CR4.SMAP`: Enable access prevention in privilege levels…",34,[[]]],[11,"set_user_protection_keys","","`CR4.PKE`: Use page protection keys in 64-bit mode to…",34,[[]]],[11,"set_control_flow_enforcement","","`CR4.CET` (Intel-only): Enable control-flow enforcement…",34,[[]]],[11,"set_supervisor_protection_keys","","`CR4.PKS` (Intel-only): Use page protection keys in 64-bit…",34,[[]]],[11,"get","","Retrieve the current value of this register",34,[[]]],[11,"set","","Update the register with the value in this struct.",34,[[]]],[11,"fpu","","`XCR0.X87`: Hardcoded to 1.",35,[[]]],[11,"sse","","`XCR0.SSE`: Manage SSE state with `XSAVE`, including the…",35,[[]]],[11,"avx_256","","`XCR0.AVX`: Manage 256-bit AVX state in upper halves of…",35,[[]]],[11,"mpx_bounds","","`XCR0.BNDREG`: Manage MPX bounds registers with `XSAVE`.",35,[[]]],[11,"mpx_bound_config_status","","`XCR0.BNDCSR`: Manage MPX config and status registers with…",35,[[]]],[11,"avx_512_opmask","","`XCR0.OPMASK`: Manage AVX-512 opmask registers with `XSAVE`.",35,[[]]],[11,"avx_512","","`XCR0.ZMM_Hi256`: Manage 512-bit AVX state in the upper…",35,[[]]],[11,"avx_512_extended","","`XCR0.Hi16_ZMM`: Manage AVX-512 state in `ZMM16`–`ZMM31`…",35,[[]]],[11,"protection_key_rights","","`XCR0.PKRU`: Manage protection key rights registers with…",35,[[]]],[11,"set_fpu","","`XCR0.X87`: Hardcoded to 1.",35,[[]]],[11,"set_sse","","`XCR0.SSE`: Manage SSE state with `XSAVE`, including the…",35,[[]]],[11,"set_avx_256","","`XCR0.AVX`: Manage 256-bit AVX state in upper halves of…",35,[[]]],[11,"set_mpx_bounds","","`XCR0.BNDREG`: Manage MPX bounds registers with `XSAVE`.",35,[[]]],[11,"set_mpx_bound_config_status","","`XCR0.BNDCSR`: Manage MPX config and status registers with…",35,[[]]],[11,"set_avx_512_opmask","","`XCR0.OPMASK`: Manage AVX-512 opmask registers with `XSAVE`.",35,[[]]],[11,"set_avx_512","","`XCR0.ZMM_Hi256`: Manage 512-bit AVX state in the upper…",35,[[]]],[11,"set_avx_512_extended","","`XCR0.Hi16_ZMM`: Manage AVX-512 state in `ZMM16`–`ZMM31`…",35,[[]]],[11,"set_protection_key_rights","","`XCR0.PKRU`: Manage protection key rights registers with…",35,[[]]],[11,"get","","Retrieve the current value of this register",35,[[]]],[11,"set","","Update the register with the value in this struct.",35,[[]]],[11,"from","tartan_arch::x86::protection","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","tartan_arch::x86_64","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","tartan_arch::x86_64::protection","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","tartan_arch::x86_common","",32,[[]]],[11,"borrow","","",32,[[]]],[11,"borrow_mut","","",32,[[]]],[11,"try_from","","",32,[[],["result",4]]],[11,"into","","",32,[[]]],[11,"try_into","","",32,[[],["result",4]]],[11,"type_id","","",32,[[],["typeid",3]]],[11,"from","","",33,[[]]],[11,"borrow","","",33,[[]]],[11,"borrow_mut","","",33,[[]]],[11,"try_from","","",33,[[],["result",4]]],[11,"into","","",33,[[]]],[11,"try_into","","",33,[[],["result",4]]],[11,"type_id","","",33,[[],["typeid",3]]],[11,"from","","",34,[[]]],[11,"borrow","","",34,[[]]],[11,"borrow_mut","","",34,[[]]],[11,"try_from","","",34,[[],["result",4]]],[11,"into","","",34,[[]]],[11,"try_into","","",34,[[],["result",4]]],[11,"type_id","","",34,[[],["typeid",3]]],[11,"from","","",35,[[]]],[11,"borrow","","",35,[[]]],[11,"borrow_mut","","",35,[[]]],[11,"try_from","","",35,[[],["result",4]]],[11,"into","","",35,[[]]],[11,"try_into","","",35,[[],["result",4]]],[11,"type_id","","",35,[[],["typeid",3]]],[11,"from","tartan_arch::x86_common::features","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","tartan_arch::x86_common::interrupt","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","tartan_arch::x86_common::paging","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"attribute_table","","",36,[[]]],[11,"set_attribute_table","","",36,[[]]],[11,"fmt_fields","","Print this object\'s bitfield values. Helper method for…",36,[[["debugstruct",3]]]],[11,"from","","",36,[[]]],[11,"borrow","","",36,[[]]],[11,"borrow_mut","","",36,[[]]],[11,"try_from","","",36,[[],["result",4]]],[11,"into","","",36,[[]]],[11,"try_into","","",36,[[],["result",4]]],[11,"type_id","","",36,[[],["typeid",3]]],[11,"attribute_table","","",37,[[]]],[11,"set_attribute_table","","",37,[[]]],[11,"fmt_fields","","Print this object\'s bitfield values. Helper method for…",37,[[["debugstruct",3]]]],[11,"from","","",37,[[]]],[11,"borrow","","",37,[[]]],[11,"borrow_mut","","",37,[[]]],[11,"try_from","","",37,[[],["result",4]]],[11,"into","","",37,[[]]],[11,"try_into","","",37,[[],["result",4]]],[11,"type_id","","",37,[[],["typeid",3]]],[11,"from","tartan_arch::x86_common::protection","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"from","","",28,[[]]],[11,"borrow","","",28,[[]]],[11,"borrow_mut","","",28,[[]]],[11,"try_from","","",28,[[],["result",4]]],[11,"into","","",28,[[]]],[11,"try_into","","",28,[[],["result",4]]],[11,"type_id","","",28,[[],["typeid",3]]],[11,"from","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","","",38,[[]]],[11,"borrow","","",38,[[]]],[11,"borrow_mut","","",38,[[]]],[11,"try_from","","",38,[[],["result",4]]],[11,"into","","",38,[[]]],[11,"try_into","","",38,[[],["result",4]]],[11,"type_id","","",38,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"from","","",29,[[]]],[11,"borrow","","",29,[[]]],[11,"borrow_mut","","",29,[[]]],[11,"try_from","","",29,[[],["result",4]]],[11,"into","","",29,[[]]],[11,"try_into","","",29,[[],["result",4]]],[11,"type_id","","",29,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"from","","",30,[[]]],[11,"borrow","","",30,[[]]],[11,"borrow_mut","","",30,[[]]],[11,"try_from","","",30,[[],["result",4]]],[11,"into","","",30,[[]]],[11,"try_into","","",30,[[],["result",4]]],[11,"type_id","","",30,[[],["typeid",3]]],[11,"from","","",31,[[]]],[11,"borrow","","",31,[[]]],[11,"borrow_mut","","",31,[[]]],[11,"try_from","","",31,[[],["result",4]]],[11,"into","","",31,[[]]],[11,"try_into","","",31,[[],["result",4]]],[11,"type_id","","",31,[[],["typeid",3]]],[11,"from","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"from","","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"from","tartan_arch::x86_64","",5,[[]]],[11,"from","","",6,[[]]],[11,"from","tartan_arch::x86_common::features","",7,[[]]],[11,"from","","",8,[[]]],[11,"from","","",9,[[]]],[11,"from","tartan_arch::x86_common::interrupt","",11,[[]]],[11,"from","","",12,[[]]],[11,"from","tartan_arch::x86_common::paging","",16,[[]]],[11,"from","","",17,[[]]],[11,"from","","",36,[[]]],[11,"from","","",37,[[]]],[11,"from","tartan_arch::x86_common::protection","",26,[[]]],[11,"from","","",27,[[]]],[11,"from","","",28,[[]]],[11,"from","","",38,[[]]],[11,"from","","",29,[[]]],[11,"from","","",30,[[]]],[11,"from","tartan_arch::x86_common","",32,[[]]],[11,"from","","",33,[[]]],[11,"from","","",34,[[]]],[11,"from","","",35,[[]]],[11,"fmt","tartan_arch::x86::protection","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","tartan_arch::x86_64","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","tartan_arch::x86_common::features","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","tartan_arch::x86_common::interrupt","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","tartan_arch::x86_common::paging","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",36,[[["formatter",3]],["result",6]]],[11,"fmt","","",37,[[["formatter",3]],["result",6]]],[11,"fmt","tartan_arch::x86_common::protection","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","","",28,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",38,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",29,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",30,[[["formatter",3]],["result",6]]],[11,"fmt","","",31,[[["formatter",3]],["result",6]]],[11,"fmt","tartan_arch::x86_common","",32,[[["formatter",3]],["result",6]]],[11,"fmt","","",33,[[["formatter",3]],["result",6]]],[11,"fmt","","",34,[[["formatter",3]],["result",6]]],[11,"fmt","","",35,[[["formatter",3]],["result",6]]],[11,"eq","tartan_arch::x86::protection","",0,[[["basictaskstatesegment",3]]]],[11,"ne","","",0,[[["basictaskstatesegment",3]]]],[11,"eq","","",1,[[["taskstatesegmentheader",3]]]],[11,"ne","","",1,[[["taskstatesegmentheader",3]]]],[11,"eq","","",2,[[["privilegedstack",3]]]],[11,"ne","","",2,[[["privilegedstack",3]]]],[11,"eq","","",3,[[["taskstatesegmentbitmaps",3]]]],[11,"ne","","",3,[[["taskstatesegmentbitmaps",3]]]],[11,"eq","tartan_arch::x86_64","",5,[[["controlregister8",3]]]],[11,"ne","","",5,[[["controlregister8",3]]]],[11,"eq","","",6,[[["extendedfeatureenableregister",3]]]],[11,"ne","","",6,[[["extendedfeatureenableregister",3]]]],[11,"eq","tartan_arch::x86_common::features","",7,[[["basicfeatures",3]]]],[11,"ne","","",7,[[["basicfeatures",3]]]],[11,"eq","","",8,[[["extendedfeatures",3]]]],[11,"ne","","",8,[[["extendedfeatures",3]]]],[11,"eq","","",9,[[["addressspacesizes",3]]]],[11,"ne","","",9,[[["addressspacesizes",3]]]],[11,"eq","tartan_arch::x86_common::interrupt","",11,[[["interruptvector",3]]]],[11,"ne","","",11,[[["interruptvector",3]]]],[11,"eq","","",10,[[["interruptdescriptortableregister",3]]]],[11,"ne","","",10,[[["interruptdescriptortableregister",3]]]],[11,"eq","","",12,[[["apicbaseregister",3]]]],[11,"ne","","",12,[[["apicbaseregister",3]]]],[11,"eq","tartan_arch::x86_common::paging","",16,[[["controlregister2",3]]]],[11,"ne","","",16,[[["controlregister2",3]]]],[11,"eq","","",17,[[["controlregister3",3]]]],[11,"ne","","",17,[[["controlregister3",3]]]],[11,"eq","","",36,[[["level2pagetableentry",3]]]],[11,"ne","","",36,[[["level2pagetableentry",3]]]],[11,"eq","","",37,[[["level1pagetableentry",3]]]],[11,"ne","","",37,[[["level1pagetableentry",3]]]],[11,"eq","tartan_arch::x86_common::protection","",18,[[["globaldescriptortableregister",3]]]],[11,"ne","","",18,[[["globaldescriptortableregister",3]]]],[11,"eq","","",26,[[["selector",3]]]],[11,"ne","","",26,[[["selector",3]]]],[11,"eq","","",27,[[["applicationdescriptorflags",3]]]],[11,"ne","","",27,[[["applicationdescriptorflags",3]]]],[11,"eq","","",28,[[["systemdescriptortype",3]]]],[11,"ne","","",28,[[["systemdescriptortype",3]]]],[11,"eq","","",19,[[["genericdescriptor",3]]]],[11,"ne","","",19,[[["genericdescriptor",3]]]],[11,"eq","","",38,[[["genericdescriptorflags",3]]]],[11,"ne","","",38,[[["genericdescriptorflags",3]]]],[11,"eq","","",20,[[["segmentdescriptor",3]]]],[11,"ne","","",20,[[["segmentdescriptor",3]]]],[11,"eq","","",29,[[["segmentdescriptorflags",3]]]],[11,"ne","","",29,[[["segmentdescriptorflags",3]]]],[11,"eq","","",21,[[["gatedescriptor",3]]]],[11,"ne","","",21,[[["gatedescriptor",3]]]],[11,"eq","","",30,[[["gatedescriptorflags",3]]]],[11,"ne","","",30,[[["gatedescriptorflags",3]]]],[11,"eq","","",31,[[["iopermissionbitmap",3]]]],[11,"ne","","",31,[[["iopermissionbitmap",3]]]],[11,"eq","tartan_arch::x86_common","",32,[[["flagregister",3]]]],[11,"ne","","",32,[[["flagregister",3]]]],[11,"eq","","",33,[[["controlregister0",3]]]],[11,"ne","","",33,[[["controlregister0",3]]]],[11,"eq","","",34,[[["controlregister4",3]]]],[11,"ne","","",34,[[["controlregister4",3]]]],[11,"eq","","",35,[[["extendedcontrolregister0",3]]]],[11,"ne","","",35,[[["extendedcontrolregister0",3]]]],[11,"cmp","tartan_arch::x86_common::interrupt","",11,[[["interruptvector",3]],["ordering",4]]],[11,"cmp","tartan_arch::x86_common::protection","",28,[[["systemdescriptortype",3]],["ordering",4]]],[11,"partial_cmp","tartan_arch::x86_common::interrupt","",11,[[["interruptvector",3]],[["ordering",4],["option",4]]]],[11,"lt","","",11,[[["interruptvector",3]]]],[11,"le","","",11,[[["interruptvector",3]]]],[11,"gt","","",11,[[["interruptvector",3]]]],[11,"ge","","",11,[[["interruptvector",3]]]],[11,"partial_cmp","tartan_arch::x86_common::protection","",28,[[["systemdescriptortype",3]],[["ordering",4],["option",4]]]],[11,"lt","","",28,[[["systemdescriptortype",3]]]],[11,"le","","",28,[[["systemdescriptortype",3]]]],[11,"gt","","",28,[[["systemdescriptortype",3]]]],[11,"ge","","",28,[[["systemdescriptortype",3]]]],[11,"hash","tartan_arch::x86_common::interrupt","",11,[[]]],[11,"hash","tartan_arch::x86_common::protection","",28,[[]]],[11,"clone","tartan_arch::x86::protection","",1,[[],["taskstatesegmentheader",3]]],[11,"clone","","",2,[[],["privilegedstack",3]]],[11,"clone","tartan_arch::x86_64","",5,[[],["controlregister8",3]]],[11,"clone","","",6,[[],["extendedfeatureenableregister",3]]],[11,"clone","tartan_arch::x86_common::features","",7,[[],["basicfeatures",3]]],[11,"clone","","",8,[[],["extendedfeatures",3]]],[11,"clone","","",9,[[],["addressspacesizes",3]]],[11,"clone","tartan_arch::x86_common::interrupt","",11,[[],["interruptvector",3]]],[11,"clone","","",10,[[],["interruptdescriptortableregister",3]]],[11,"clone","","",12,[[],["apicbaseregister",3]]],[11,"clone","tartan_arch::x86_common::paging","",16,[[],["controlregister2",3]]],[11,"clone","","",17,[[],["controlregister3",3]]],[11,"clone","","",36,[[],["level2pagetableentry",3]]],[11,"clone","","",37,[[],["level1pagetableentry",3]]],[11,"clone","tartan_arch::x86_common::protection","",18,[[],["globaldescriptortableregister",3]]],[11,"clone","","",26,[[],["selector",3]]],[11,"clone","","",27,[[],["applicationdescriptorflags",3]]],[11,"clone","","",28,[[],["systemdescriptortype",3]]],[11,"clone","","",19,[[],["genericdescriptor",3]]],[11,"clone","","",38,[[],["genericdescriptorflags",3]]],[11,"clone","","",20,[[],["segmentdescriptor",3]]],[11,"clone","","",29,[[],["segmentdescriptorflags",3]]],[11,"clone","","",21,[[],["gatedescriptor",3]]],[11,"clone","","",30,[[],["gatedescriptorflags",3]]],[11,"clone","tartan_arch::x86_common","",32,[[],["flagregister",3]]],[11,"clone","","",33,[[],["controlregister0",3]]],[11,"clone","","",34,[[],["controlregister4",3]]],[11,"clone","","",35,[[],["extendedcontrolregister0",3]]],[11,"default","tartan_arch::x86_64","",5,[[],["controlregister8",3]]],[11,"default","","",6,[[],["extendedfeatureenableregister",3]]],[11,"default","tartan_arch::x86_common::features","",7,[[],["basicfeatures",3]]],[11,"default","","",8,[[],["extendedfeatures",3]]],[11,"default","","",9,[[],["addressspacesizes",3]]],[11,"default","tartan_arch::x86_common::interrupt","",11,[[],["interruptvector",3]]],[11,"default","","",10,[[],["interruptdescriptortableregister",3]]],[11,"default","","",12,[[],["apicbaseregister",3]]],[11,"default","tartan_arch::x86_common::paging","",16,[[],["controlregister2",3]]],[11,"default","","",17,[[],["controlregister3",3]]],[11,"default","","",36,[[],["level2pagetableentry",3]]],[11,"default","","",37,[[],["level1pagetableentry",3]]],[11,"default","tartan_arch::x86_common::protection","",18,[[],["globaldescriptortableregister",3]]],[11,"default","","",26,[[],["selector",3]]],[11,"default","","",27,[[],["applicationdescriptorflags",3]]],[11,"default","","",28,[[],["systemdescriptortype",3]]],[11,"default","","",38,[[],["genericdescriptorflags",3]]],[11,"default","","",29,[[],["segmentdescriptorflags",3]]],[11,"default","","",30,[[],["gatedescriptorflags",3]]],[11,"default","tartan_arch::x86_common","",32,[[],["flagregister",3]]],[11,"default","","",33,[[],["controlregister0",3]]],[11,"default","","",34,[[],["controlregister4",3]]],[11,"default","","",35,[[],["extendedcontrolregister0",3]]],[11,"name","tartan_arch::x86_common::interrupt","",11,[[],["option",4]]],[11,"name","tartan_arch::x86_common::protection","",28,[[],["option",4]]]],"p":[[3,"BasicTaskStateSegment"],[3,"TaskStateSegmentHeader"],[3,"PrivilegedStack"],[3,"TaskStateSegmentBitmaps"],[3,"TaskStateSegmentHeader"],[3,"ControlRegister8"],[3,"ExtendedFeatureEnableRegister"],[3,"BasicFeatures"],[3,"ExtendedFeatures"],[3,"AddressSpaceSizes"],[3,"InterruptDescriptorTableRegister"],[3,"InterruptVector"],[3,"APICBaseRegister"],[8,"GenericPageTableEntry"],[8,"DirectPageTableEntry"],[8,"HybridPageTableEntry"],[3,"ControlRegister2"],[3,"ControlRegister3"],[3,"GlobalDescriptorTableRegister"],[3,"GenericDescriptor"],[3,"SegmentDescriptor"],[3,"GateDescriptor"],[4,"SegmentRegister"],[8,"DescriptorFlags"],[4,"LocalDescriptorTableRegister"],[4,"TaskRegister"],[3,"Selector"],[3,"ApplicationDescriptorFlags"],[3,"SystemDescriptorType"],[3,"SegmentDescriptorFlags"],[3,"GateDescriptorFlags"],[3,"IOPermissionBitmap"],[3,"FlagRegister"],[3,"ControlRegister0"],[3,"ControlRegister4"],[3,"ExtendedControlRegister0"],[3,"Level2PageTableEntry"],[3,"Level1PageTableEntry"],[3,"GenericDescriptorFlags"]]},\
"tartan_bitfield":{"doc":"Define structures that wrap a number with accessors for…","i":[[5,"get_bit","tartan_bitfield","Get a boolean reflecting a single bit of the value.",null,[[]]],[5,"set_bit","","Create a copy of the value with a single bit modified.",null,[[]]],[5,"get_bits","","Extract a range of bits from the value, shifted so the…",null,[[]]],[5,"set_bits","","Create a copy of the value with a subset of bits updated…",null,[[]]],[8,"Bitfield","","Marker trait implemented by types defined with the…",null,null],[11,"new","","Construct a new bitfield type from its underlying…",0,[[]]],[11,"value","","Unwrap the bitfield into its underlying representation",0,[[]]],[8,"TruncateInto","","A type whose values can be truncated into another type.…",null,null],[10,"truncate_into","","Truncate the value to fit in the destination type",1,[[]]],[8,"OverflowingShl","","A type with an overflowing left shift operation. Also adds…",null,null],[10,"overflowing_shl","","Shift the value left by `n mod m` bits, where `m` is the…",2,[[]]],[11,"saturating_shl","","Shift the value left by `n` bits. If `n` is greater than…",2,[[]]],[8,"OverflowingShr","","A type with an overflowing right shift operation. Also…",null,null],[10,"overflowing_shr","","Shift the value right by `n mod m` bits, where `m` is the…",3,[[]]],[11,"saturating_shr","","Shift the value right by `n` bits. If `n` is greater than…",3,[[]]],[14,"bitfield","","Define a structure that wraps a number with accessors for…",null,null],[14,"bitfield_without_debug","","Same as the [`bitfield`] macro without a [`Debug`]…",null,null],[14,"bitfield_accessors","","Define getters and setters for certain bit ranges. The…",null,null]],"p":[[8,"Bitfield"],[8,"TruncateInto"],[8,"OverflowingShl"],[8,"OverflowingShr"]]},\
"tartan_c_enum":{"doc":"Support for C-style enums that support unknown values.","i":[[8,"CEnum","tartan_c_enum","Trait implemented by all [`c_enum`] types.",null,null],[10,"name","","The name of the enum variant in code, if one is defined…",0,[[],["option",4]]],[14,"c_enum","","Define a struct that wraps an integer type and acts like a…",null,null]],"p":[[8,"CEnum"]]},\
"tartan_devicetree":{"doc":"Support for the Devicetree specification.","i":[[3,"Value","tartan_devicetree","Wrapper for a raw byte array used as the value of a…",null,null],[12,"data","","Property value as raw bytes",0,null],[3,"MemoryReservation","","Indicates an area of memory that the kernel does not have…",null,null],[12,"address","","Start address of the reserved memory",1,null],[12,"size","","Size of the reserved memory in bytes",1,null],[0,"blob","","Flattened device tree, a.k.a. devicetree blob (DTB), as…",null,null],[3,"Tree","tartan_devicetree::blob","Represents a full flattened device tree blob (DTB).",null,null],[4,"StructureData","","An event that signals the start/end of a node or a…",null,null],[13,"BeginNode","","Indicates that the following events are within the scope…",2,null],[13,"EndNode","","Indicates that the previous current node is complete, and…",2,null],[13,"Property","","Defines a property of the current node",2,null],[12,"name","tartan_devicetree::blob::StructureData","The name of the property.",3,null],[12,"value","","The value of the property.",3,null],[11,"from_ptr","tartan_devicetree::blob","Parse a devicetree blob that begins at the specified…",4,[[],[["result",4],["err",4]]]],[11,"from_buffer","","Parse a devicetree blob that starts at the beginning of…",4,[[],[["result",4],["err",4]]]],[11,"memory_reservation_iter","","Iterate over memory reservations defined by this devicetree",4,[[["tree",3]]]],[11,"structure_iter","","Iterate over elements in the device tree. Note that this…",4,[[["tree",3]]]],[11,"from","tartan_devicetree","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_owned","","",0,[[]]],[11,"clone_into","","",0,[[]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"from","tartan_devicetree::blob","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"to_owned","","",4,[[]]],[11,"clone_into","","",4,[[]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"to_owned","","",2,[[]]],[11,"clone_into","","",2,[[]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","tartan_devicetree","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"eq","tartan_devicetree::blob","",4,[[["tree",3]]]],[11,"ne","","",4,[[["tree",3]]]],[11,"eq","","",2,[[["structuredata",4]]]],[11,"ne","","",2,[[["structuredata",4]]]],[11,"eq","tartan_devicetree","",0,[[["value",3]]]],[11,"ne","","",0,[[["value",3]]]],[11,"eq","","",1,[[["memoryreservation",3]]]],[11,"ne","","",1,[[["memoryreservation",3]]]],[11,"clone","tartan_devicetree::blob","",4,[[],["tree",3]]],[11,"clone","","",2,[[],["structuredata",4]]],[11,"clone","tartan_devicetree","",0,[[],["value",3]]],[11,"clone","","",1,[[],["memoryreservation",3]]],[11,"default","tartan_devicetree::blob","",4,[[],["tree",3]]],[11,"default","tartan_devicetree","",1,[[],["memoryreservation",3]]]],"p":[[3,"Value"],[3,"MemoryReservation"],[4,"StructureData"],[13,"Property"],[3,"Tree"]]},\
"tartan_elf":{"doc":"Support for Executable and Linkable Format (ELF) binaries.","i":[[3,"Header","tartan_elf","File header for an ELF file with a specific address size.",null,null],[12,"ident","","Header common to all ELF variants.",0,null],[12,"file_type","","Distinguishes executables, libraries, etc.",0,null],[12,"machine","","CPU architecture",0,null],[12,"version","","ELF format version",0,null],[12,"entry_point","","Virtual address of executable entry point. Zero if not…",0,null],[12,"program_header_offset","","File offset to the array of program section headers which…",0,null],[12,"section_header_offset","","File offset to the array of section header which control…",0,null],[12,"flags","","CPU architecture-specific flags.",0,null],[12,"header_size","","Size in bytes of this header. May be longer than the…",0,null],[12,"program_header_size","","Size in bytes of of each program segment header. May be…",0,null],[12,"program_header_count","","Number of program segment headers.",0,null],[12,"section_header_size","","Size in bytes of each section header. May be longer than…",0,null],[12,"section_header_count","","Number of section headers.",0,null],[12,"section_names_index","","Index of the section header which contains the list of…",0,null],[3,"HeaderIdent","","Initial header which has the same layout in all ELF…",null,null],[12,"magic","","Magic number that identifies this as an ELF file.",1,null],[12,"class","","Specifies the address size (32- or 64-bit) of the file.",1,null],[12,"endianness","","Specifies whether the file uses big or little endian byte…",1,null],[12,"header_version","","Version of the ELF header.",1,null],[12,"os_abi","","Operating-system-specific ABI extensions that this file…",1,null],[12,"os_abi_version","","Backwards-incompatible version number of the `os_abi`…",1,null],[3,"FileClass","","Specifies the address size (32- or 64-bit) of the file.",null,null],[3,"Endianness","","Specifies whether the file uses big or little endian byte…",null,null],[3,"OSABI","","Operating-system-specific ABI extensions supported by the…",null,null],[3,"FileType","","Types of object files supported by the ELF specification",null,null],[3,"Machine","","Identifies the target CPU architecture.",null,null],[3,"ProgramHeader32","","Header that controls loading of a single segment of an…",null,null],[12,"segment_type","","Indicates the contents/meaning of the segment described by…",2,null],[12,"file_offset","","File offset to the start of this segment\'s data.",2,null],[12,"virtual_addr","","Virtual base address where the segment should be loaded.",2,null],[12,"physical_addr","","Physical base address where the segment should be loaded.…",2,null],[12,"file_size","","Size in bytes of the file data for this segment.",2,null],[12,"mem_size","","Size in bytes of this segment once it is loaded into memory.",2,null],[12,"flags","","Controls permissions and other OS/arch-specific flags.",2,null],[12,"alignment","","Alignment of the segment in bytes, for both the file and…",2,null],[3,"ProgramHeader64","","Header that controls loading of a single segment of an…",null,null],[12,"segment_type","","Indicates the contents/meaning of the segment described by…",3,null],[12,"flags","","Controls permissions and other OS/arch-specific flags.",3,null],[12,"file_offset","","File offset to the start of this segment\'s data.",3,null],[12,"virtual_addr","","Virtual base address where the segment should be loaded.",3,null],[12,"physical_addr","","Physical base address where the segment should be loaded.…",3,null],[12,"file_size","","Size in bytes of the file data for this segment.",3,null],[12,"mem_size","","Size in bytes of this segment once it is loaded into memory.",3,null],[12,"alignment","","Alignment of the segment in bytes, for both the file and…",3,null],[3,"ProgramSegmentType","","Defines the contents and meaning of individual program…",null,null],[3,"ProgramSegmentFlags","","Permissions and other OS/arch-specific flags for…",null,null],[3,"SectionHeader","","Header that controls linking",null,null],[12,"name_table_offset","","Offset within the names section to the start of this…",4,null],[12,"section_type","","Indicates the contents/meaning of the section described by…",4,null],[12,"flags_raw","","Flags for various attributes of this section.",4,null],[12,"virtual_addr","","Virtual address where this section should be loaded in…",4,null],[12,"file_offset","","File offset to the start of this section\'s data.",4,null],[12,"file_size","","Size in bytes of this section\'s file data.",4,null],[12,"associated_section_index","","Depending on the `section_type`, this may identify another…",4,null],[12,"extra_info","","Additional flags that depend on the `section_type`.",4,null],[12,"alignment","","Required alignment of the section in bytes.",4,null],[12,"entry_size","","Depending on the `section_type`, this may identify the…",4,null],[3,"SectionType","","Defines the contents and meaning of individual sections.",null,null],[3,"SectionFlags","","Additional attributes for object file sections.",null,null],[6,"HeaderNative","","Variant of the [`Header`] structure native to the current…",null,null],[6,"ProgramHeaderNative","","Program header variant native to the current target",null,null],[6,"SectionHeaderNative","","Variant of the [`SectionHeader`] structure native to the…",null,null],[18,"VERSION","","Expected value of the `version` field.",0,null],[11,"verify_native","","Checks that the header represents a valid ELF file for the…",0,[[]]],[18,"MAGIC","","Expected value of the `magic` field.",1,null],[18,"VERSION","","Expected value of the `header_version` field.",1,null],[11,"verify_format","","Checks that the header represents a valid ELF file, of any…",1,[[]]],[11,"verify_native","","Checks that the header represents an ELF file in the…",1,[[]]],[18,"None","","Invalid placeholder value.",5,null],[18,"Size32","","File uses 32-bit addresses/offsets.",5,null],[18,"Size64","","File uses 64-bit addresses/offsets.",5,null],[11,"name","","The name of the enum variant in code, if one is defined…",5,[[],["option",4]]],[18,"NATIVE","","The expected file class for the current platform.",5,null],[18,"NATIVE","","The expected file class for the current platform.",5,null],[18,"None","","Invalid placeholder value.",6,null],[18,"Little","","File uses little-endian (LSB first) byte ordering.",6,null],[18,"Big","","File uses big-endian (MSB-first) byte ordering.",6,null],[11,"name","","The name of the enum variant in code, if one is defined…",6,[[],["option",4]]],[18,"NATIVE","","The expected endianness value for the current platform.",6,null],[18,"None","","Original Unix System V ABI",7,null],[18,"HPUX","","HP-UX",7,null],[18,"NetBSD","","NetBSD",7,null],[18,"Linux","","GNU with Linux kernel",7,null],[18,"Hurd","","GNU with Hurd kernel",7,null],[18,"Solaris","","Sun/Oracle Solaris",7,null],[18,"AIX","","IBM AIX",7,null],[18,"IRIX","","SGI IRIX",7,null],[18,"FreeBSD","","FreeBSD",7,null],[18,"TRU64","","Compaq TRU64 Unix",7,null],[18,"Modesto","","Novell Modesto",7,null],[18,"OpenBSD","","OpenBSD",7,null],[18,"OpenVMS","","DEC OpenVMS",7,null],[18,"NonStopKernel","","HP Non-Stop Kernel",7,null],[18,"AROS","","AROS (Amiga)",7,null],[18,"FenixOS","","FenixOS (Passas and Karlsson 2011?)",7,null],[18,"CloudABI","","Nuxi CloudABI",7,null],[18,"OpenVOS","","Stratus Open VOS",7,null],[18,"MinArchDefined","","Beginning of range (inclusive) for CPU…",7,null],[18,"MaxArchDefined","","End of range (inclusive) for CPU architecture-specific…",7,null],[11,"name","","The name of the enum variant in code, if one is defined…",7,[[],["option",4]]],[18,"None","","Invalid placeholder value.",8,null],[18,"Relocatable","","Relocatable object file",8,null],[18,"Executable","","A file with an entry point that can be executed",8,null],[18,"SharedObject","","Dynamic shared library",8,null],[18,"Core","","Core dump",8,null],[18,"MinOSDefined","","Beginning of range (inclusive) for OS-specific values",8,null],[18,"MaxOSDefined","","End of range (inclusive) for OS-specific values",8,null],[18,"MinArchDefined","","Beginning of range (inclusive) for CPU…",8,null],[18,"MaxArchDefined","","Beginning of range (inclusive) for CPU…",8,null],[11,"name","","The name of the enum variant in code, if one is defined…",8,[[],["option",4]]],[18,"None","","No specific architecture defined.",9,null],[18,"SPARC","","Sun/Oracle SPARC",9,null],[18,"X86","","32-bit x86",9,null],[18,"M68K","","Motorola 68000",9,null],[18,"MIPS","","MIPS I",9,null],[18,"MIPSRS3kLittleEndian","","MIPS RS3000 (little-endian)",9,null],[18,"PowerPC","","32-bit PowerPC",9,null],[18,"PowerPC64","","64-bit PowerPC",9,null],[18,"Arm","","32-bit Arm",9,null],[18,"IA64","","Intel Itanium IA-64",9,null],[18,"X86_64","","64-bit x86",9,null],[18,"Arm64","","64-bit Arm",9,null],[18,"RISCV","","RISC-V",9,null],[11,"name","","The name of the enum variant in code, if one is defined…",9,[[],["option",4]]],[18,"NATIVE","","The expected machine type for the current platform.",9,null],[18,"NATIVE","","The expected machine type for the current platform.",9,null],[18,"None","","Marks an ignored or unused segment.",10,null],[18,"Loadable","","Segment that should be loaded into memory.",10,null],[18,"DynamicLink","","Segment containing information for the dynamic linker.",10,null],[18,"Interpreter","","Segment containing the path to the program\'s interpreter…",10,null],[18,"Note","","Segment containing auxillary information.",10,null],[18,"ProgramHeaderTable","","Segment that contains the program header itself, including…",10,null],[18,"ThreadLocalStorage","","Segment that contains a template for the thread-local…",10,null],[18,"MinOSDefined","","Beginning of range (inclusive) for OS-specific values",10,null],[18,"MaxOSDefined","","End of range (inclusive) for OS-specific values",10,null],[18,"MinArchDefined","","Beginning of range (inclusive) for CPU…",10,null],[18,"MaxArchDefined","","End of range (inclusive) for CPU architecture-specific…",10,null],[11,"name","","The name of the enum variant in code, if one is defined…",10,[[],["option",4]]],[11,"execute","","Indicates the segment contains code that should be…",11,[[]]],[11,"write","","Indicates the segment contains data that should be…",11,[[]]],[11,"read","","Indicates the segment contains data that should be…",11,[[]]],[11,"os_defined","","Bits that are left for OS-specific flags.",11,[[]]],[11,"arch_defined","","Bits that are left for CPU architecture-specific flags.",11,[[]]],[11,"set_execute","","Indicates the segment contains code that should be…",11,[[]]],[11,"set_write","","Indicates the segment contains data that should be…",11,[[]]],[11,"set_read","","Indicates the segment contains data that should be…",11,[[]]],[11,"set_os_defined","","Bits that are left for OS-specific flags.",11,[[]]],[11,"set_arch_defined","","Bits that are left for CPU architecture-specific flags.",11,[[]]],[11,"flags","","Flags for various attributes of this section.",4,[[],["sectionflags",3]]],[11,"set_flags","","Flags for various attributes of this section.",4,[[["sectionflags",3]]]],[18,"None","","Marks an ignored or unused section.",12,null],[18,"ProgramDefined","","Section containing data that is only meaningful to the…",12,null],[18,"Symbols","","Section containing the symbol table for this object file.",12,null],[18,"Strings","","Section containing packed null-terminated strings.",12,null],[18,"RelocationWithAdded","","Section containing relocation data with addends given in…",12,null],[18,"SymbolHash","","Section containing the hash table for symbols.",12,null],[18,"DynamicLink","","Section containing information for the dynamic linker.",12,null],[18,"Note","","Section containing auxillary information.",12,null],[18,"NoBits","","An empty file section that will be filled with zeros when…",12,null],[18,"RelocationNoAdded","","Section containing relocation data where the addends are…",12,null],[18,"DynamicLinkSymbol","","Section containing the symbol table for dynamic linking.",12,null],[18,"Constructors","","Section containing the addresses of constructor functions…",12,null],[18,"Destructors","","Section containing the addresses of destructor functions…",12,null],[18,"PreConstructors","","Section containing the addresses of constructor functions…",12,null],[18,"Group","","Section that groups other sections.",12,null],[18,"SymbolIndirectSections","","Table of section indexes that correspond to entries in the…",12,null],[18,"MinOSDefined","","Beginning of range (inclusive) for OS-specific values",12,null],[18,"MaxOSDefined","","End of range (inclusive) for OS-specific values",12,null],[18,"MinArchDefined","","Beginning of range (inclusive) for CPU…",12,null],[18,"MaxArchDefined","","End of range (inclusive) for CPU architecture-specific…",12,null],[18,"MinUserDefined","","Beginning of range (inclusive) for user-defined values",12,null],[18,"MaxUserDefined","","End of range (inclusive) for user-defined values",12,null],[11,"name","","The name of the enum variant in code, if one is defined…",12,[[],["option",4]]],[11,"write","","Indicates the section contains data that should be…",13,[[]]],[11,"allocate","","Indicates this section should be loaded into memory when…",13,[[]]],[11,"execute","","Indicates this section contains code that should be…",13,[[]]],[11,"merged","","Indicates that multiple sections of this type can be…",13,[[]]],[11,"strings","","Indicates the section contains null-terminate strings.",13,[[]]],[11,"extra_info_is_link","","Indicates that the `extra_info` field of the section…",13,[[]]],[11,"keep_order","","Indicates that this section and the…",13,[[]]],[11,"os_nonconforming","","Indicates that the section must be processed in an…",13,[[]]],[11,"group_member","","Indicates the section is listed by a section with type…",13,[[]]],[11,"thread_locals","","Indicates the section contains a template for the…",13,[[]]],[11,"os_defined","","Bits that are left for OS-defined flags.",13,[[]]],[11,"arch_defined","","Bits that are left for CPU architecture-defined flags.",13,[[]]],[11,"set_write","","Indicates the section contains data that should be…",13,[[]]],[11,"set_allocate","","Indicates this section should be loaded into memory when…",13,[[]]],[11,"set_execute","","Indicates this section contains code that should be…",13,[[]]],[11,"set_merged","","Indicates that multiple sections of this type can be…",13,[[]]],[11,"set_strings","","Indicates the section contains null-terminate strings.",13,[[]]],[11,"set_extra_info_is_link","","Indicates that the `extra_info` field of the section…",13,[[]]],[11,"set_keep_order","","Indicates that this section and the…",13,[[]]],[11,"set_os_nonconforming","","Indicates that the section must be processed in an…",13,[[]]],[11,"set_group_member","","Indicates the section is listed by a section with type…",13,[[]]],[11,"set_thread_locals","","Indicates the section contains a template for the…",13,[[]]],[11,"set_os_defined","","Bits that are left for OS-defined flags.",13,[[]]],[11,"set_arch_defined","","Bits that are left for CPU architecture-defined flags.",13,[[]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"from","","",6,[[]]],[11,"from","","",7,[[]]],[11,"from","","",8,[[]]],[11,"from","","",9,[[]]],[11,"from","","",10,[[]]],[11,"from","","",11,[[]]],[11,"from","","",12,[[]]],[11,"from","","",13,[[]]],[11,"from","","",13,[[],["sectionflags",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",5,[[["formatter",3]],["result",6]]],[11,"fmt","","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",2,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"eq","","",0,[[["header",3]]]],[11,"ne","","",0,[[["header",3]]]],[11,"eq","","",1,[[["headerident",3]]]],[11,"ne","","",1,[[["headerident",3]]]],[11,"eq","","",5,[[["fileclass",3]]]],[11,"ne","","",5,[[["fileclass",3]]]],[11,"eq","","",6,[[["endianness",3]]]],[11,"ne","","",6,[[["endianness",3]]]],[11,"eq","","",7,[[["osabi",3]]]],[11,"ne","","",7,[[["osabi",3]]]],[11,"eq","","",8,[[["filetype",3]]]],[11,"ne","","",8,[[["filetype",3]]]],[11,"eq","","",9,[[["machine",3]]]],[11,"ne","","",9,[[["machine",3]]]],[11,"eq","","",2,[[["programheader32",3]]]],[11,"ne","","",2,[[["programheader32",3]]]],[11,"eq","","",3,[[["programheader64",3]]]],[11,"ne","","",3,[[["programheader64",3]]]],[11,"eq","","",10,[[["programsegmenttype",3]]]],[11,"ne","","",10,[[["programsegmenttype",3]]]],[11,"eq","","",11,[[["programsegmentflags",3]]]],[11,"ne","","",11,[[["programsegmentflags",3]]]],[11,"eq","","",4,[[["sectionheader",3]]]],[11,"ne","","",4,[[["sectionheader",3]]]],[11,"eq","","",12,[[["sectiontype",3]]]],[11,"ne","","",12,[[["sectiontype",3]]]],[11,"eq","","",13,[[["sectionflags",3]]]],[11,"ne","","",13,[[["sectionflags",3]]]],[11,"cmp","","",5,[[["fileclass",3]],["ordering",4]]],[11,"cmp","","",6,[[["endianness",3]],["ordering",4]]],[11,"cmp","","",7,[[["osabi",3]],["ordering",4]]],[11,"cmp","","",8,[[["filetype",3]],["ordering",4]]],[11,"cmp","","",9,[[["machine",3]],["ordering",4]]],[11,"cmp","","",10,[[["programsegmenttype",3]],["ordering",4]]],[11,"cmp","","",12,[[["sectiontype",3]],["ordering",4]]],[11,"partial_cmp","","",5,[[["fileclass",3]],[["ordering",4],["option",4]]]],[11,"lt","","",5,[[["fileclass",3]]]],[11,"le","","",5,[[["fileclass",3]]]],[11,"gt","","",5,[[["fileclass",3]]]],[11,"ge","","",5,[[["fileclass",3]]]],[11,"partial_cmp","","",6,[[["endianness",3]],[["ordering",4],["option",4]]]],[11,"lt","","",6,[[["endianness",3]]]],[11,"le","","",6,[[["endianness",3]]]],[11,"gt","","",6,[[["endianness",3]]]],[11,"ge","","",6,[[["endianness",3]]]],[11,"partial_cmp","","",7,[[["osabi",3]],[["ordering",4],["option",4]]]],[11,"lt","","",7,[[["osabi",3]]]],[11,"le","","",7,[[["osabi",3]]]],[11,"gt","","",7,[[["osabi",3]]]],[11,"ge","","",7,[[["osabi",3]]]],[11,"partial_cmp","","",8,[[["filetype",3]],[["ordering",4],["option",4]]]],[11,"lt","","",8,[[["filetype",3]]]],[11,"le","","",8,[[["filetype",3]]]],[11,"gt","","",8,[[["filetype",3]]]],[11,"ge","","",8,[[["filetype",3]]]],[11,"partial_cmp","","",9,[[["machine",3]],[["ordering",4],["option",4]]]],[11,"lt","","",9,[[["machine",3]]]],[11,"le","","",9,[[["machine",3]]]],[11,"gt","","",9,[[["machine",3]]]],[11,"ge","","",9,[[["machine",3]]]],[11,"partial_cmp","","",10,[[["programsegmenttype",3]],[["ordering",4],["option",4]]]],[11,"lt","","",10,[[["programsegmenttype",3]]]],[11,"le","","",10,[[["programsegmenttype",3]]]],[11,"gt","","",10,[[["programsegmenttype",3]]]],[11,"ge","","",10,[[["programsegmenttype",3]]]],[11,"partial_cmp","","",12,[[["sectiontype",3]],[["ordering",4],["option",4]]]],[11,"lt","","",12,[[["sectiontype",3]]]],[11,"le","","",12,[[["sectiontype",3]]]],[11,"gt","","",12,[[["sectiontype",3]]]],[11,"ge","","",12,[[["sectiontype",3]]]],[11,"hash","","",5,[[]]],[11,"hash","","",6,[[]]],[11,"hash","","",7,[[]]],[11,"hash","","",8,[[]]],[11,"hash","","",9,[[]]],[11,"hash","","",10,[[]]],[11,"hash","","",12,[[]]],[11,"clone","","",0,[[],["header",3]]],[11,"clone","","",1,[[],["headerident",3]]],[11,"clone","","",5,[[],["fileclass",3]]],[11,"clone","","",6,[[],["endianness",3]]],[11,"clone","","",7,[[],["osabi",3]]],[11,"clone","","",8,[[],["filetype",3]]],[11,"clone","","",9,[[],["machine",3]]],[11,"clone","","",2,[[],["programheader32",3]]],[11,"clone","","",3,[[],["programheader64",3]]],[11,"clone","","",10,[[],["programsegmenttype",3]]],[11,"clone","","",11,[[],["programsegmentflags",3]]],[11,"clone","","",4,[[],["sectionheader",3]]],[11,"clone","","",12,[[],["sectiontype",3]]],[11,"clone","","",13,[[],["sectionflags",3]]],[11,"default","","",0,[[],["header",3]]],[11,"default","","",1,[[],["headerident",3]]],[11,"default","","",5,[[],["fileclass",3]]],[11,"default","","",6,[[],["endianness",3]]],[11,"default","","",7,[[],["osabi",3]]],[11,"default","","",8,[[],["filetype",3]]],[11,"default","","",9,[[],["machine",3]]],[11,"default","","",2,[[],["programheader32",3]]],[11,"default","","",3,[[],["programheader64",3]]],[11,"default","","",10,[[],["programsegmenttype",3]]],[11,"default","","",11,[[],["programsegmentflags",3]]],[11,"default","","",4,[[],["sectionheader",3]]],[11,"default","","",12,[[],["sectiontype",3]]],[11,"default","","",13,[[],["sectionflags",3]]],[11,"name","","",5,[[],["option",4]]],[11,"name","","",6,[[],["option",4]]],[11,"name","","",7,[[],["option",4]]],[11,"name","","",8,[[],["option",4]]],[11,"name","","",9,[[],["option",4]]],[11,"name","","",10,[[],["option",4]]],[11,"name","","",12,[[],["option",4]]]],"p":[[3,"Header"],[3,"HeaderIdent"],[3,"ProgramHeader32"],[3,"ProgramHeader64"],[3,"SectionHeader"],[3,"FileClass"],[3,"Endianness"],[3,"OSABI"],[3,"FileType"],[3,"Machine"],[3,"ProgramSegmentType"],[3,"ProgramSegmentFlags"],[3,"SectionType"],[3,"SectionFlags"]]},\
"tartan_kernel":{"doc":"","i":[[5,"_start","tartan_kernel","",null,[[]]],[5,"kernel_main","","",null,[[]]],[5,"find_uart","","",null,[[]]],[5,"panic_handler","","",null,[[["panicinfo",3]]]],[5,"eh_personality","","",null,[[]]],[0,"intrinsics","","This module contains some compiler-rt intrinsics that are…",null,null],[5,"memcpy","tartan_kernel::intrinsics","",null,[[]]],[5,"memmove","","",null,[[]]],[5,"memset","","",null,[[]]],[5,"memcmp","","",null,[[]]],[5,"bcmp","","",null,[[]]],[7,"X","tartan_kernel","",null,null]],"p":[]},\
"tartan_parsers":{"doc":"Utilities for nom parsers","i":[[5,"cut","tartan_parsers","Transforms a parser error (recoverable) to a failure…",null,[[]]],[5,"opcode","","Combinator for productions that use a deterministic opcode",null,[[]]],[5,"result_iterator","","Create an iterator that repeatedly executes the parser.",null,[[]]],[0,"error","","Helpers for reporting parsing errors",null,null],[3,"Position","tartan_parsers::error","Helper struct that prints human-readable position…",null,null],[12,"state","","The state of the parser at the time we are interested in",0,null],[12,"full_input","","The complete input we are trying to parse",0,null],[3,"ErrorWithPosition","","A parser error with position info useful for printing…",null,null],[12,"error","","The error returned by the parser",1,null],[12,"full_input","","The complete input we were trying to parse",1,null],[5,"err","","Shortcut for constructing parser errors",null,[[["errorkind",4]],[["iresult",6],["parseerror",8]]]],[11,"new","","Associate a parse error with its full input, to reference…",1,[[["verboseerror",3],["err",4]]]],[14,"struct_parser","tartan_parsers","Parse struct fields in order using an initializer-like…",null,null],[11,"from","tartan_parsers::error","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"to_string","","",0,[[],["string",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"to_string","","",1,[[],["string",3]]],[11,"to_owned","","",1,[[]]],[11,"clone_into","","",1,[[]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",0,[[["formatter",3]],[["error",3],["result",4]]]],[11,"fmt","","",1,[[["formatter",3]],[["error",3],["result",4]]]],[11,"clone","","",1,[[],["errorwithposition",3]]]],"p":[[3,"Position"],[3,"ErrorWithPosition"]]},\
"tartan_pci":{"doc":"Support for Peripheral Component Interconnect (PCI) and…","i":[[3,"CapabilityEntry","tartan_pci","Information to identify and locate capability registers",null,null],[12,"id","","Capability ID defined by PCI-SIG",0,null],[12,"register","","Register number in config space (offset in 4-byte units)…",0,null],[5,"enumerate_bus","","Iterate over the devices and functions present on the…",null,[[["configselector",3]]]],[5,"enumerate_bus_devices","","Iterate over the devices present on the specified bus.",null,[[["configselector",3]]]],[5,"enumerate_device_functions","","Iterate over the functions available on the specified…",null,[[["configselector",3]]]],[5,"check_valid","","Return true if a function is available at the specified…",null,[[["configselector",3]]]],[5,"iter_capabilities","","Iterate over all capabilities defined in the configuration…",null,[[["configselector",3]]]],[0,"access","","Access methods for PCI configuration space.",null,null],[3,"ConfigSelector","tartan_pci::access","Logical PCI address for a function of a specific…",null,null],[12,"segment_group","","Segment group as defined by PCI Express. Always zero for…",1,null],[12,"bus","","PCI bus number within the indicated segment group. The…",1,null],[12,"device","","PCI device number on the indicated bus.",1,null],[12,"function","","PCI function number on the indicated device. Usually zero,…",1,null],[3,"MemMapConfigAccess","","Access to memory-mapped PCI configuration space",null,null],[0,"io","","Support for the I/O based configuration access method on…",null,null],[3,"IOConfigAccess","tartan_pci::access::io","I/O based configuration access method on x86/x86-64.",null,null],[8,"ConfigAccess","tartan_pci::access","Provides methods to access PCI configuration space.",null,null],[10,"get_register","","Get a specific 32-bit register in PCI configuration space.",2,[[["configselector",3]]]],[10,"set_register","","Set a specific 32-bit register in PCI configuration space.",2,[[["configselector",3]]]],[11,"get_fixed_register","","Get a register in PCI configuration space with an offset…",2,[[["configselector",3]],["fixedconfigregister",8]]],[11,"set_fixed_register","","Set a register in PCI configuration space with an offset…",2,[[["configselector",3],["fixedconfigregister",8]]]],[0,"config","tartan_pci","Data exposed in PCI configuration space.",null,null],[3,"HeaderRegister0","tartan_pci::config","The first register of the standard configuration header…",null,null],[3,"HeaderRegister1","","The second register of the standard configuration header…",null,null],[3,"HeaderRegister2","","The third register of the standard configuration header…",null,null],[3,"HeaderRegister3","","The fourth register of the standard configuration header…",null,null],[3,"Type0HeaderRegister11","","Twelfth register of the standard configuration header for…",null,null],[3,"Type0HeaderRegister13","","Fourtheenth register of the standard configuration header…",null,null],[3,"Type0HeaderRegister15","","Sixteenth register of the standard configuration header…",null,null],[3,"CommandRegister","","Control bits set by the host",null,null],[3,"StatusRegister","","Status bits indicated by the function",null,null],[3,"SelfTest","","Control and status flags for a function\'s self test…",null,null],[3,"BaseAddressRegister","","A pointer to a memory or I/O space that is used to…",null,null],[3,"GenericCapabilityRegister","","Structure shared by all capability registers",null,null],[4,"AddressSpace","","Differentiates between memory and I/O addresses",null,null],[13,"Memory","","This address is in the normal memory address space",3,null],[13,"IO","","This address is in I/O space (supported on x86/x86-64 only)",3,null],[4,"AddressWidth","","Size of address bus supported by a PCI function",null,null],[13,"U32","","32-bit address bus",4,null],[13,"U64","","64-bit address bus",4,null],[13,"Invalid","","Unknown address bus width",4,null],[8,"FixedConfigRegister","","A register type that is always located at a specific offset",null,null],[18,"REGISTER_NUMBER","","Fixed offset for this register type",5,null],[11,"device","","Vendor-defined device ID",6,[[]]],[11,"vendor","","ID of the chipset manufacturer for this function, assigned…",6,[[]]],[11,"set_device","","Vendor-defined device ID",6,[[]]],[11,"set_vendor","","ID of the chipset manufacturer for this function, assigned…",6,[[]]],[11,"valid","","Return false if the function is not present, as indicated…",6,[[]]],[11,"status","","Status bits indicated by the function",7,[[],["statusregister",3]]],[11,"command","","Control bits set by the host",7,[[],["commandregister",3]]],[11,"set_status","","Status bits indicated by the function",7,[[["statusregister",3]]]],[11,"set_command","","Control bits set by the host",7,[[["commandregister",3]]]],[11,"class","","Indicates the general purpose of the function, from a list…",8,[[]]],[11,"subclass","","Indicates the purpose of the function more specifically,…",8,[[]]],[11,"interface","","Indicates a standard programming interface that can be…",8,[[]]],[11,"revision","","Vendor-defined revision of the hardware",8,[[]]],[11,"set_class","","Indicates the general purpose of the function, from a list…",8,[[]]],[11,"set_subclass","","Indicates the purpose of the function more specifically,…",8,[[]]],[11,"set_interface","","Indicates a standard programming interface that can be…",8,[[]]],[11,"set_revision","","Vendor-defined revision of the hardware",8,[[]]],[11,"self_test","","Control and status flags for a function\'s self test…",9,[[],["selftest",3]]],[11,"multi_function","","If true, then this device responds to at least some…",9,[[]]],[11,"header_type","","Indicates which of the standard PCI configuration header…",9,[[]]],[11,"latency_timer","","The value of the bus master\'s latency timer in PCI clock…",9,[[]]],[11,"cache_line_size","","Informs the device of the size of the system\'s cache…",9,[[]]],[11,"set_self_test","","Control and status flags for a function\'s self test…",9,[[["selftest",3]]]],[11,"set_multi_function","","If true, then this device responds to at least some…",9,[[]]],[11,"set_header_type","","Indicates which of the standard PCI configuration header…",9,[[]]],[11,"set_latency_timer","","The value of the bus master\'s latency timer in PCI clock…",9,[[]]],[11,"set_cache_line_size","","Informs the device of the size of the system\'s cache…",9,[[]]],[11,"subsystem","","ID of the device as defined by the card manufacturer.",10,[[]]],[11,"subsystem_vendor","","ID of the card manufacturer, which may be different than…",10,[[]]],[11,"set_subsystem","","ID of the device as defined by the card manufacturer.",10,[[]]],[11,"set_subsystem_vendor","","ID of the card manufacturer, which may be different than…",10,[[]]],[11,"capabilities_offset","","Offset within this function\'s configuration space that…",11,[[]]],[11,"set_capabilities_offset","","Offset within this function\'s configuration space that…",11,[[]]],[11,"max_latency","","Indicates the longest period the device can wait to access…",12,[[]]],[11,"min_grant","","Indicates the desired length of bursts in units of 0.25 µs.",12,[[]]],[11,"interrupt_pin","","Indicates which of the four interrupt pins on the PCI bus…",12,[[]]],[11,"interrupt_line","","Indicates which system interrupt number the function uses,…",12,[[]]],[11,"set_max_latency","","Indicates the longest period the device can wait to access…",12,[[]]],[11,"set_min_grant","","Indicates the desired length of bursts in units of 0.25 µs.",12,[[]]],[11,"set_interrupt_pin","","Indicates which of the four interrupt pins on the PCI bus…",12,[[]]],[11,"set_interrupt_line","","Indicates which system interrupt number the function uses,…",12,[[]]],[11,"interrupt_disabled","","Controls whether the device is prohibited from asserting…",13,[[]]],[11,"fast_back_to_back_enabled","","Controls whether the device may use fast back-to-back…",13,[[]]],[11,"system_error_enabled","","Controls whether the device may signal critical errors in…",13,[[]]],[11,"parity_error_response","","Controls whether the device responds normally to parity…",13,[[]]],[11,"vga_palette_snoop","","Controls whether a VGA or graphics card device may \\\"snoop\\\"…",13,[[]]],[11,"write_and_invalidate_enable","","Controls whether the device may send a \\\"Memory Write and…",13,[[]]],[11,"special_cycle","","Controls whether the device may respond to \\\"special cycle\\\"…",13,[[]]],[11,"bus_master","","Controls whether the device may act as a master of the PCI…",13,[[]]],[11,"memory_space","","Controls whether the device may respond to accesses…",13,[[]]],[11,"io_space","","Controls whether the device may respond to accesses…",13,[[]]],[11,"set_interrupt_disabled","","Controls whether the device is prohibited from asserting…",13,[[]]],[11,"set_fast_back_to_back_enabled","","Controls whether the device may use fast back-to-back…",13,[[]]],[11,"set_system_error_enabled","","Controls whether the device may signal critical errors in…",13,[[]]],[11,"set_parity_error_response","","Controls whether the device responds normally to parity…",13,[[]]],[11,"set_vga_palette_snoop","","Controls whether a VGA or graphics card device may \\\"snoop\\\"…",13,[[]]],[11,"set_write_and_invalidate_enable","","Controls whether the device may send a \\\"Memory Write and…",13,[[]]],[11,"set_special_cycle","","Controls whether the device may respond to \\\"special cycle\\\"…",13,[[]]],[11,"set_bus_master","","Controls whether the device may act as a master of the PCI…",13,[[]]],[11,"set_memory_space","","Controls whether the device may respond to accesses…",13,[[]]],[11,"set_io_space","","Controls whether the device may respond to accesses…",13,[[]]],[11,"parity_error_detected","","Indicates taht the device has detected a parity error,…",14,[[]]],[11,"system_error_signaled","","Indicates that the device has detected a critical error in…",14,[[]]],[11,"master_abort_received","","Indicates whether the transaction was aborted with a…",14,[[]]],[11,"target_abort_received","","Indicates whether the transaction was aborted with a…",14,[[]]],[11,"target_abort_signaled","","Indicates that this function generated an abort on the…",14,[[]]],[11,"device_select_timing","","Indicates how quickly the device can assert the `DEVSEL#`…",14,[[]]],[11,"master_parity_error","","Indicates whether a partity error was detected while this…",14,[[]]],[11,"fast_back_to_back_capable","","Indicates whether the device supports receiving…",14,[[]]],[11,"double_clock_capable","","Indicates whether the device can run at 66 MHz (true).",14,[[]]],[11,"capabilities_list_available","","Indicates whether the configuration space contains a…",14,[[]]],[11,"interrupt_status","","Indicates whether the device wants to signal an interrupt,…",14,[[]]],[11,"set_parity_error_detected","","Indicates taht the device has detected a parity error,…",14,[[]]],[11,"set_system_error_signaled","","Indicates that the device has detected a critical error in…",14,[[]]],[11,"set_master_abort_received","","Indicates whether the transaction was aborted with a…",14,[[]]],[11,"set_target_abort_received","","Indicates whether the transaction was aborted with a…",14,[[]]],[11,"set_target_abort_signaled","","Indicates that this function generated an abort on the…",14,[[]]],[11,"set_device_select_timing","","Indicates how quickly the device can assert the `DEVSEL#`…",14,[[]]],[11,"set_master_parity_error","","Indicates whether a partity error was detected while this…",14,[[]]],[11,"set_fast_back_to_back_capable","","Indicates whether the device supports receiving…",14,[[]]],[11,"set_double_clock_capable","","Indicates whether the device can run at 66 MHz (true).",14,[[]]],[11,"set_capabilities_list_available","","Indicates whether the configuration space contains a…",14,[[]]],[11,"set_interrupt_status","","Indicates whether the device wants to signal an interrupt,…",14,[[]]],[11,"capable","","Indicates whether the function has a self-test capability.",15,[[]]],[11,"start","","Setting this bit triggers the device to start its self…",15,[[]]],[11,"completion_code","","If a self-test is complete, then any non-zero value in…",15,[[]]],[11,"set_capable","","Indicates whether the function has a self-test capability.",15,[[]]],[11,"set_start","","Setting this bit triggers the device to start its self…",15,[[]]],[11,"set_completion_code","","If a self-test is complete, then any non-zero value in…",15,[[]]],[11,"address_space","","Indicates whether this BAR points to memory or I/O space",16,[[],["addressspace",4]]],[11,"prefetchable","","Indicates whether the host can safely cache the memory…",16,[[]]],[11,"address_width","","Size of address bus supported by this PCI function.",16,[[],["addresswidth",4]]],[11,"address_u32","","The address as a 32-bit number.",16,[[]]],[11,"address_u64","","The address as a 64-bit number, when combined with the…",16,[[]]],[11,"id","","Capability ID defined by PCI-SIG",17,[[]]],[11,"next_offset","","Byte offset within capability space of next capability…",17,[[]]],[11,"set_id","","Capability ID defined by PCI-SIG",17,[[]]],[11,"set_next_offset","","Byte offset within capability space of next capability…",17,[[]]],[17,"MAX_DEVICE","tartan_pci","Highest device number allowed by the PCI specification.",null,null],[17,"MAX_FUNCTION","","Highest function number allowed by the PCI specification.",null,null],[17,"INVALID_VENDOR","","Placeholder value that will always be returned in the…",null,null],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","tartan_pci::access","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"from","tartan_pci::access::io","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"from","tartan_pci::config","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"from","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",14,[[]]],[11,"borrow","","",14,[[]]],[11,"borrow_mut","","",14,[[]]],[11,"try_from","","",14,[[],["result",4]]],[11,"into","","",14,[[]]],[11,"try_into","","",14,[[],["result",4]]],[11,"type_id","","",14,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"from","","",16,[[]]],[11,"borrow","","",16,[[]]],[11,"borrow_mut","","",16,[[]]],[11,"try_from","","",16,[[],["result",4]]],[11,"into","","",16,[[]]],[11,"try_into","","",16,[[],["result",4]]],[11,"type_id","","",16,[[],["typeid",3]]],[11,"from","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"get_register","tartan_pci::access","",18,[[["configselector",3]]]],[11,"set_register","","",18,[[["configselector",3]]]],[11,"get_register","tartan_pci::access::io","",19,[[["configselector",3]]]],[11,"set_register","","",19,[[["configselector",3]]]],[11,"from","tartan_pci::config","",6,[[]]],[11,"from","","",7,[[]]],[11,"from","","",8,[[]]],[11,"from","","",9,[[]]],[11,"from","","",10,[[]]],[11,"from","","",11,[[]]],[11,"from","","",12,[[]]],[11,"from","","",13,[[]]],[11,"from","","",14,[[]]],[11,"from","","",15,[[]]],[11,"from","","",17,[[]]],[11,"fmt","tartan_pci::access","",1,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","tartan_pci::access::io","",19,[[["formatter",3]],["result",6]]],[11,"fmt","tartan_pci::config","",6,[[["formatter",3]],["result",6]]],[11,"fmt","","",7,[[["formatter",3]],["result",6]]],[11,"fmt","","",8,[[["formatter",3]],["result",6]]],[11,"fmt","","",9,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",12,[[["formatter",3]],["result",6]]],[11,"fmt","","",13,[[["formatter",3]],["result",6]]],[11,"fmt","","",14,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",16,[[["formatter",3]],["result",6]]],[11,"fmt","","",3,[[["formatter",3]],["result",6]]],[11,"fmt","","",4,[[["formatter",3]],["result",6]]],[11,"fmt","","",17,[[["formatter",3]],["result",6]]],[11,"eq","tartan_pci::access","",1,[[["configselector",3]]]],[11,"ne","","",1,[[["configselector",3]]]],[11,"eq","","",18,[[["memmapconfigaccess",3]]]],[11,"ne","","",18,[[["memmapconfigaccess",3]]]],[11,"eq","tartan_pci::access::io","",19,[[["ioconfigaccess",3]]]],[11,"eq","tartan_pci::config","",6,[[["headerregister0",3]]]],[11,"ne","","",6,[[["headerregister0",3]]]],[11,"eq","","",7,[[["headerregister1",3]]]],[11,"ne","","",7,[[["headerregister1",3]]]],[11,"eq","","",8,[[["headerregister2",3]]]],[11,"ne","","",8,[[["headerregister2",3]]]],[11,"eq","","",9,[[["headerregister3",3]]]],[11,"ne","","",9,[[["headerregister3",3]]]],[11,"eq","","",10,[[["type0headerregister11",3]]]],[11,"ne","","",10,[[["type0headerregister11",3]]]],[11,"eq","","",11,[[["type0headerregister13",3]]]],[11,"ne","","",11,[[["type0headerregister13",3]]]],[11,"eq","","",12,[[["type0headerregister15",3]]]],[11,"ne","","",12,[[["type0headerregister15",3]]]],[11,"eq","","",13,[[["commandregister",3]]]],[11,"ne","","",13,[[["commandregister",3]]]],[11,"eq","","",14,[[["statusregister",3]]]],[11,"ne","","",14,[[["statusregister",3]]]],[11,"eq","","",15,[[["selftest",3]]]],[11,"ne","","",15,[[["selftest",3]]]],[11,"eq","","",16,[[["baseaddressregister",3]]]],[11,"ne","","",16,[[["baseaddressregister",3]]]],[11,"eq","","",3,[[["addressspace",4]]]],[11,"eq","","",4,[[["addresswidth",4]]]],[11,"eq","","",17,[[["genericcapabilityregister",3]]]],[11,"ne","","",17,[[["genericcapabilityregister",3]]]],[11,"clone","tartan_pci::access","",1,[[],["configselector",3]]],[11,"clone","","",18,[[],["memmapconfigaccess",3]]],[11,"clone","tartan_pci::access::io","",19,[[],["ioconfigaccess",3]]],[11,"clone","tartan_pci::config","",6,[[],["headerregister0",3]]],[11,"clone","","",7,[[],["headerregister1",3]]],[11,"clone","","",8,[[],["headerregister2",3]]],[11,"clone","","",9,[[],["headerregister3",3]]],[11,"clone","","",10,[[],["type0headerregister11",3]]],[11,"clone","","",11,[[],["type0headerregister13",3]]],[11,"clone","","",12,[[],["type0headerregister15",3]]],[11,"clone","","",13,[[],["commandregister",3]]],[11,"clone","","",14,[[],["statusregister",3]]],[11,"clone","","",15,[[],["selftest",3]]],[11,"clone","","",16,[[],["baseaddressregister",3]]],[11,"clone","","",3,[[],["addressspace",4]]],[11,"clone","","",4,[[],["addresswidth",4]]],[11,"clone","","",17,[[],["genericcapabilityregister",3]]],[11,"default","tartan_pci::access","",1,[[],["configselector",3]]],[11,"default","tartan_pci::access::io","",19,[[],["ioconfigaccess",3]]],[11,"default","tartan_pci::config","",6,[[],["headerregister0",3]]],[11,"default","","",7,[[],["headerregister1",3]]],[11,"default","","",8,[[],["headerregister2",3]]],[11,"default","","",9,[[],["headerregister3",3]]],[11,"default","","",10,[[],["type0headerregister11",3]]],[11,"default","","",11,[[],["type0headerregister13",3]]],[11,"default","","",12,[[],["type0headerregister15",3]]],[11,"default","","",13,[[],["commandregister",3]]],[11,"default","","",14,[[],["statusregister",3]]],[11,"default","","",15,[[],["selftest",3]]],[11,"default","","",16,[[],["baseaddressregister",3]]],[11,"default","","",17,[[],["genericcapabilityregister",3]]]],"p":[[3,"CapabilityEntry"],[3,"ConfigSelector"],[8,"ConfigAccess"],[4,"AddressSpace"],[4,"AddressWidth"],[8,"FixedConfigRegister"],[3,"HeaderRegister0"],[3,"HeaderRegister1"],[3,"HeaderRegister2"],[3,"HeaderRegister3"],[3,"Type0HeaderRegister11"],[3,"Type0HeaderRegister13"],[3,"Type0HeaderRegister15"],[3,"CommandRegister"],[3,"StatusRegister"],[3,"SelfTest"],[3,"BaseAddressRegister"],[3,"GenericCapabilityRegister"],[3,"MemMapConfigAccess"],[3,"IOConfigAccess"]]},\
"tartan_serial":{"doc":"Support for Universal Asynchronous Receiver/Transmitter…","i":[[3,"LineMode","tartan_serial","Speed and other line protocol settings.",null,null],[12,"bits_per_second","","Baud rate of line protocol.",0,null],[12,"data_bits","","Number of data bits per word in line protocol.",0,null],[12,"parity","","Parity setting for line protocol.",0,null],[12,"extended_stop","","Use 1.5 or 2 stop bits (depending on baud rate) if set. If…",0,null],[3,"NullUART","","Dummy UART driver that drops outgoing data and never…",null,null],[4,"Parity","","Parity setting for line protocol.",null,null],[13,"None","","No parity bit.",1,null],[13,"Odd","","Set parity so that there are an odd number of high bits in…",1,null],[13,"Even","","Set parity so that there are an even number of high bits…",1,null],[13,"High","","Set parity bit high unconditionally (sticky).",1,null],[13,"Low","","Set parity bit low unconditionally (sticky).",1,null],[0,"model_16550","","Driver for the common UART interface provided on PCs that…",null,null],[3,"ActualRegisterAccess","tartan_serial::model_16550","Strategy that reads and writes registers from I/O space.",null,null],[3,"UART16550","","Driver for a PC UART based on the National Semiconductor…",null,null],[8,"RegisterAccess","","Strategy that provides access to registers for a 16550 UART.",null,null],[10,"read","","Read 8-bit register at the given port",2,[[]]],[10,"write","","Write 8-bit register at the given port",2,[[]]],[11,"new","","Create a driver for the UART with the given base I/O address",3,[[]]],[8,"UART","tartan_serial","High-level interface for UART drivers.",null,null],[10,"reset","","Stop transmission, clear buffers, and set the device to a…",4,[[]]],[10,"line_mode","","Get the device\'s active line protocol mode.",4,[[],["linemode",3]]],[10,"set_line_mode","","Update the device\'s line protocol mode.",4,[[["linemode",3]]]],[10,"write","","Send the given data through the UART. Blocks until all…",4,[[]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","tartan_serial::model_16550","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"read","","",6,[[]]],[11,"write","","",6,[[]]],[11,"reset","","",3,[[]]],[11,"line_mode","","",3,[[],["linemode",3]]],[11,"set_line_mode","","",3,[[["linemode",3]]]],[11,"write","","",3,[[]]],[11,"reset","tartan_serial","",5,[[]]],[11,"set_line_mode","","",5,[[["linemode",3]]]],[11,"write","","",5,[[]]],[11,"line_mode","","",5,[[],["linemode",3]]],[11,"fmt","","",0,[[["formatter",3]],["result",6]]],[11,"fmt","","",1,[[["formatter",3]],["result",6]]],[11,"eq","","",0,[[["linemode",3]]]],[11,"ne","","",0,[[["linemode",3]]]],[11,"eq","","",1,[[["parity",4]]]],[11,"clone","","",0,[[],["linemode",3]]],[11,"clone","","",1,[[],["parity",4]]],[11,"default","tartan_serial::model_16550","",6,[[],["actualregisteraccess",3]]],[11,"default","tartan_serial","",0,[[],["linemode",3]]],[11,"default","","",1,[[]]]],"p":[[3,"LineMode"],[4,"Parity"],[8,"RegisterAccess"],[3,"UART16550"],[8,"UART"],[3,"NullUART"],[3,"ActualRegisterAccess"]]},\
"tartan_uefi":{"doc":"Support for Unified Extensible Firmware Interface","i":[[3,"Handle","tartan_uefi","",null,null],[3,"Revision","","",null,null],[3,"Status","","",null,null],[3,"TableHeader","","",null,null],[12,"signature","","",0,null],[12,"revision","","",0,null],[12,"header_size","","",0,null],[12,"crc32","","",0,null],[3,"SystemTable","","",null,null],[12,"header","","",1,null],[12,"firmware_vendor","","",1,null],[12,"firmware_revision","","",1,null],[12,"console_in_handle","","",1,null],[12,"console_in","","",1,null],[12,"console_out_handle","","",1,null],[12,"console_out","","",1,null],[12,"std_err_handle","","",1,null],[12,"std_err","","",1,null],[12,"runtime_services","","",1,null],[12,"boot_services","","",1,null],[12,"config_entry_count","","",1,null],[12,"config_table","","",1,null],[3,"RuntimeServices","","",null,null],[12,"header","","",2,null],[3,"BootServices","","",null,null],[12,"header","","",3,null],[12,"free_pages","","",3,null],[12,"allocate_pool","","",3,null],[12,"free_pool","","",3,null],[12,"handle_protocol","","",3,null],[3,"GUID","","",null,null],[3,"ConfigurationTable","","",null,null],[12,"vendor_guid","","",4,null],[3,"MemoryDescriptor","","",null,null],[12,"memory_type","","",5,null],[12,"physical_start","","",5,null],[12,"virtual_start","","",5,null],[12,"page_count","","",5,null],[12,"attributes","","",5,null],[3,"MemoryMap","","",null,null],[12,"raw_map","","",6,null],[12,"key","","",6,null],[12,"descriptor_size","","",6,null],[12,"descriptor_version","","",6,null],[3,"MemoryType","","",null,null],[3,"AllocateType","","",null,null],[3,"MemoryAttributes","","",null,null],[3,"OpenProtocolAttributes","","",null,null],[0,"allocator","","`BootServices`-based heap allocator to support the…",null,null],[3,"BootAllocator","tartan_uefi::allocator","",null,null],[0,"global","tartan_uefi","Static pointer to the [`SystemTable`], used by features…",null,null],[7,"SYSTEM_TABLE","tartan_uefi::global","",null,null],[0,"io","tartan_uefi","[`SimpleTextOutput`]-based [`Write`] implementation to…",null,null],[3,"OutputStream","tartan_uefi::io","",null,null],[12,"last_result","","",7,null],[3,"Logger","","",null,null],[12,"0","","",8,null],[5,"encode_c_utf16","","Convert a Rust string to a buffer containing a…",null,[[],["box",3]]],[11,"new","","",7,[[["simpletextoutput",3]]]],[0,"proto","tartan_uefi","",null,null],[3,"SimpleTextInput","tartan_uefi::proto","",null,null],[3,"SimpleTextOutput","","",null,null],[12,"reset","","",9,null],[12,"output_string","","",9,null],[12,"test_string","","",9,null],[12,"mode","","",9,null],[3,"SimpleTextOutputMode","","",null,null],[12,"max_mode","","",10,null],[12,"mode","","",10,null],[12,"attribute","","",10,null],[12,"cursor_column","","",10,null],[12,"cursor_row","","",10,null],[12,"cursor_visible","","",10,null],[3,"LoadedImage","","",null,null],[12,"revision","","",11,null],[12,"parent_handle","","",11,null],[12,"system_table","","",11,null],[12,"device_handle","","",11,null],[12,"load_options_size","","",11,null],[12,"load_options","","",11,null],[12,"image_base","","",11,null],[12,"image_size","","",11,null],[12,"image_code_type","","",11,null],[12,"image_data_type","","",11,null],[12,"unload","","",11,null],[3,"SimpleFileSystem","","Protocol for accessing a file system supported by UEFI…",null,null],[12,"revision","","Implemented revision of the SimpleFileSystem protocol.",12,null],[3,"File","","Protocol for accessing a file or directory.",null,null],[12,"revision","","Implemented revision of the File protocol.",13,null],[3,"FileMode","","Controls how a file is opened.",null,null],[3,"FileAttributes","","Basic properties of a file or directory as defined by the…",null,null],[8,"Protocol","","",null,null],[18,"PROTOCOL_ID","","",14,null],[18,"MIN_REVISION","","",11,null],[18,"MIN_REVISION","","Minimum supported [`SimpleFileSystem::revision`]. Future…",12,null],[11,"open_volume","","Get a handle to the root of the file system.",12,[[],[["result",4],["file",3],["status",3]]]],[18,"MIN_REVISION","","Minimum supported [`SimpleFileSystem::revision`]. Future…",13,null],[11,"open","","Get a handle to a new file, relative to the directory…",13,[[["fileattributes",3],["filemode",3]],[["result",4],["file",3],["status",3]]]],[11,"close","","Flush and close the file or directory represented by the…",13,[[]]],[11,"delete","","Delete the file or directory represented by the current…",13,[[],["status",3]]],[11,"read","","Read file contents or a directory entry into the buffer.",13,[[],[["status",3],["result",4]]]],[11,"write","","Write the contents of `buffer` out to the current position.",13,[[],[["status",3],["result",4]]]],[11,"get_position","","Get the handle\'s current position in the file.",13,[[],[["status",3],["result",4]]]],[11,"set_position","","Set the handle\'s current position in the file.",13,[[],["result",6]]],[11,"flush","","Write any buffered changes.",13,[[],["result",6]]],[18,"Read","","File will be read, and should exist already.",15,null],[18,"ReadWrite","","File will be read and written, and should exist already.",15,null],[18,"ReadWriteCreate","","File will be read and written, and will be created if it…",15,null],[11,"name","","The name of the enum variant in code, if one is defined…",15,[[],["option",4]]],[6,"Result","tartan_uefi","",null,null],[17,"PAGE_SIZE","","Constant page size defined by UEFI specification for…",null,null],[8,"Table","","",null,null],[18,"SIGNATURE","","",16,null],[18,"MIN_REVISION","","",16,null],[10,"header","","",16,[[],["tableheader",3]]],[11,"verify","","",16,[[]]],[11,"verify_signature","","",16,[[]]],[11,"verify_revision","","",16,[[]]],[11,"verify_size","","",16,[[]]],[11,"verify_crc32","","",16,[[]]],[18,"NULL","","",17,null],[18,"V2_80","","",18,null],[18,"V2_70","","",18,null],[18,"V2_60","","",18,null],[18,"V2_50","","",18,null],[18,"V2_40","","",18,null],[18,"V2_31","","",18,null],[18,"V2_30","","",18,null],[18,"V2_20","","",18,null],[18,"V2_10","","",18,null],[18,"V2_00","","",18,null],[18,"V1_10","","",18,null],[18,"V1_02","","",18,null],[11,"name","","The name of the enum variant in code, if one is defined…",18,[[],["option",4]]],[18,"LATEST","","",18,null],[11,"major_version","","",18,[[]]],[11,"minor_version","","",18,[[]]],[11,"fix_version","","",18,[[]]],[18,"Success","","",19,null],[18,"WarnUnknownGlyph","","",19,null],[18,"WarnDeleteFailure","","",19,null],[18,"WarnWriteFailure","","",19,null],[18,"WarnBufferTooSmall","","",19,null],[18,"WarnStaleData","","",19,null],[18,"WarnFileSystem","","",19,null],[18,"WarnResetRequired","","",19,null],[18,"LoadError","","",19,null],[18,"InvalidParameter","","",19,null],[18,"Unsupported","","",19,null],[18,"BadBufferSize","","",19,null],[18,"BufferTooSmall","","",19,null],[18,"NotReady","","",19,null],[18,"DeviceError","","",19,null],[18,"WriteProtected","","",19,null],[18,"OutOfResources","","",19,null],[18,"VolumeCorrupted","","",19,null],[18,"VolumeFull","","",19,null],[18,"NoMedia","","",19,null],[18,"MediaChanged","","",19,null],[18,"NotFound","","",19,null],[18,"AccessDenied","","",19,null],[18,"NoResponse","","",19,null],[18,"NoMapping","","",19,null],[18,"Timeout","","",19,null],[18,"NotStarted","","",19,null],[18,"AlreadyStarted","","",19,null],[18,"Aborted","","",19,null],[18,"ICMPError","","",19,null],[18,"TFTPError","","",19,null],[18,"ProtocolError","","",19,null],[18,"IncompatibleVersion","","",19,null],[18,"SecurityViolation","","",19,null],[18,"CRCError","","",19,null],[18,"EndOfMedia","","",19,null],[18,"EndOfFile","","",19,null],[18,"InvalidLanguage","","",19,null],[18,"CompromisedData","","",19,null],[18,"HTTPError","","",19,null],[11,"name","","The name of the enum variant in code, if one is defined…",19,[[],["option",4]]],[18,"ERROR_BIT","","",19,null],[11,"is_error","","",19,[[]]],[11,"is_warning","","",19,[[]]],[11,"into_result","","Wraps success and warning codes in [`Ok`], and error codes…",19,[[],["result",6]]],[11,"exit_boot_services","","Safe(r) wrapper around…",1,[[["handle",3]],["memorymap",3]]],[11,"allocate_pages","","Allocate a number of pages of a given type of memory,…",3,[[["memorytype",3],["allocatetype",3],["option",4]],[["status",3],["result",4]]]],[11,"get_memory_map","","Get a map representing the status of all available memory.",3,[[],["memorymap",3]]],[11,"get_protocol","","Get the implementation of a protocol offered by the given…",3,[[["handle",3]],[["status",3],["result",4]]]],[11,"exit_boot_services","","Signal to UEFI that the OS is now taking over.",3,[[["handle",3]],["result",6]]],[11,"from","","",20,[[]]],[18,"ACPI_20_GUID","","",4,null],[18,"ACPI_GUID","","",4,null],[18,"SAL_SYSTEM_GUID","","",4,null],[18,"SMBIOS_GUID","","",4,null],[18,"SMBIOS3_GUID","","",4,null],[18,"MPS_GUID","","",4,null],[18,"MIN_VERSION","","",6,null],[11,"new","","",6,[[]]],[11,"verify","","",6,[[]]],[11,"verify_version","","",6,[[]]],[11,"verify_descriptor_size","","",6,[[]]],[11,"verify_map","","",6,[[]]],[11,"iter","","Iterate over memory descriptors contained in the map.",6,[[]]],[18,"Reserved","","Memory that is never available for use",21,null],[18,"LoaderCode","","Memory used for UEFI application code.",21,null],[18,"LoaderData","","Memory allocated by UEFI applications.",21,null],[18,"BootServicesCode","","Memory used for drivers that provide [`BootServices`].",21,null],[18,"BootServicesData","","Memory allocated by drivers that provide [`BootServices`].",21,null],[18,"RuntimeServicesCode","","Memory used for drivers that provide [`RuntimeServices`].",21,null],[18,"RuntimeServicesData","","Memory allocated by drivers that provide…",21,null],[18,"Conventional","","Free memory.",21,null],[18,"Unusable","","Damaged memory modules.",21,null],[18,"ACPIReclaim","","Memory that can be used after the OS initializes ACPI.",21,null],[18,"ACPINonVolatile","","Memory that must be preserved in ACPI states S1–S3.",21,null],[18,"MappedIO","","Memory mapped to device I/O.",21,null],[18,"MappedIOPortSpace","","Memory mapped to I/O ports.",21,null],[18,"ProcessorCode","","Memory used by processor firmware code.",21,null],[18,"Persistent","","Free nonvolatile memory.",21,null],[18,"MinOEMDefined","","Beginning of range (inclusive) for OEM-specific memory types",21,null],[18,"MaxOEMDefined","","End of range (inclusive) for OEM-specific memory types",21,null],[18,"MinOSDefined","","Beginning of range (inclusive) for operating…",21,null],[18,"MaxOSDefined","","End of range (inclusive) for operating system-specific…",21,null],[11,"name","","The name of the enum variant in code, if one is defined…",21,[[],["option",4]]],[18,"AnyAddress","","",22,null],[18,"MaxAddress","","",22,null],[18,"ExactAddress","","",22,null],[11,"name","","The name of the enum variant in code, if one is defined…",22,[[],["option",4]]],[11,"supports_uncacheable","","",23,[[]]],[11,"supports_write_combining","","",23,[[]]],[11,"supports_write_through","","",23,[[]]],[11,"supports_write_back","","",23,[[]]],[11,"supports_uncacheable_sem","","",23,[[]]],[11,"supports_write_protect","","",23,[[]]],[11,"supports_read_protect","","",23,[[]]],[11,"supports_exec_protect","","",23,[[]]],[11,"nonvolatile","","",23,[[]]],[11,"more_reliable","","",23,[[]]],[11,"supports_read_only","","",23,[[]]],[11,"specific_purpose","","",23,[[]]],[11,"supports_cpu_crypto","","",23,[[]]],[11,"runtime","","",23,[[]]],[11,"set_supports_uncacheable","","",23,[[]]],[11,"set_supports_write_combining","","",23,[[]]],[11,"set_supports_write_through","","",23,[[]]],[11,"set_supports_write_back","","",23,[[]]],[11,"set_supports_uncacheable_sem","","",23,[[]]],[11,"set_supports_write_protect","","",23,[[]]],[11,"set_supports_read_protect","","",23,[[]]],[11,"set_supports_exec_protect","","",23,[[]]],[11,"set_nonvolatile","","",23,[[]]],[11,"set_more_reliable","","",23,[[]]],[11,"set_supports_read_only","","",23,[[]]],[11,"set_specific_purpose","","",23,[[]]],[11,"set_supports_cpu_crypto","","",23,[[]]],[11,"set_runtime","","",23,[[]]],[18,"ByHandle","","",24,null],[18,"Get","","",24,null],[18,"Test","","",24,null],[18,"ByChild","","",24,null],[18,"ByDriver","","",24,null],[18,"Exclusive","","",24,null],[11,"name","","The name of the enum variant in code, if one is defined…",24,[[],["option",4]]],[14,"writeln_result","","Write formatted data to an [`OutputStream`] and return the…",null,null],[11,"from","","",17,[[]]],[11,"borrow","","",17,[[]]],[11,"borrow_mut","","",17,[[]]],[11,"try_from","","",17,[[],["result",4]]],[11,"into","","",17,[[]]],[11,"try_into","","",17,[[],["result",4]]],[11,"type_id","","",17,[[],["typeid",3]]],[11,"to_owned","","",17,[[]]],[11,"clone_into","","",17,[[]]],[11,"from","","",18,[[]]],[11,"borrow","","",18,[[]]],[11,"borrow_mut","","",18,[[]]],[11,"try_from","","",18,[[],["result",4]]],[11,"into","","",18,[[]]],[11,"try_into","","",18,[[],["result",4]]],[11,"type_id","","",18,[[],["typeid",3]]],[11,"to_owned","","",18,[[]]],[11,"clone_into","","",18,[[]]],[11,"to_string","","",18,[[],["string",3]]],[11,"from","","",19,[[]]],[11,"borrow","","",19,[[]]],[11,"borrow_mut","","",19,[[]]],[11,"try_from","","",19,[[],["result",4]]],[11,"into","","",19,[[]]],[11,"try_into","","",19,[[],["result",4]]],[11,"type_id","","",19,[[],["typeid",3]]],[11,"to_owned","","",19,[[]]],[11,"clone_into","","",19,[[]]],[11,"from","","",0,[[]]],[11,"borrow","","",0,[[]]],[11,"borrow_mut","","",0,[[]]],[11,"try_from","","",0,[[],["result",4]]],[11,"into","","",0,[[]]],[11,"try_into","","",0,[[],["result",4]]],[11,"type_id","","",0,[[],["typeid",3]]],[11,"from","","",1,[[]]],[11,"borrow","","",1,[[]]],[11,"borrow_mut","","",1,[[]]],[11,"try_from","","",1,[[],["result",4]]],[11,"into","","",1,[[]]],[11,"try_into","","",1,[[],["result",4]]],[11,"type_id","","",1,[[],["typeid",3]]],[11,"from","","",2,[[]]],[11,"borrow","","",2,[[]]],[11,"borrow_mut","","",2,[[]]],[11,"try_from","","",2,[[],["result",4]]],[11,"into","","",2,[[]]],[11,"try_into","","",2,[[],["result",4]]],[11,"type_id","","",2,[[],["typeid",3]]],[11,"from","","",3,[[]]],[11,"borrow","","",3,[[]]],[11,"borrow_mut","","",3,[[]]],[11,"try_from","","",3,[[],["result",4]]],[11,"into","","",3,[[]]],[11,"try_into","","",3,[[],["result",4]]],[11,"type_id","","",3,[[],["typeid",3]]],[11,"from","","",20,[[]]],[11,"borrow","","",20,[[]]],[11,"borrow_mut","","",20,[[]]],[11,"try_from","","",20,[[],["result",4]]],[11,"into","","",20,[[]]],[11,"try_into","","",20,[[],["result",4]]],[11,"type_id","","",20,[[],["typeid",3]]],[11,"to_owned","","",20,[[]]],[11,"clone_into","","",20,[[]]],[11,"from","","",4,[[]]],[11,"borrow","","",4,[[]]],[11,"borrow_mut","","",4,[[]]],[11,"try_from","","",4,[[],["result",4]]],[11,"into","","",4,[[]]],[11,"try_into","","",4,[[],["result",4]]],[11,"type_id","","",4,[[],["typeid",3]]],[11,"from","","",5,[[]]],[11,"borrow","","",5,[[]]],[11,"borrow_mut","","",5,[[]]],[11,"try_from","","",5,[[],["result",4]]],[11,"into","","",5,[[]]],[11,"try_into","","",5,[[],["result",4]]],[11,"type_id","","",5,[[],["typeid",3]]],[11,"from","","",6,[[]]],[11,"borrow","","",6,[[]]],[11,"borrow_mut","","",6,[[]]],[11,"try_from","","",6,[[],["result",4]]],[11,"into","","",6,[[]]],[11,"try_into","","",6,[[],["result",4]]],[11,"type_id","","",6,[[],["typeid",3]]],[11,"from","","",21,[[]]],[11,"borrow","","",21,[[]]],[11,"borrow_mut","","",21,[[]]],[11,"try_from","","",21,[[],["result",4]]],[11,"into","","",21,[[]]],[11,"try_into","","",21,[[],["result",4]]],[11,"type_id","","",21,[[],["typeid",3]]],[11,"to_owned","","",21,[[]]],[11,"clone_into","","",21,[[]]],[11,"from","","",22,[[]]],[11,"borrow","","",22,[[]]],[11,"borrow_mut","","",22,[[]]],[11,"try_from","","",22,[[],["result",4]]],[11,"into","","",22,[[]]],[11,"try_into","","",22,[[],["result",4]]],[11,"type_id","","",22,[[],["typeid",3]]],[11,"to_owned","","",22,[[]]],[11,"clone_into","","",22,[[]]],[11,"from","","",23,[[]]],[11,"borrow","","",23,[[]]],[11,"borrow_mut","","",23,[[]]],[11,"try_from","","",23,[[],["result",4]]],[11,"into","","",23,[[]]],[11,"try_into","","",23,[[],["result",4]]],[11,"type_id","","",23,[[],["typeid",3]]],[11,"to_owned","","",23,[[]]],[11,"clone_into","","",23,[[]]],[11,"from","","",24,[[]]],[11,"borrow","","",24,[[]]],[11,"borrow_mut","","",24,[[]]],[11,"try_from","","",24,[[],["result",4]]],[11,"into","","",24,[[]]],[11,"try_into","","",24,[[],["result",4]]],[11,"type_id","","",24,[[],["typeid",3]]],[11,"to_owned","","",24,[[]]],[11,"clone_into","","",24,[[]]],[11,"from","tartan_uefi::allocator","",25,[[]]],[11,"borrow","","",25,[[]]],[11,"borrow_mut","","",25,[[]]],[11,"try_from","","",25,[[],["result",4]]],[11,"into","","",25,[[]]],[11,"try_into","","",25,[[],["result",4]]],[11,"type_id","","",25,[[],["typeid",3]]],[11,"from","tartan_uefi::io","",7,[[]]],[11,"borrow","","",7,[[]]],[11,"borrow_mut","","",7,[[]]],[11,"try_from","","",7,[[],["result",4]]],[11,"into","","",7,[[]]],[11,"try_into","","",7,[[],["result",4]]],[11,"type_id","","",7,[[],["typeid",3]]],[11,"to_owned","","",7,[[]]],[11,"clone_into","","",7,[[]]],[11,"from","","",8,[[]]],[11,"borrow","","",8,[[]]],[11,"borrow_mut","","",8,[[]]],[11,"try_from","","",8,[[],["result",4]]],[11,"into","","",8,[[]]],[11,"try_into","","",8,[[],["result",4]]],[11,"type_id","","",8,[[],["typeid",3]]],[11,"from","tartan_uefi::proto","",26,[[]]],[11,"borrow","","",26,[[]]],[11,"borrow_mut","","",26,[[]]],[11,"try_from","","",26,[[],["result",4]]],[11,"into","","",26,[[]]],[11,"try_into","","",26,[[],["result",4]]],[11,"type_id","","",26,[[],["typeid",3]]],[11,"from","","",9,[[]]],[11,"borrow","","",9,[[]]],[11,"borrow_mut","","",9,[[]]],[11,"try_from","","",9,[[],["result",4]]],[11,"into","","",9,[[]]],[11,"try_into","","",9,[[],["result",4]]],[11,"type_id","","",9,[[],["typeid",3]]],[11,"from","","",10,[[]]],[11,"borrow","","",10,[[]]],[11,"borrow_mut","","",10,[[]]],[11,"try_from","","",10,[[],["result",4]]],[11,"into","","",10,[[]]],[11,"try_into","","",10,[[],["result",4]]],[11,"type_id","","",10,[[],["typeid",3]]],[11,"to_owned","","",10,[[]]],[11,"clone_into","","",10,[[]]],[11,"from","","",11,[[]]],[11,"borrow","","",11,[[]]],[11,"borrow_mut","","",11,[[]]],[11,"try_from","","",11,[[],["result",4]]],[11,"into","","",11,[[]]],[11,"try_into","","",11,[[],["result",4]]],[11,"type_id","","",11,[[],["typeid",3]]],[11,"from","","",12,[[]]],[11,"borrow","","",12,[[]]],[11,"borrow_mut","","",12,[[]]],[11,"try_from","","",12,[[],["result",4]]],[11,"into","","",12,[[]]],[11,"try_into","","",12,[[],["result",4]]],[11,"type_id","","",12,[[],["typeid",3]]],[11,"from","","",13,[[]]],[11,"borrow","","",13,[[]]],[11,"borrow_mut","","",13,[[]]],[11,"try_from","","",13,[[],["result",4]]],[11,"into","","",13,[[]]],[11,"try_into","","",13,[[],["result",4]]],[11,"type_id","","",13,[[],["typeid",3]]],[11,"from","","",15,[[]]],[11,"borrow","","",15,[[]]],[11,"borrow_mut","","",15,[[]]],[11,"try_from","","",15,[[],["result",4]]],[11,"into","","",15,[[]]],[11,"try_into","","",15,[[],["result",4]]],[11,"type_id","","",15,[[],["typeid",3]]],[11,"to_owned","","",15,[[]]],[11,"clone_into","","",15,[[]]],[11,"from","","",27,[[]]],[11,"borrow","","",27,[[]]],[11,"borrow_mut","","",27,[[]]],[11,"try_from","","",27,[[],["result",4]]],[11,"into","","",27,[[]]],[11,"try_into","","",27,[[],["result",4]]],[11,"type_id","","",27,[[],["typeid",3]]],[11,"to_owned","","",27,[[]]],[11,"clone_into","","",27,[[]]],[11,"header","tartan_uefi","",1,[[],["tableheader",3]]],[11,"header","","",2,[[],["tableheader",3]]],[11,"header","","",3,[[],["tableheader",3]]],[11,"from","","",18,[[]]],[11,"from","","",19,[[]]],[11,"from","","",28,[[["status",3]]]],[11,"from","","",20,[[]]],[11,"from","","",21,[[]]],[11,"from","","",22,[[]]],[11,"from","","",23,[[]]],[11,"from","","",24,[[]]],[11,"from","tartan_uefi::proto","",15,[[]]],[11,"from","","",27,[[]]],[11,"fmt","tartan_uefi","",17,[[["formatter",3]],["result",6]]],[11,"fmt","","",18,[[["formatter",3]],["result",6]]],[11,"fmt","","",19,[[["formatter",3]],["result",6]]],[11,"fmt","","",20,[[["formatter",3]],["result",6]]],[11,"fmt","","",21,[[["formatter",3]],["result",6]]],[11,"fmt","","",22,[[["formatter",3]],["result",6]]],[11,"fmt","","",23,[[["formatter",3]],["result",6]]],[11,"fmt","","",24,[[["formatter",3]],["result",6]]],[11,"fmt","tartan_uefi::proto","",26,[[["formatter",3]],["result",6]]],[11,"fmt","","",10,[[["formatter",3]],["result",6]]],[11,"fmt","","",11,[[["formatter",3]],["result",6]]],[11,"fmt","","",15,[[["formatter",3]],["result",6]]],[11,"fmt","","",27,[[["formatter",3]],["result",6]]],[11,"fmt","tartan_uefi","",18,[[["formatter",3]],["result",6]]],[11,"eq","","",17,[[["handle",3]]]],[11,"ne","","",17,[[["handle",3]]]],[11,"eq","","",18,[[["revision",3]]]],[11,"ne","","",18,[[["revision",3]]]],[11,"eq","","",19,[[["status",3]]]],[11,"ne","","",19,[[["status",3]]]],[11,"eq","","",20,[[["guid",3]]]],[11,"ne","","",20,[[["guid",3]]]],[11,"eq","","",21,[[["memorytype",3]]]],[11,"ne","","",21,[[["memorytype",3]]]],[11,"eq","","",22,[[["allocatetype",3]]]],[11,"ne","","",22,[[["allocatetype",3]]]],[11,"eq","","",23,[[["memoryattributes",3]]]],[11,"ne","","",23,[[["memoryattributes",3]]]],[11,"eq","","",24,[[["openprotocolattributes",3]]]],[11,"ne","","",24,[[["openprotocolattributes",3]]]],[11,"eq","tartan_uefi::proto","",10,[[["simpletextoutputmode",3]]]],[11,"ne","","",10,[[["simpletextoutputmode",3]]]],[11,"eq","","",15,[[["filemode",3]]]],[11,"ne","","",15,[[["filemode",3]]]],[11,"eq","","",27,[[["fileattributes",3]]]],[11,"ne","","",27,[[["fileattributes",3]]]],[11,"cmp","tartan_uefi","",18,[[["revision",3]],["ordering",4]]],[11,"cmp","","",19,[[["status",3]],["ordering",4]]],[11,"cmp","","",21,[[["memorytype",3]],["ordering",4]]],[11,"cmp","","",22,[[["allocatetype",3]],["ordering",4]]],[11,"cmp","","",24,[[["openprotocolattributes",3]],["ordering",4]]],[11,"cmp","tartan_uefi::proto","",15,[[["filemode",3]],["ordering",4]]],[11,"partial_cmp","tartan_uefi","",18,[[["revision",3]],[["ordering",4],["option",4]]]],[11,"lt","","",18,[[["revision",3]]]],[11,"le","","",18,[[["revision",3]]]],[11,"gt","","",18,[[["revision",3]]]],[11,"ge","","",18,[[["revision",3]]]],[11,"partial_cmp","","",19,[[["status",3]],[["ordering",4],["option",4]]]],[11,"lt","","",19,[[["status",3]]]],[11,"le","","",19,[[["status",3]]]],[11,"gt","","",19,[[["status",3]]]],[11,"ge","","",19,[[["status",3]]]],[11,"partial_cmp","","",21,[[["memorytype",3]],[["ordering",4],["option",4]]]],[11,"lt","","",21,[[["memorytype",3]]]],[11,"le","","",21,[[["memorytype",3]]]],[11,"gt","","",21,[[["memorytype",3]]]],[11,"ge","","",21,[[["memorytype",3]]]],[11,"partial_cmp","","",22,[[["allocatetype",3]],[["ordering",4],["option",4]]]],[11,"lt","","",22,[[["allocatetype",3]]]],[11,"le","","",22,[[["allocatetype",3]]]],[11,"gt","","",22,[[["allocatetype",3]]]],[11,"ge","","",22,[[["allocatetype",3]]]],[11,"partial_cmp","","",24,[[["openprotocolattributes",3]],[["ordering",4],["option",4]]]],[11,"lt","","",24,[[["openprotocolattributes",3]]]],[11,"le","","",24,[[["openprotocolattributes",3]]]],[11,"gt","","",24,[[["openprotocolattributes",3]]]],[11,"ge","","",24,[[["openprotocolattributes",3]]]],[11,"partial_cmp","tartan_uefi::proto","",15,[[["filemode",3]],[["ordering",4],["option",4]]]],[11,"lt","","",15,[[["filemode",3]]]],[11,"le","","",15,[[["filemode",3]]]],[11,"gt","","",15,[[["filemode",3]]]],[11,"ge","","",15,[[["filemode",3]]]],[11,"hash","tartan_uefi","",18,[[]]],[11,"hash","","",19,[[]]],[11,"hash","","",21,[[]]],[11,"hash","","",22,[[]]],[11,"hash","","",24,[[]]],[11,"hash","tartan_uefi::proto","",15,[[]]],[11,"write_str","tartan_uefi::io","",7,[[],["result",6]]],[11,"write_char","","",7,[[],["result",6]]],[11,"clone","","",7,[[],["outputstream",3]]],[11,"clone","tartan_uefi","",17,[[],["handle",3]]],[11,"clone","","",18,[[],["revision",3]]],[11,"clone","","",19,[[],["status",3]]],[11,"clone","","",20,[[],["guid",3]]],[11,"clone","","",21,[[],["memorytype",3]]],[11,"clone","","",22,[[],["allocatetype",3]]],[11,"clone","","",23,[[],["memoryattributes",3]]],[11,"clone","","",24,[[],["openprotocolattributes",3]]],[11,"clone","tartan_uefi::proto","",10,[[],["simpletextoutputmode",3]]],[11,"clone","","",15,[[],["filemode",3]]],[11,"clone","","",27,[[],["fileattributes",3]]],[11,"default","tartan_uefi","",18,[[],["revision",3]]],[11,"default","","",19,[[],["status",3]]],[11,"default","","",6,[[]]],[11,"default","","",21,[[],["memorytype",3]]],[11,"default","","",22,[[],["allocatetype",3]]],[11,"default","","",23,[[],["memoryattributes",3]]],[11,"default","","",24,[[],["openprotocolattributes",3]]],[11,"default","tartan_uefi::proto","",15,[[],["filemode",3]]],[11,"default","","",27,[[],["fileattributes",3]]],[11,"alloc","tartan_uefi::allocator","",25,[[["layout",3]]]],[11,"dealloc","","",25,[[["layout",3]]]],[11,"name","tartan_uefi","",18,[[],["option",4]]],[11,"name","","",19,[[],["option",4]]],[11,"name","","",21,[[],["option",4]]],[11,"name","","",22,[[],["option",4]]],[11,"name","","",24,[[],["option",4]]],[11,"name","tartan_uefi::proto","",15,[[],["option",4]]],[11,"log","tartan_uefi::io","",8,[[["record",3]]]],[11,"enabled","","",8,[[["metadata",3]]]],[11,"flush","","",8,[[]]]],"p":[[3,"TableHeader"],[3,"SystemTable"],[3,"RuntimeServices"],[3,"BootServices"],[3,"ConfigurationTable"],[3,"MemoryDescriptor"],[3,"MemoryMap"],[3,"OutputStream"],[3,"Logger"],[3,"SimpleTextOutput"],[3,"SimpleTextOutputMode"],[3,"LoadedImage"],[3,"SimpleFileSystem"],[3,"File"],[8,"Protocol"],[3,"FileMode"],[8,"Table"],[3,"Handle"],[3,"Revision"],[3,"Status"],[3,"GUID"],[3,"MemoryType"],[3,"AllocateType"],[3,"MemoryAttributes"],[3,"OpenProtocolAttributes"],[3,"BootAllocator"],[3,"SimpleTextInput"],[3,"FileAttributes"],[6,"Result"]]}\
}');
addSearchOptions(searchIndex);initSearch(searchIndex);