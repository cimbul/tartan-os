#![warn(clippy::pedantic)]

use insta::{assert_debug_snapshot, glob, with_settings};
use nom::error::VerboseError;
use std::fs;
use tartan_devicetree::blob::Tree;

#[test]
fn parse_all() {
    // Parse all DTB files and compare to past output
    glob!("dtb/*.dtb", |dtb_path| {
        // Make the autogenerated snapshot filenames less wordy
        let test_name = dtb_path.file_stem().unwrap().to_str().unwrap();
        with_settings!({snapshot_suffix => ""}, {
            let dtb_data = fs::read(dtb_path).unwrap();
            let tree = Tree::from_buffer::<()>(&dtb_data).unwrap();

            let structures: Vec<_> = tree
                .structure_iter::<VerboseError<&[u8]>>()
                .collect();
            assert_debug_snapshot!(format!("{test_name}_structures"), structures);

            let mem_reservations: Vec<_> = tree
                .memory_reservation_iter::<VerboseError<&[u8]>>()
                .collect();
            assert_debug_snapshot!(format!("{test_name}_mem_resrv"), mem_reservations);
        });
    });
}
