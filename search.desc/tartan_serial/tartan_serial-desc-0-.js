searchState.loadedDescShard("tartan_serial", 0, "Support for Universal Asynchronous Receiver/Transmitter …\nSet parity so that there are an even number of high bits …\nSet parity bit high unconditionally (sticky).\nSpeed and other line protocol settings.\nSet parity bit low unconditionally (sticky).\nNo parity bit.\nDummy UART driver that drops outgoing data and never …\nSet parity so that there are an odd number of high bits in …\nParity setting for line protocol.\nHigh-level interface for UART drivers.\nNewtype wrapper that allows a UART implementation to be …\nBits per second (including non-data bits) of line protocol.\nNumber of data bits per word in line protocol.\nUse 1.5 or 2 stop bits (depending on baud rate) if set. If …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nGet the device’s active line protocol mode.\nDriver for the common UART interface provided on PCs that …\nDriver for Arm’s <code>PrimeCell</code> PL011 UART\nParity setting for line protocol.\nStop transmission, clear buffers, and set the device to a …\nUpdate the device’s line protocol mode.\nSend the given data through the UART. Blocks until all …\nStrategy that reads and writes registers from I/O space.\nStrategy that provides access to registers for a 16550 …\nDriver for a PC UART based on the National Semiconductor …\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCreate a driver for the UART with the given base I/O …\nRead 8-bit register at the given port\nWrite 8-bit register at the given port\nMemory-mapped registers for PL011 UART.\nDriver for the PL011 UART.\nFrequency, in hertz, of the clock input to the UART.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nMemory-mapped registers for this device.")